import { Bridge } from './bridge';
declare const internalSharedData: {
    openInEditorHost: string;
    componentNameStyle: string;
    theme: string;
    displayDensity: string;
    timeFormat: string;
    recordVuex: boolean;
    cacheVuexSnapshotsEvery: number;
    cacheVuexSnapshotsLimit: number;
    snapshotLoading: boolean;
    componentEventsEnabled: boolean;
    performanceMonitoringEnabled: boolean;
    editableProps: boolean;
    logDetected: boolean;
    vuexNewBackend: boolean;
    vuexAutoload: boolean;
    vuexGroupGettersByModule: boolean;
    showMenuScrollTip: boolean;
    timelineTimeGrid: boolean;
    timelineScreenshots: boolean;
    menuStepScrolling: boolean;
    pluginPermissions: any;
    pluginSettings: any;
    pageConfig: any;
    legacyApps: boolean;
    trackUpdates: boolean;
    flashUpdates: boolean;
    debugInfo: boolean;
    isBrowser: boolean;
};
declare type TSharedData = typeof internalSharedData;
export interface SharedDataParams {
    bridge: Bridge;
    persist: boolean;
    Vue?: any;
}
export declare function initSharedData(params: SharedDataParams): Promise<void>;
export declare function onSharedDataInit(cb: any): () => void;
export declare function destroySharedData(): void;
export declare function watchSharedData<TKey extends keyof TSharedData>(prop: TKey, handler: (value: TSharedData[TKey], oldValue: TSharedData[TKey]) => unknown): () => void;
export declare const SharedData: Partial<{
    openInEditorHost: string;
    componentNameStyle: string;
    theme: string;
    displayDensity: string;
    timeFormat: string;
    recordVuex: boolean;
    cacheVuexSnapshotsEvery: number;
    cacheVuexSnapshotsLimit: number;
    snapshotLoading: boolean;
    componentEventsEnabled: boolean;
    performanceMonitoringEnabled: boolean;
    editableProps: boolean;
    logDetected: boolean;
    vuexNewBackend: boolean;
    vuexAutoload: boolean;
    vuexGroupGettersByModule: boolean;
    showMenuScrollTip: boolean;
    timelineTimeGrid: boolean;
    timelineScreenshots: boolean;
    menuStepScrolling: boolean;
    pluginPermissions: any;
    pluginSettings: any;
    pageConfig: any;
    legacyApps: boolean;
    trackUpdates: boolean;
    flashUpdates: boolean;
    debugInfo: boolean;
    isBrowser: boolean;
}>;
export {};
