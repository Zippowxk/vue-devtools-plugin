{"version":3,"file":"hook.js","sources":["webpack:///webpack/bootstrap","webpack:////Users/wxkmac/Documents/Github/vue-devtools/node_modules/@vue-devtools/app-backend/src/hook.js","webpack:///(webpack)/buildin/global.js","webpack:///src/hook.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/hook.js\");\n","// this script is injected into every page.\n\n/**\n * Install the hook on window, which is an event emitter.\n * Note because Chrome content scripts cannot directly modify the window object,\n * we are evaling this function by inserting a script tag. That's why we have\n * to inline the whole event emitter implementation here.\n *\n * @param {Window|global} target\n */\n\nexport function installHook (target) {\n  let listeners = {}\n\n  if (target.hasOwnProperty('__VUE_DEVTOOLS_GLOBAL_HOOK__')) return\n\n  const hook = {\n    Vue: null,\n\n    _buffer: [],\n\n    _replayBuffer (event) {\n      let buffer = this._buffer\n      this._buffer = []\n\n      for (let i = 0, l = buffer.length; i < l; i++) {\n        let allArgs = buffer[i]\n        allArgs[0] === event\n          ? this.emit.apply(this, allArgs)\n          : this._buffer.push(allArgs)\n      }\n    },\n\n    on (event, fn) {\n      const $event = '$' + event\n      if (listeners[$event]) {\n        listeners[$event].push(fn)\n      } else {\n        listeners[$event] = [fn]\n        this._replayBuffer(event)\n      }\n    },\n\n    once (event, fn) {\n      function on () {\n        this.off(event, on)\n        fn.apply(this, arguments)\n      }\n      this.on(event, on)\n    },\n\n    off (event, fn) {\n      event = '$' + event\n      if (!arguments.length) {\n        listeners = {}\n      } else {\n        const cbs = listeners[event]\n        if (cbs) {\n          if (!fn) {\n            listeners[event] = null\n          } else {\n            for (let i = 0, l = cbs.length; i < l; i++) {\n              const cb = cbs[i]\n              if (cb === fn || cb.fn === fn) {\n                cbs.splice(i, 1)\n                break\n              }\n            }\n          }\n        }\n      }\n    },\n\n    emit (event) {\n      const $event = '$' + event\n      let cbs = listeners[$event]\n      if (cbs) {\n        const eventArgs = [].slice.call(arguments, 1)\n        cbs = cbs.slice()\n        for (let i = 0, l = cbs.length; i < l; i++) {\n          cbs[i].apply(this, eventArgs)\n        }\n      } else {\n        const allArgs = [].slice.call(arguments)\n        this._buffer.push(allArgs)\n      }\n    }\n  }\n\n  hook.once('init', Vue => {\n    hook.Vue = Vue\n\n    Vue.prototype.$inspect = function () {\n      const fn = target.__VUE_DEVTOOLS_INSPECT__\n      fn && fn(this)\n    }\n  })\n\n  hook.once('vuex:init', store => {\n    hook.store = store\n    hook.initialState = clone(store.state)\n    const origReplaceState = store.replaceState.bind(store)\n    store.replaceState = state => {\n      hook.initialState = clone(state)\n      origReplaceState(state)\n    }\n    // Dynamic modules\n    let origRegister, origUnregister\n    if (store.registerModule) {\n      hook.storeModules = []\n      origRegister = store.registerModule.bind(store)\n      store.registerModule = (path, module, options) => {\n        if (typeof path === 'string') path = [path]\n        hook.storeModules.push({ path, module, options })\n        origRegister(path, module, options)\n        if (process.env.NODE_ENV !== 'production') console.log('early register module', path, module, options)\n      }\n      origUnregister = store.unregisterModule.bind(store)\n      store.unregisterModule = (path) => {\n        if (typeof path === 'string') path = [path]\n        const key = path.join('/')\n        const index = hook.storeModules.findIndex(m => m.path.join('/') === key)\n        if (index !== -1) hook.storeModules.splice(index, 1)\n        origUnregister(path)\n        if (process.env.NODE_ENV !== 'production') console.log('early unregister module', path)\n      }\n    }\n    hook.flushStoreModules = () => {\n      store.replaceState = origReplaceState\n      if (store.registerModule) {\n        store.registerModule = origRegister\n        store.unregisterModule = origUnregister\n      }\n      return hook.storeModules || []\n    }\n  })\n\n  Object.defineProperty(target, '__VUE_DEVTOOLS_GLOBAL_HOOK__', {\n    get () {\n      return hook\n    }\n  })\n\n  // Clone deep utility for cloning initial state of the store\n  // Forked from https://github.com/planttheidea/fast-copy\n  // Last update: 2019-10-30\n  // ⚠️ Don't forget to update `./hook.js`\n\n  // utils\n  const { toString: toStringFunction } = Function.prototype\n  const {\n    create,\n    defineProperty,\n    getOwnPropertyDescriptor,\n    getOwnPropertyNames,\n    getOwnPropertySymbols,\n    getPrototypeOf\n  } = Object\n  const { hasOwnProperty, propertyIsEnumerable } = Object.prototype\n\n  /**\n   * @enum\n   *\n   * @const {Object} SUPPORTS\n   *\n   * @property {boolean} SYMBOL_PROPERTIES are symbol properties supported\n   * @property {boolean} WEAKSET is WeakSet supported\n   */\n  const SUPPORTS = {\n    SYMBOL_PROPERTIES: typeof getOwnPropertySymbols === 'function',\n    WEAKSET: typeof WeakSet === 'function'\n  }\n\n  /**\n   * @function createCache\n   *\n   * @description\n   * get a new cache object to prevent circular references\n   *\n   * @returns the new cache object\n   */\n  const createCache = () => {\n    if (SUPPORTS.WEAKSET) {\n      return new WeakSet()\n    }\n\n    const object = create({\n      add: (value) => object._values.push(value),\n      has: (value) => !!~object._values.indexOf(value)\n    })\n\n    object._values = []\n\n    return object\n  }\n\n  /**\n   * @function getCleanClone\n   *\n   * @description\n   * get an empty version of the object with the same prototype it has\n   *\n   * @param object the object to build a clean clone from\n   * @param realm the realm the object resides in\n   * @returns the empty cloned object\n   */\n  const getCleanClone = (object, realm) => {\n    if (!object.constructor) {\n      return create(null)\n    }\n\n    // eslint-disable-next-line no-proto\n    const prototype = object.__proto__ || getPrototypeOf(object)\n\n    if (object.constructor === realm.Object) {\n      return prototype === realm.Object.prototype ? {} : create(prototype)\n    }\n\n    if (~toStringFunction.call(object.constructor).indexOf('[native code]')) {\n      try {\n        return new object.constructor()\n      } catch (e) {\n        // Error\n      }\n    }\n\n    return create(prototype)\n  }\n\n  /**\n   * @function getObjectCloneLoose\n   *\n   * @description\n   * get a copy of the object based on loose rules, meaning all enumerable keys\n   * and symbols are copied, but property descriptors are not considered\n   *\n   * @param object the object to clone\n   * @param realm the realm the object resides in\n   * @param handleCopy the function that handles copying the object\n   * @returns the copied object\n   */\n  const getObjectCloneLoose = (\n    object,\n    realm,\n    handleCopy,\n    cache\n  ) => {\n    const clone = getCleanClone(object, realm)\n\n    for (const key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        clone[key] = handleCopy(object[key], cache)\n      }\n    }\n\n    if (SUPPORTS.SYMBOL_PROPERTIES) {\n      const symbols = getOwnPropertySymbols(object)\n\n      if (symbols.length) {\n        for (let index = 0, symbol; index < symbols.length; index++) {\n          symbol = symbols[index]\n\n          if (propertyIsEnumerable.call(object, symbol)) {\n            clone[symbol] = handleCopy(object[symbol], cache)\n          }\n        }\n      }\n    }\n\n    return clone\n  }\n\n  /**\n   * @function getObjectCloneStrict\n   *\n   * @description\n   * get a copy of the object based on strict rules, meaning all keys and symbols\n   * are copied based on the original property descriptors\n   *\n   * @param object the object to clone\n   * @param realm the realm the object resides in\n   * @param handleCopy the function that handles copying the object\n   * @returns the copied object\n   */\n  const getObjectCloneStrict = (\n    object,\n    realm,\n    handleCopy,\n    cache\n  ) => {\n    const clone = getCleanClone(object, realm)\n\n    const properties = SUPPORTS.SYMBOL_PROPERTIES\n      ? [].concat(getOwnPropertyNames(object), getOwnPropertySymbols(object))\n      : getOwnPropertyNames(object)\n\n    if (properties.length) {\n      for (\n        let index = 0, property, descriptor;\n        index < properties.length;\n        index++\n      ) {\n        property = properties[index]\n\n        if (property !== 'callee' && property !== 'caller') {\n          descriptor = getOwnPropertyDescriptor(object, property)\n\n          descriptor.value = handleCopy(object[property], cache)\n\n          defineProperty(clone, property, descriptor)\n        }\n      }\n    }\n\n    return clone\n  }\n\n  /**\n   * @function getRegExpFlags\n   *\n   * @description\n   * get the flags to apply to the copied regexp\n   *\n   * @param regExp the regexp to get the flags of\n   * @returns the flags for the regexp\n   */\n  const getRegExpFlags = (regExp) => {\n    let flags = ''\n\n    if (regExp.global) {\n      flags += 'g'\n    }\n\n    if (regExp.ignoreCase) {\n      flags += 'i'\n    }\n\n    if (regExp.multiline) {\n      flags += 'm'\n    }\n\n    if (regExp.unicode) {\n      flags += 'u'\n    }\n\n    if (regExp.sticky) {\n      flags += 'y'\n    }\n\n    return flags\n  }\n\n  const { isArray } = Array\n\n  const GLOBAL_THIS = (() => {\n    if (typeof self !== 'undefined') {\n      return self\n    }\n\n    if (typeof window !== 'undefined') {\n      return window\n    }\n\n    if (typeof global !== 'undefined') {\n      return global\n    }\n\n    if (console && console.error) {\n      console.error('Unable to locate global object, returning \"this\".')\n    }\n  })()\n\n  /**\n   * @function clone\n   *\n   * @description\n   * copy an object deeply as much as possible\n   *\n   * If `strict` is applied, then all properties (including non-enumerable ones)\n   * are copied with their original property descriptors on both objects and arrays.\n   *\n   * The object is compared to the global constructors in the `realm` provided,\n   * and the native constructor is always used to ensure that extensions of native\n   * objects (allows in ES2015+) are maintained.\n   *\n   * @param object the object to copy\n   * @param [options] the options for copying with\n   * @param [options.isStrict] should the copy be strict\n   * @param [options.realm] the realm (this) object the object is copied from\n   * @returns the copied object\n   */\n  function clone (object, options) {\n    // manually coalesced instead of default parameters for performance\n    const isStrict = !!(options && options.isStrict)\n    const realm = (options && options.realm) || GLOBAL_THIS\n\n    const getObjectClone = isStrict\n      ? getObjectCloneStrict\n      : getObjectCloneLoose\n\n    /**\n     * @function handleCopy\n     *\n     * @description\n     * copy the object recursively based on its type\n     *\n     * @param object the object to copy\n     * @returns the copied object\n     */\n    const handleCopy = (\n      object,\n      cache\n    ) => {\n      if (!object || typeof object !== 'object' || cache.has(object)) {\n        return object\n      }\n\n      // DOM objects\n      if (object instanceof HTMLElement) {\n        return object.cloneNode(false)\n      }\n\n      const Constructor = object.constructor\n\n      // plain objects\n      if (Constructor === realm.Object) {\n        cache.add(object)\n\n        return getObjectClone(object, realm, handleCopy, cache)\n      }\n\n      let clone\n\n      // arrays\n      if (isArray(object)) {\n        cache.add(object)\n\n        // if strict, include non-standard properties\n        if (isStrict) {\n          return getObjectCloneStrict(object, realm, handleCopy, cache)\n        }\n\n        clone = new Constructor()\n\n        for (let index = 0; index < object.length; index++) {\n          clone[index] = handleCopy(object[index], cache)\n        }\n\n        return clone\n      }\n\n      // dates\n      if (object instanceof realm.Date) {\n        return new Constructor(object.getTime())\n      }\n\n      // regexps\n      if (object instanceof realm.RegExp) {\n        clone = new Constructor(\n          object.source,\n          object.flags || getRegExpFlags(object)\n        )\n\n        clone.lastIndex = object.lastIndex\n\n        return clone\n      }\n\n      // maps\n      if (realm.Map && object instanceof realm.Map) {\n        cache.add(object)\n\n        clone = new Constructor()\n\n        object.forEach((value, key) => {\n          clone.set(key, handleCopy(value, cache))\n        })\n\n        return clone\n      }\n\n      // sets\n      if (realm.Set && object instanceof realm.Set) {\n        cache.add(object)\n\n        clone = new Constructor()\n\n        object.forEach((value) => {\n          clone.add(handleCopy(value, cache))\n        })\n\n        return clone\n      }\n\n      // buffers (node-only)\n      if (realm.Buffer && realm.Buffer.isBuffer(object)) {\n        clone = realm.Buffer.allocUnsafe\n          ? realm.Buffer.allocUnsafe(object.length)\n          : new Constructor(object.length)\n\n        object.copy(clone)\n\n        return clone\n      }\n\n      // arraybuffers / dataviews\n      if (realm.ArrayBuffer) {\n        // dataviews\n        if (realm.ArrayBuffer.isView(object)) {\n          return new Constructor(object.buffer.slice(0))\n        }\n\n        // arraybuffers\n        if (object instanceof realm.ArrayBuffer) {\n          return object.slice(0)\n        }\n      }\n\n      // if the object cannot / should not be cloned, don't\n      if (\n        // promise-like\n        (hasOwnProperty.call(object, 'then') && typeof object.then === 'function') ||\n        // errors\n        object instanceof Error ||\n        // weakmaps\n        (realm.WeakMap && object instanceof realm.WeakMap) ||\n        // weaksets\n        (realm.WeakSet && object instanceof realm.WeakSet)\n      ) {\n        return object\n      }\n\n      cache.add(object)\n\n      // assume anything left is a custom constructor\n      return getObjectClone(object, realm, handleCopy, cache)\n    }\n\n    return handleCopy(object, createCache())\n  }\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { installHook } from '@back/hook'\n\ninstallHook(window)\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AACA;AACA;;;;;A","sourceRoot":""}