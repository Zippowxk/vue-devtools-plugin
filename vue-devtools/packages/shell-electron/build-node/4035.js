"use strict";exports.id=4035,exports.ids=[4035],exports.modules={44035:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": () => (/* binding */ conf),\n/* harmony export */   \"language\": () => (/* binding */ language)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar bounded = function (text) { return \"\\\\b\" + text + \"\\\\b\"; };\nvar identifierStart = '[_a-zA-Z]';\nvar identifierContinue = '[_a-zA-Z0-9]';\nvar identifier = bounded(\"\" + identifierStart + identifierContinue + \"*\");\nvar keywords = [\n    'targetScope',\n    'resource',\n    'module',\n    'param',\n    'var',\n    'output',\n    'for',\n    'in',\n    'if',\n    'existing'\n];\nvar namedLiterals = ['true', 'false', 'null'];\nvar nonCommentWs = \"[ \\\\t\\\\r\\\\n]\";\nvar numericLiteral = \"[0-9]+\";\nvar conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: \"'\", close: \"'\" },\n        { open: \"'''\", close: \"'''\" }\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\n        { open: \"'''\", close: \"'''\", notIn: ['string', 'comment'] }\n    ],\n    autoCloseBefore: \":.,=}])' \\n\\t\",\n    indentationRules: {\n        increaseIndentPattern: new RegExp('^((?!\\\\/\\\\/).)*(\\\\{[^}\"\\'`]*|\\\\([^)\"\\'`]*|\\\\[[^\\\\]\"\\'`]*)$'),\n        decreaseIndentPattern: new RegExp('^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$')\n    }\n};\nvar language = {\n    defaultToken: '',\n    tokenPostfix: '.bicep',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    symbols: /[=><!~?:&|+\\-*/^%]+/,\n    keywords: keywords,\n    namedLiterals: namedLiterals,\n    escapes: \"\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|'|\\\\${)\",\n    tokenizer: {\n        root: [{ include: '@expression' }, { include: '@whitespace' }],\n        stringVerbatim: [\n            { regex: \"(|'|'')[^']\", action: { token: 'string' } },\n            { regex: \"'''\", action: { token: 'string.quote', next: '@pop' } }\n        ],\n        stringLiteral: [\n            { regex: \"\\\\${\", action: { token: 'delimiter.bracket', next: '@bracketCounting' } },\n            { regex: \"[^\\\\\\\\'$]+\", action: { token: 'string' } },\n            { regex: '@escapes', action: { token: 'string.escape' } },\n            { regex: \"\\\\\\\\.\", action: { token: 'string.escape.invalid' } },\n            { regex: \"'\", action: { token: 'string', next: '@pop' } }\n        ],\n        bracketCounting: [\n            { regex: \"{\", action: { token: 'delimiter.bracket', next: '@bracketCounting' } },\n            { regex: \"}\", action: { token: 'delimiter.bracket', next: '@pop' } },\n            { include: 'expression' }\n        ],\n        comment: [\n            { regex: \"[^\\\\*]+\", action: { token: 'comment' } },\n            { regex: \"\\\\*\\\\/\", action: { token: 'comment', next: '@pop' } },\n            { regex: \"[\\\\/*]\", action: { token: 'comment' } }\n        ],\n        whitespace: [\n            { regex: nonCommentWs },\n            { regex: \"\\\\/\\\\*\", action: { token: 'comment', next: '@comment' } },\n            { regex: \"\\\\/\\\\/.*$\", action: { token: 'comment' } }\n        ],\n        expression: [\n            { regex: \"'''\", action: { token: 'string.quote', next: '@stringVerbatim' } },\n            { regex: \"'\", action: { token: 'string.quote', next: '@stringLiteral' } },\n            { regex: numericLiteral, action: { token: 'number' } },\n            {\n                regex: identifier,\n                action: {\n                    cases: {\n                        '@keywords': { token: 'keyword' },\n                        '@namedLiterals': { token: 'keyword' },\n                        '@default': { token: 'identifier' }\n                    }\n                }\n            }\n        ]\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQwMzUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxRQUFRLFlBQVksR0FBRztBQUNqQyxVQUFVLHVCQUF1QjtBQUNqQyxVQUFVLHVCQUF1QjtBQUNqQyxVQUFVLHVCQUF1QjtBQUNqQyxVQUFVO0FBQ1Y7QUFDQTtBQUNBLFVBQVUsUUFBUSxZQUFZLEdBQUc7QUFDakMsVUFBVSx1QkFBdUI7QUFDakMsVUFBVSx1QkFBdUI7QUFDakMsVUFBVSxxREFBcUQ7QUFDL0QsVUFBVTtBQUNWO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsOERBQThELEdBQUc7QUFDakUsMEVBQTBFO0FBQzFFO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFVBQVUsUUFBUSxZQUFZLDZCQUE2QjtBQUMzRCxVQUFVLGtEQUFrRDtBQUM1RCxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsYUFBYSxrQkFBa0I7QUFDcEQ7QUFDQSxpQkFBaUIsd0JBQXdCLElBQUksd0JBQXdCO0FBQ3JFO0FBQ0EsY0FBYyxnQ0FBZ0MsbUJBQW1CO0FBQ2pFLGNBQWMsd0JBQXdCO0FBQ3RDO0FBQ0E7QUFDQSxjQUFjLFlBQVksYUFBYSx3REFBd0Q7QUFDL0YsY0FBYywrQkFBK0IsbUJBQW1CO0FBQ2hFLGNBQWMsNkJBQTZCLDBCQUEwQjtBQUNyRSxjQUFjLDBCQUEwQixrQ0FBa0M7QUFDMUUsY0FBYyxzQkFBc0I7QUFDcEM7QUFDQTtBQUNBLGNBQWMsU0FBUyxhQUFhLHdEQUF3RDtBQUM1RixjQUFjLFNBQVMsYUFBYSw0Q0FBNEM7QUFDaEYsY0FBYztBQUNkO0FBQ0E7QUFDQSxjQUFjLDRCQUE0QixvQkFBb0I7QUFDOUQsY0FBYywyQkFBMkIsa0NBQWtDO0FBQzNFLGNBQWMsMkJBQTJCO0FBQ3pDO0FBQ0E7QUFDQSxjQUFjLHFCQUFxQjtBQUNuQyxjQUFjLDJCQUEyQixzQ0FBc0M7QUFDL0UsY0FBYyw4QkFBOEI7QUFDNUM7QUFDQTtBQUNBLGNBQWMsd0JBQXdCLGtEQUFrRDtBQUN4RixjQUFjLHNCQUFzQixpREFBaUQ7QUFDckYsY0FBYyxpQ0FBaUMsbUJBQW1CO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGtCQUFrQjtBQUN6RCw0Q0FBNEMsa0JBQWtCO0FBQzlELHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdnVlL2RldnRvb2xzLy4uLy4uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvYmljZXAvYmljZXAuanM/ZjM1YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbnZhciBib3VuZGVkID0gZnVuY3Rpb24gKHRleHQpIHsgcmV0dXJuIFwiXFxcXGJcIiArIHRleHQgKyBcIlxcXFxiXCI7IH07XG52YXIgaWRlbnRpZmllclN0YXJ0ID0gJ1tfYS16QS1aXSc7XG52YXIgaWRlbnRpZmllckNvbnRpbnVlID0gJ1tfYS16QS1aMC05XSc7XG52YXIgaWRlbnRpZmllciA9IGJvdW5kZWQoXCJcIiArIGlkZW50aWZpZXJTdGFydCArIGlkZW50aWZpZXJDb250aW51ZSArIFwiKlwiKTtcbnZhciBrZXl3b3JkcyA9IFtcbiAgICAndGFyZ2V0U2NvcGUnLFxuICAgICdyZXNvdXJjZScsXG4gICAgJ21vZHVsZScsXG4gICAgJ3BhcmFtJyxcbiAgICAndmFyJyxcbiAgICAnb3V0cHV0JyxcbiAgICAnZm9yJyxcbiAgICAnaW4nLFxuICAgICdpZicsXG4gICAgJ2V4aXN0aW5nJ1xuXTtcbnZhciBuYW1lZExpdGVyYWxzID0gWyd0cnVlJywgJ2ZhbHNlJywgJ251bGwnXTtcbnZhciBub25Db21tZW50V3MgPSBcIlsgXFxcXHRcXFxcclxcXFxuXVwiO1xudmFyIG51bWVyaWNMaXRlcmFsID0gXCJbMC05XStcIjtcbmV4cG9ydCB2YXIgY29uZiA9IHtcbiAgICBjb21tZW50czoge1xuICAgICAgICBsaW5lQ29tbWVudDogJy8vJyxcbiAgICAgICAgYmxvY2tDb21tZW50OiBbJy8qJywgJyovJ11cbiAgICB9LFxuICAgIGJyYWNrZXRzOiBbXG4gICAgICAgIFsneycsICd9J10sXG4gICAgICAgIFsnWycsICddJ10sXG4gICAgICAgIFsnKCcsICcpJ11cbiAgICBdLFxuICAgIHN1cnJvdW5kaW5nUGFpcnM6IFtcbiAgICAgICAgeyBvcGVuOiAneycsIGNsb3NlOiAnfScgfSxcbiAgICAgICAgeyBvcGVuOiAnWycsIGNsb3NlOiAnXScgfSxcbiAgICAgICAgeyBvcGVuOiAnKCcsIGNsb3NlOiAnKScgfSxcbiAgICAgICAgeyBvcGVuOiBcIidcIiwgY2xvc2U6IFwiJ1wiIH0sXG4gICAgICAgIHsgb3BlbjogXCInJydcIiwgY2xvc2U6IFwiJycnXCIgfVxuICAgIF0sXG4gICAgYXV0b0Nsb3NpbmdQYWlyczogW1xuICAgICAgICB7IG9wZW46ICd7JywgY2xvc2U6ICd9JyB9LFxuICAgICAgICB7IG9wZW46ICdbJywgY2xvc2U6ICddJyB9LFxuICAgICAgICB7IG9wZW46ICcoJywgY2xvc2U6ICcpJyB9LFxuICAgICAgICB7IG9wZW46IFwiJ1wiLCBjbG9zZTogXCInXCIsIG5vdEluOiBbJ3N0cmluZycsICdjb21tZW50J10gfSxcbiAgICAgICAgeyBvcGVuOiBcIicnJ1wiLCBjbG9zZTogXCInJydcIiwgbm90SW46IFsnc3RyaW5nJywgJ2NvbW1lbnQnXSB9XG4gICAgXSxcbiAgICBhdXRvQ2xvc2VCZWZvcmU6IFwiOi4sPX1dKScgXFxuXFx0XCIsXG4gICAgaW5kZW50YXRpb25SdWxlczoge1xuICAgICAgICBpbmNyZWFzZUluZGVudFBhdHRlcm46IG5ldyBSZWdFeHAoJ14oKD8hXFxcXC9cXFxcLykuKSooXFxcXHtbXn1cIlxcJ2BdKnxcXFxcKFteKVwiXFwnYF0qfFxcXFxbW15cXFxcXVwiXFwnYF0qKSQnKSxcbiAgICAgICAgZGVjcmVhc2VJbmRlbnRQYXR0ZXJuOiBuZXcgUmVnRXhwKCdeKCg/IS4qP1xcXFwvXFxcXCopLipcXFxcKi8pP1xcXFxzKltcXFxcfVxcXFxdXS4qJCcpXG4gICAgfVxufTtcbmV4cG9ydCB2YXIgbGFuZ3VhZ2UgPSB7XG4gICAgZGVmYXVsdFRva2VuOiAnJyxcbiAgICB0b2tlblBvc3RmaXg6ICcuYmljZXAnLFxuICAgIGJyYWNrZXRzOiBbXG4gICAgICAgIHsgb3BlbjogJ3snLCBjbG9zZTogJ30nLCB0b2tlbjogJ2RlbGltaXRlci5jdXJseScgfSxcbiAgICAgICAgeyBvcGVuOiAnWycsIGNsb3NlOiAnXScsIHRva2VuOiAnZGVsaW1pdGVyLnNxdWFyZScgfSxcbiAgICAgICAgeyBvcGVuOiAnKCcsIGNsb3NlOiAnKScsIHRva2VuOiAnZGVsaW1pdGVyLnBhcmVudGhlc2lzJyB9XG4gICAgXSxcbiAgICBzeW1ib2xzOiAvWz0+PCF+PzomfCtcXC0qL14lXSsvLFxuICAgIGtleXdvcmRzOiBrZXl3b3JkcyxcbiAgICBuYW1lZExpdGVyYWxzOiBuYW1lZExpdGVyYWxzLFxuICAgIGVzY2FwZXM6IFwiXFxcXFxcXFwodXtbMC05QS1GYS1mXSt9fG58cnx0fFxcXFxcXFxcfCd8XFxcXCR7KVwiLFxuICAgIHRva2VuaXplcjoge1xuICAgICAgICByb290OiBbeyBpbmNsdWRlOiAnQGV4cHJlc3Npb24nIH0sIHsgaW5jbHVkZTogJ0B3aGl0ZXNwYWNlJyB9XSxcbiAgICAgICAgc3RyaW5nVmVyYmF0aW06IFtcbiAgICAgICAgICAgIHsgcmVnZXg6IFwiKHwnfCcnKVteJ11cIiwgYWN0aW9uOiB7IHRva2VuOiAnc3RyaW5nJyB9IH0sXG4gICAgICAgICAgICB7IHJlZ2V4OiBcIicnJ1wiLCBhY3Rpb246IHsgdG9rZW46ICdzdHJpbmcucXVvdGUnLCBuZXh0OiAnQHBvcCcgfSB9XG4gICAgICAgIF0sXG4gICAgICAgIHN0cmluZ0xpdGVyYWw6IFtcbiAgICAgICAgICAgIHsgcmVnZXg6IFwiXFxcXCR7XCIsIGFjdGlvbjogeyB0b2tlbjogJ2RlbGltaXRlci5icmFja2V0JywgbmV4dDogJ0BicmFja2V0Q291bnRpbmcnIH0gfSxcbiAgICAgICAgICAgIHsgcmVnZXg6IFwiW15cXFxcXFxcXCckXStcIiwgYWN0aW9uOiB7IHRva2VuOiAnc3RyaW5nJyB9IH0sXG4gICAgICAgICAgICB7IHJlZ2V4OiAnQGVzY2FwZXMnLCBhY3Rpb246IHsgdG9rZW46ICdzdHJpbmcuZXNjYXBlJyB9IH0sXG4gICAgICAgICAgICB7IHJlZ2V4OiBcIlxcXFxcXFxcLlwiLCBhY3Rpb246IHsgdG9rZW46ICdzdHJpbmcuZXNjYXBlLmludmFsaWQnIH0gfSxcbiAgICAgICAgICAgIHsgcmVnZXg6IFwiJ1wiLCBhY3Rpb246IHsgdG9rZW46ICdzdHJpbmcnLCBuZXh0OiAnQHBvcCcgfSB9XG4gICAgICAgIF0sXG4gICAgICAgIGJyYWNrZXRDb3VudGluZzogW1xuICAgICAgICAgICAgeyByZWdleDogXCJ7XCIsIGFjdGlvbjogeyB0b2tlbjogJ2RlbGltaXRlci5icmFja2V0JywgbmV4dDogJ0BicmFja2V0Q291bnRpbmcnIH0gfSxcbiAgICAgICAgICAgIHsgcmVnZXg6IFwifVwiLCBhY3Rpb246IHsgdG9rZW46ICdkZWxpbWl0ZXIuYnJhY2tldCcsIG5leHQ6ICdAcG9wJyB9IH0sXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdleHByZXNzaW9uJyB9XG4gICAgICAgIF0sXG4gICAgICAgIGNvbW1lbnQ6IFtcbiAgICAgICAgICAgIHsgcmVnZXg6IFwiW15cXFxcKl0rXCIsIGFjdGlvbjogeyB0b2tlbjogJ2NvbW1lbnQnIH0gfSxcbiAgICAgICAgICAgIHsgcmVnZXg6IFwiXFxcXCpcXFxcL1wiLCBhY3Rpb246IHsgdG9rZW46ICdjb21tZW50JywgbmV4dDogJ0Bwb3AnIH0gfSxcbiAgICAgICAgICAgIHsgcmVnZXg6IFwiW1xcXFwvKl1cIiwgYWN0aW9uOiB7IHRva2VuOiAnY29tbWVudCcgfSB9XG4gICAgICAgIF0sXG4gICAgICAgIHdoaXRlc3BhY2U6IFtcbiAgICAgICAgICAgIHsgcmVnZXg6IG5vbkNvbW1lbnRXcyB9LFxuICAgICAgICAgICAgeyByZWdleDogXCJcXFxcL1xcXFwqXCIsIGFjdGlvbjogeyB0b2tlbjogJ2NvbW1lbnQnLCBuZXh0OiAnQGNvbW1lbnQnIH0gfSxcbiAgICAgICAgICAgIHsgcmVnZXg6IFwiXFxcXC9cXFxcLy4qJFwiLCBhY3Rpb246IHsgdG9rZW46ICdjb21tZW50JyB9IH1cbiAgICAgICAgXSxcbiAgICAgICAgZXhwcmVzc2lvbjogW1xuICAgICAgICAgICAgeyByZWdleDogXCInJydcIiwgYWN0aW9uOiB7IHRva2VuOiAnc3RyaW5nLnF1b3RlJywgbmV4dDogJ0BzdHJpbmdWZXJiYXRpbScgfSB9LFxuICAgICAgICAgICAgeyByZWdleDogXCInXCIsIGFjdGlvbjogeyB0b2tlbjogJ3N0cmluZy5xdW90ZScsIG5leHQ6ICdAc3RyaW5nTGl0ZXJhbCcgfSB9LFxuICAgICAgICAgICAgeyByZWdleDogbnVtZXJpY0xpdGVyYWwsIGFjdGlvbjogeyB0b2tlbjogJ251bWJlcicgfSB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJlZ2V4OiBpZGVudGlmaWVyLFxuICAgICAgICAgICAgICAgIGFjdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICBjYXNlczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ0BrZXl3b3Jkcyc6IHsgdG9rZW46ICdrZXl3b3JkJyB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BuYW1lZExpdGVyYWxzJzogeyB0b2tlbjogJ2tleXdvcmQnIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAnQGRlZmF1bHQnOiB7IHRva2VuOiAnaWRlbnRpZmllcicgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBdXG4gICAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///44035\n")}};