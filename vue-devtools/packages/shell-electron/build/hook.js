(()=>{"use strict";var __webpack_modules__={6793:(__unused_webpack_module,exports,__webpack_require__)=>{eval("var __webpack_unused_export__;\n // this script is injected into every page.\n\n__webpack_unused_export__ = ({\n  value: true\n});\nexports.U = void 0;\n/**\n * Install the hook on window, which is an event emitter.\n * Note because Chrome content scripts cannot directly modify the window object,\n * we are evaling this function by inserting a script tag. That's why we have\n * to inline the whole event emitter implementation here.\n *\n * @param {Window|global} target\n */\n\nfunction installHook(target, isIframe = false) {\n  const devtoolsVersion = '6.0';\n  let listeners = {};\n\n  function injectIframeHook(iframe) {\n    if (iframe.__vdevtools__injected) return;\n\n    try {\n      iframe.__vdevtools__injected = true;\n\n      const inject = () => {\n        try {\n          iframe.contentWindow.__VUE_DEVTOOLS_IFRAME__ = iframe;\n          const script = iframe.contentDocument.createElement('script');\n          script.textContent = ';(' + installHook.toString() + ')(window, true)';\n          iframe.contentDocument.documentElement.appendChild(script);\n          script.parentNode.removeChild(script);\n        } catch (e) {// Ignore\n        }\n      };\n\n      inject();\n      iframe.addEventListener('load', () => inject());\n    } catch (e) {// Ignore\n    }\n  }\n\n  let iframeChecks = 0;\n\n  function injectToIframes() {\n    if (typeof window === 'undefined') return;\n    const iframes = document.querySelectorAll('iframe:not([data-vue-devtools-ignore])');\n\n    for (const iframe of iframes) {\n      injectIframeHook(iframe);\n    }\n  }\n\n  injectToIframes();\n  const iframeTimer = setInterval(() => {\n    injectToIframes();\n    iframeChecks++;\n\n    if (iframeChecks >= 5) {\n      clearInterval(iframeTimer);\n    }\n  }, 1000); // TODO: 注意这里\n\n  if (Object.prototype.hasOwnProperty.call(target, '__VUE_DEVTOOLS_GLOBAL_HOOK__')) {\n    if (target.__VUE_DEVTOOLS_GLOBAL_HOOK__.devtoolsVersion !== devtoolsVersion) {\n      console.error(`Another version of Vue Devtools seems to be installed. Please enable only one version at a time.`);\n    }\n\n    return;\n  } // if (Object.prototype.hasOwnProperty.call(target, '__VUE_DEVTOOLS_GLOBAL_HOOK__')) return\n\n\n  let hook;\n\n  if (isIframe) {\n    const sendToParent = cb => {\n      try {\n        const hook = window.parent.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n        if (hook) {\n          return cb(hook);\n        } else {\n          console.warn('[Vue Devtools] No hook in parent window');\n        }\n      } catch (e) {\n        console.warn('[Vue Devtools] Failed to send message to parent window', e);\n      }\n    };\n\n    hook = {\n      devtoolsVersion,\n\n      // eslint-disable-next-line accessor-pairs\n      set Vue(value) {\n        sendToParent(hook => {\n          hook.Vue = value;\n        });\n      },\n\n      // eslint-disable-next-line accessor-pairs\n      set enabled(value) {\n        sendToParent(hook => {\n          hook.enabled = value;\n        });\n      },\n\n      on(event, fn) {\n        sendToParent(hook => hook.on(event, fn));\n      },\n\n      once(event, fn) {\n        sendToParent(hook => hook.once(event, fn));\n      },\n\n      off(event, fn) {\n        sendToParent(hook => hook.off(event, fn));\n      },\n\n      emit(event, ...args) {\n        sendToParent(hook => hook.emit(event, ...args));\n      },\n\n      cleanupBuffer(matchArg) {\n        var _a;\n\n        return (_a = sendToParent(hook => hook.cleanupBuffer(matchArg))) !== null && _a !== void 0 ? _a : false;\n      }\n\n    };\n  } else {\n    hook = {\n      devtoolsVersion,\n      Vue: null,\n      enabled: undefined,\n      _buffer: [],\n      _bufferMap: new Map(),\n      _bufferToRemove: new Map(),\n      store: null,\n      initialState: null,\n      storeModules: null,\n      flushStoreModules: null,\n      apps: [],\n\n      _replayBuffer(event) {\n        const buffer = this._buffer;\n        this._buffer = [];\n\n        this._bufferMap.clear();\n\n        this._bufferToRemove.clear();\n\n        for (let i = 0, l = buffer.length; i < l; i++) {\n          const allArgs = buffer[i].slice(1);\n          allArgs[0] === event // eslint-disable-next-line prefer-spread\n          ? this.emit.apply(this, allArgs) : this._buffer.push(buffer[i]);\n        }\n      },\n\n      on(event, fn) {\n        const $event = '$' + event;\n\n        if (listeners[$event]) {\n          listeners[$event].push(fn);\n        } else {\n          listeners[$event] = [fn];\n\n          this._replayBuffer(event);\n        }\n      },\n\n      once(event, fn) {\n        const on = (...args) => {\n          this.off(event, on);\n          return fn.apply(this, args);\n        };\n\n        this.on(event, on);\n      },\n\n      off(event, fn) {\n        event = '$' + event;\n\n        if (!arguments.length) {\n          listeners = {};\n        } else {\n          const cbs = listeners[event];\n\n          if (cbs) {\n            if (!fn) {\n              listeners[event] = null;\n            } else {\n              for (let i = 0, l = cbs.length; i < l; i++) {\n                const cb = cbs[i];\n\n                if (cb === fn || cb.fn === fn) {\n                  cbs.splice(i, 1);\n                  break;\n                }\n              }\n            }\n          }\n        }\n      },\n\n      emit(event, ...args) {\n        const $event = '$' + event;\n        let cbs = listeners[$event];\n\n        if (cbs) {\n          cbs = cbs.slice();\n\n          for (let i = 0, l = cbs.length; i < l; i++) {\n            try {\n              const result = cbs[i].apply(this, args);\n\n              if (typeof (result === null || result === void 0 ? void 0 : result.catch) === 'function') {\n                result.catch(e => {\n                  console.error(`[Hook] Error in async event handler for ${event} with args:`, args);\n                  console.error(e);\n                });\n              }\n            } catch (e) {\n              console.error(`[Hook] Error in event handler for ${event} with args:`, args);\n              console.error(e);\n            }\n          }\n        } else {\n          const buffered = [Date.now(), event, ...args];\n\n          this._buffer.push(buffered);\n\n          for (let i = 2; i < args.length; i++) {\n            if (typeof args[i] === 'object' && args[i]) {\n              // Save by component instance  (3rd, 4th or 5th arg)\n              this._bufferMap.set(args[i], buffered);\n\n              break;\n            }\n          }\n        }\n      },\n\n      /**\n       * Remove buffered events with any argument that is equal to the given value.\n       * @param matchArg Given value to match.\n       */\n      cleanupBuffer(matchArg) {\n        const inBuffer = this._bufferMap.has(matchArg);\n\n        if (inBuffer) {\n          // Mark event for removal\n          this._bufferToRemove.set(this._bufferMap.get(matchArg), true);\n        }\n\n        return inBuffer;\n      },\n\n      _cleanupBuffer() {\n        const now = Date.now(); // Clear buffer events that are older than 10 seconds or marked for removal\n\n        this._buffer = this._buffer.filter(args => !this._bufferToRemove.has(args) && now - args[0] < 10000);\n\n        this._bufferToRemove.clear();\n\n        this._bufferMap.clear();\n      }\n\n    };\n    setInterval(() => {\n      hook._cleanupBuffer();\n    }, 10000);\n    hook.once('init', Vue => {\n      hook.Vue = Vue;\n\n      if (Vue) {\n        Vue.prototype.$inspect = function () {\n          const fn = target.__VUE_DEVTOOLS_INSPECT__;\n          fn && fn(this);\n        };\n      }\n    });\n    hook.on('app:init', (app, version, types) => {\n      const appRecord = {\n        app,\n        version,\n        types\n      };\n      hook.apps.push(appRecord);\n      hook.emit('app:add', appRecord);\n    });\n    hook.once('vuex:init', store => {\n      hook.store = store;\n      hook.initialState = clone(store.state);\n      const origReplaceState = store.replaceState.bind(store);\n\n      store.replaceState = state => {\n        hook.initialState = clone(state);\n        origReplaceState(state);\n      }; // Dynamic modules\n\n\n      let origRegister, origUnregister;\n\n      if (store.registerModule) {\n        hook.storeModules = [];\n        origRegister = store.registerModule.bind(store);\n\n        store.registerModule = (path, module, options) => {\n          if (typeof path === 'string') path = [path];\n          hook.storeModules.push({\n            path,\n            module,\n            options\n          });\n          origRegister(path, module, options);\n\n          if (false) {}\n        };\n\n        origUnregister = store.unregisterModule.bind(store);\n\n        store.unregisterModule = path => {\n          if (typeof path === 'string') path = [path];\n          const key = path.join('/');\n          const index = hook.storeModules.findIndex(m => m.path.join('/') === key);\n          if (index !== -1) hook.storeModules.splice(index, 1);\n          origUnregister(path);\n\n          if (false) {}\n        };\n      }\n\n      hook.flushStoreModules = () => {\n        store.replaceState = origReplaceState;\n\n        if (store.registerModule) {\n          store.registerModule = origRegister;\n          store.unregisterModule = origUnregister;\n        }\n\n        return hook.storeModules || [];\n      };\n    });\n  }\n\n  Object.defineProperty(target, '__VUE_DEVTOOLS_GLOBAL_HOOK__', {\n    get() {\n      return hook;\n    }\n\n  }); // Handle apps initialized before hook injection\n\n  if (target.__VUE_DEVTOOLS_HOOK_REPLAY__) {\n    try {\n      target.__VUE_DEVTOOLS_HOOK_REPLAY__.forEach(cb => cb(hook));\n\n      target.__VUE_DEVTOOLS_HOOK_REPLAY__ = [];\n    } catch (e) {\n      console.error('[vue-devtools] Error during hook replay', e);\n    }\n  } // Clone deep utility for cloning initial state of the store\n  // Forked from https://github.com/planttheidea/fast-copy\n  // Last update: 2019-10-30\n  // ⚠️ Don't forget to update `./hook.js`\n  // utils\n\n\n  const {\n    toString: toStringFunction\n  } = Function.prototype;\n  const {\n    create,\n    defineProperty,\n    getOwnPropertyDescriptor,\n    getOwnPropertyNames,\n    getOwnPropertySymbols,\n    getPrototypeOf\n  } = Object;\n  const {\n    hasOwnProperty,\n    propertyIsEnumerable\n  } = Object.prototype;\n  /**\n   * @enum\n   *\n   * @const {Object} SUPPORTS\n   *\n   * @property {boolean} SYMBOL_PROPERTIES are symbol properties supported\n   * @property {boolean} WEAKSET is WeakSet supported\n   */\n\n  const SUPPORTS = {\n    SYMBOL_PROPERTIES: typeof getOwnPropertySymbols === 'function',\n    WEAKSET: typeof WeakSet === 'function'\n  };\n  /**\n   * @function createCache\n   *\n   * @description\n   * get a new cache object to prevent circular references\n   *\n   * @returns the new cache object\n   */\n\n  const createCache = () => {\n    if (SUPPORTS.WEAKSET) {\n      return new WeakSet();\n    }\n\n    const object = create({\n      add: value => object._values.push(value),\n      has: value => !!~object._values.indexOf(value)\n    });\n    object._values = [];\n    return object;\n  };\n  /**\n   * @function getCleanClone\n   *\n   * @description\n   * get an empty version of the object with the same prototype it has\n   *\n   * @param object the object to build a clean clone from\n   * @param realm the realm the object resides in\n   * @returns the empty cloned object\n   */\n\n\n  const getCleanClone = (object, realm) => {\n    if (!object.constructor) {\n      return create(null);\n    } // eslint-disable-next-line no-proto\n\n\n    const prototype = object.__proto__ || getPrototypeOf(object);\n\n    if (object.constructor === realm.Object) {\n      return prototype === realm.Object.prototype ? {} : create(prototype);\n    }\n\n    if (~toStringFunction.call(object.constructor).indexOf('[native code]')) {\n      try {\n        return new object.constructor();\n      } catch (e) {// Error\n      }\n    }\n\n    return create(prototype);\n  };\n  /**\n   * @function getObjectCloneLoose\n   *\n   * @description\n   * get a copy of the object based on loose rules, meaning all enumerable keys\n   * and symbols are copied, but property descriptors are not considered\n   *\n   * @param object the object to clone\n   * @param realm the realm the object resides in\n   * @param handleCopy the function that handles copying the object\n   * @returns the copied object\n   */\n\n\n  const getObjectCloneLoose = (object, realm, handleCopy, cache) => {\n    const clone = getCleanClone(object, realm);\n\n    for (const key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        clone[key] = handleCopy(object[key], cache);\n      }\n    }\n\n    if (SUPPORTS.SYMBOL_PROPERTIES) {\n      const symbols = getOwnPropertySymbols(object);\n\n      if (symbols.length) {\n        for (let index = 0, symbol; index < symbols.length; index++) {\n          symbol = symbols[index];\n\n          if (propertyIsEnumerable.call(object, symbol)) {\n            clone[symbol] = handleCopy(object[symbol], cache);\n          }\n        }\n      }\n    }\n\n    return clone;\n  };\n  /**\n   * @function getObjectCloneStrict\n   *\n   * @description\n   * get a copy of the object based on strict rules, meaning all keys and symbols\n   * are copied based on the original property descriptors\n   *\n   * @param object the object to clone\n   * @param realm the realm the object resides in\n   * @param handleCopy the function that handles copying the object\n   * @returns the copied object\n   */\n\n\n  const getObjectCloneStrict = (object, realm, handleCopy, cache) => {\n    const clone = getCleanClone(object, realm);\n    const properties = SUPPORTS.SYMBOL_PROPERTIES ? [].concat(getOwnPropertyNames(object), getOwnPropertySymbols(object)) : getOwnPropertyNames(object);\n\n    if (properties.length) {\n      for (let index = 0, property, descriptor; index < properties.length; index++) {\n        property = properties[index];\n\n        if (property !== 'callee' && property !== 'caller') {\n          descriptor = getOwnPropertyDescriptor(object, property);\n          descriptor.value = handleCopy(object[property], cache);\n          defineProperty(clone, property, descriptor);\n        }\n      }\n    }\n\n    return clone;\n  };\n  /**\n   * @function getRegExpFlags\n   *\n   * @description\n   * get the flags to apply to the copied regexp\n   *\n   * @param regExp the regexp to get the flags of\n   * @returns the flags for the regexp\n   */\n\n\n  const getRegExpFlags = regExp => {\n    let flags = '';\n\n    if (regExp.global) {\n      flags += 'g';\n    }\n\n    if (regExp.ignoreCase) {\n      flags += 'i';\n    }\n\n    if (regExp.multiline) {\n      flags += 'm';\n    }\n\n    if (regExp.unicode) {\n      flags += 'u';\n    }\n\n    if (regExp.sticky) {\n      flags += 'y';\n    }\n\n    return flags;\n  };\n\n  const {\n    isArray\n  } = Array;\n\n  const GLOBAL_THIS = (() => {\n    if (typeof self !== 'undefined') {\n      return self;\n    }\n\n    if (typeof window !== 'undefined') {\n      return window;\n    }\n\n    if (typeof __webpack_require__.g !== 'undefined') {\n      return __webpack_require__.g;\n    }\n\n    if (console && console.error) {\n      console.error('Unable to locate global object, returning \"this\".');\n    }\n  })();\n  /**\n   * @function clone\n   *\n   * @description\n   * copy an object deeply as much as possible\n   *\n   * If `strict` is applied, then all properties (including non-enumerable ones)\n   * are copied with their original property descriptors on both objects and arrays.\n   *\n   * The object is compared to the global constructors in the `realm` provided,\n   * and the native constructor is always used to ensure that extensions of native\n   * objects (allows in ES2015+) are maintained.\n   *\n   * @param object the object to copy\n   * @param [options] the options for copying with\n   * @param [options.isStrict] should the copy be strict\n   * @param [options.realm] the realm (this) object the object is copied from\n   * @returns the copied object\n   */\n\n\n  function clone(object, options = null) {\n    // manually coalesced instead of default parameters for performance\n    const isStrict = !!(options && options.isStrict);\n    const realm = options && options.realm || GLOBAL_THIS;\n    const getObjectClone = isStrict ? getObjectCloneStrict : getObjectCloneLoose;\n    /**\n     * @function handleCopy\n     *\n     * @description\n     * copy the object recursively based on its type\n     *\n     * @param object the object to copy\n     * @returns the copied object\n     */\n\n    const handleCopy = (object, cache) => {\n      if (!object || typeof object !== 'object' || cache.has(object)) {\n        return object;\n      } // DOM objects\n\n\n      if (typeof HTMLElement !== 'undefined' && object instanceof HTMLElement) {\n        return object.cloneNode(false);\n      }\n\n      const Constructor = object.constructor; // plain objects\n\n      if (Constructor === realm.Object) {\n        cache.add(object);\n        return getObjectClone(object, realm, handleCopy, cache);\n      }\n\n      let clone; // arrays\n\n      if (isArray(object)) {\n        cache.add(object); // if strict, include non-standard properties\n\n        if (isStrict) {\n          return getObjectCloneStrict(object, realm, handleCopy, cache);\n        }\n\n        clone = new Constructor();\n\n        for (let index = 0; index < object.length; index++) {\n          clone[index] = handleCopy(object[index], cache);\n        }\n\n        return clone;\n      } // dates\n\n\n      if (object instanceof realm.Date) {\n        return new Constructor(object.getTime());\n      } // regexps\n\n\n      if (object instanceof realm.RegExp) {\n        clone = new Constructor(object.source, object.flags || getRegExpFlags(object));\n        clone.lastIndex = object.lastIndex;\n        return clone;\n      } // maps\n\n\n      if (realm.Map && object instanceof realm.Map) {\n        cache.add(object);\n        clone = new Constructor();\n        object.forEach((value, key) => {\n          clone.set(key, handleCopy(value, cache));\n        });\n        return clone;\n      } // sets\n\n\n      if (realm.Set && object instanceof realm.Set) {\n        cache.add(object);\n        clone = new Constructor();\n        object.forEach(value => {\n          clone.add(handleCopy(value, cache));\n        });\n        return clone;\n      } // buffers (node-only)\n\n\n      if (realm.Buffer && realm.Buffer.isBuffer(object)) {\n        clone = realm.Buffer.allocUnsafe ? realm.Buffer.allocUnsafe(object.length) : new Constructor(object.length);\n        object.copy(clone);\n        return clone;\n      } // arraybuffers / dataviews\n\n\n      if (realm.ArrayBuffer) {\n        // dataviews\n        if (realm.ArrayBuffer.isView(object)) {\n          return new Constructor(object.buffer.slice(0));\n        } // arraybuffers\n\n\n        if (object instanceof realm.ArrayBuffer) {\n          return object.slice(0);\n        }\n      } // if the object cannot / should not be cloned, don't\n\n\n      if ( // promise-like\n      hasOwnProperty.call(object, 'then') && typeof object.then === 'function' || // errors\n      object instanceof Error || // weakmaps\n      realm.WeakMap && object instanceof realm.WeakMap || // weaksets\n      realm.WeakSet && object instanceof realm.WeakSet) {\n        return object;\n      }\n\n      cache.add(object); // assume anything left is a custom constructor\n\n      return getObjectClone(object, realm, handleCopy, cache);\n    };\n\n    return handleCopy(object, createCache());\n  }\n}\n\nexports.U = installHook;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6793\n")},79310:(__unused_webpack_module,exports)=>{eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getCatchedGetters = exports.getCustomStoreDetails = exports.getCustomRouterDetails = exports.isVueInstance = exports.getCustomObjectDetails = exports.getCustomInstanceDetails = exports.getInstanceMap = exports.backendInjections = void 0;\nexports.backendInjections = {\n  instanceMap: new Map(),\n  isVueInstance: () => false,\n  getCustomInstanceDetails: () => ({}),\n  getCustomObjectDetails: () => undefined\n};\n\nfunction getInstanceMap() {\n  return exports.backendInjections.instanceMap;\n}\n\nexports.getInstanceMap = getInstanceMap;\n\nfunction getCustomInstanceDetails(instance) {\n  return exports.backendInjections.getCustomInstanceDetails(instance);\n}\n\nexports.getCustomInstanceDetails = getCustomInstanceDetails;\n\nfunction getCustomObjectDetails(value, proto) {\n  return exports.backendInjections.getCustomObjectDetails(value, proto);\n}\n\nexports.getCustomObjectDetails = getCustomObjectDetails;\n\nfunction isVueInstance(value) {\n  return exports.backendInjections.isVueInstance(value);\n}\n\nexports.isVueInstance = isVueInstance; // @TODO refactor\n\nfunction getCustomRouterDetails(router) {\n  return {\n    _custom: {\n      type: 'router',\n      display: 'VueRouter',\n      value: {\n        options: router.options,\n        currentRoute: router.currentRoute\n      },\n      fields: {\n        abstract: true\n      }\n    }\n  };\n}\n\nexports.getCustomRouterDetails = getCustomRouterDetails; // @TODO refactor\n\nfunction getCustomStoreDetails(store) {\n  return {\n    _custom: {\n      type: 'store',\n      display: 'Store',\n      value: {\n        state: store.state,\n        getters: getCatchedGetters(store)\n      },\n      fields: {\n        abstract: true\n      }\n    }\n  };\n}\n\nexports.getCustomStoreDetails = getCustomStoreDetails; // @TODO refactor\n\nfunction getCatchedGetters(store) {\n  const getters = {};\n  const origGetters = store.getters || {};\n  const keys = Object.keys(origGetters);\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    Object.defineProperty(getters, key, {\n      enumerable: true,\n      get: () => {\n        try {\n          return origGetters[key];\n        } catch (e) {\n          return e;\n        }\n      }\n    });\n  }\n\n  return getters;\n}\n\nexports.getCatchedGetters = getCatchedGetters;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzkzMTAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWFBLHlCQUFBQSxHQUFvQjtFQUMvQkMsV0FBVyxFQUFFLElBQUlDLEdBQUosRUFEa0I7RUFFL0JDLGFBQWEsRUFBRyxNQUFNLEtBRlM7RUFHL0JDLHdCQUF3QixFQUFHLE9BQU8sRUFBUCxDQUhJO0VBSS9CQyxzQkFBc0IsRUFBRyxNQUFNQztBQUpBLENBQXBCOztBQU9iLFNBQWdCQyxjQUFoQixHQUE4QjtFQUM1QixPQUFPUCwwQkFBa0JDLFdBQXpCO0FBQ0Q7O0FBRkRELHNCQUFBQTs7QUFJQSxTQUFnQkksd0JBQWhCLENBQTBDSSxRQUExQyxFQUFrRDtFQUNoRCxPQUFPUiwwQkFBa0JJLHdCQUFsQixDQUEyQ0ksUUFBM0MsQ0FBUDtBQUNEOztBQUZEUixnQ0FBQUE7O0FBSUEsU0FBZ0JLLHNCQUFoQixDQUF3Q0ksS0FBeEMsRUFBK0NDLEtBQS9DLEVBQTREO0VBQzFELE9BQU9WLDBCQUFrQkssc0JBQWxCLENBQXlDSSxLQUF6QyxFQUFnREMsS0FBaEQsQ0FBUDtBQUNEOztBQUZEViw4QkFBQUE7O0FBSUEsU0FBZ0JHLGFBQWhCLENBQStCTSxLQUEvQixFQUFvQztFQUNsQyxPQUFPVCwwQkFBa0JHLGFBQWxCLENBQWdDTSxLQUFoQyxDQUFQO0FBQ0Q7O0FBRkRULHFCQUFBQSxpQixDQUlBOztBQUNBLFNBQWdCVyxzQkFBaEIsQ0FBd0NDLE1BQXhDLEVBQThDO0VBQzVDLE9BQU87SUFDTEMsT0FBTyxFQUFFO01BQ1BDLElBQUksRUFBRSxRQURDO01BRVBDLE9BQU8sRUFBRSxXQUZGO01BR1BOLEtBQUssRUFBRTtRQUNMTyxPQUFPLEVBQUVKLE1BQU0sQ0FBQ0ksT0FEWDtRQUVMQyxZQUFZLEVBQUVMLE1BQU0sQ0FBQ0s7TUFGaEIsQ0FIQTtNQU9QQyxNQUFNLEVBQUU7UUFDTkMsUUFBUSxFQUFFO01BREo7SUFQRDtFQURKLENBQVA7QUFhRDs7QUFkRG5CLDhCQUFBQSwwQixDQWdCQTs7QUFDQSxTQUFnQm9CLHFCQUFoQixDQUF1Q0MsS0FBdkMsRUFBNEM7RUFDMUMsT0FBTztJQUNMUixPQUFPLEVBQUU7TUFDUEMsSUFBSSxFQUFFLE9BREM7TUFFUEMsT0FBTyxFQUFFLE9BRkY7TUFHUE4sS0FBSyxFQUFFO1FBQ0xhLEtBQUssRUFBRUQsS0FBSyxDQUFDQyxLQURSO1FBRUxDLE9BQU8sRUFBRUMsaUJBQWlCLENBQUNILEtBQUQ7TUFGckIsQ0FIQTtNQU9QSCxNQUFNLEVBQUU7UUFDTkMsUUFBUSxFQUFFO01BREo7SUFQRDtFQURKLENBQVA7QUFhRDs7QUFkRG5CLDZCQUFBQSx5QixDQWdCQTs7QUFDQSxTQUFnQndCLGlCQUFoQixDQUFtQ0gsS0FBbkMsRUFBd0M7RUFDdEMsTUFBTUUsT0FBTyxHQUFHLEVBQWhCO0VBRUEsTUFBTUUsV0FBVyxHQUFHSixLQUFLLENBQUNFLE9BQU4sSUFBaUIsRUFBckM7RUFDQSxNQUFNRyxJQUFJLEdBQUdDLE1BQU0sQ0FBQ0QsSUFBUCxDQUFZRCxXQUFaLENBQWI7O0VBQ0EsS0FBSyxJQUFJRyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRixJQUFJLENBQUNHLE1BQXpCLEVBQWlDRCxDQUFDLEVBQWxDLEVBQXNDO0lBQ3BDLE1BQU1FLEdBQUcsR0FBR0osSUFBSSxDQUFDRSxDQUFELENBQWhCO0lBQ0FELE1BQU0sQ0FBQ0ksY0FBUCxDQUFzQlIsT0FBdEIsRUFBK0JPLEdBQS9CLEVBQW9DO01BQ2xDRSxVQUFVLEVBQUUsSUFEc0I7TUFFbENDLEdBQUcsRUFBRSxNQUFLO1FBQ1IsSUFBSTtVQUNGLE9BQU9SLFdBQVcsQ0FBQ0ssR0FBRCxDQUFsQjtRQUNELENBRkQsQ0FFRSxPQUFPSSxDQUFQLEVBQVU7VUFDVixPQUFPQSxDQUFQO1FBQ0Q7TUFDRjtJQVJpQyxDQUFwQztFQVVEOztFQUVELE9BQU9YLE9BQVA7QUFDRDs7QUFwQkR2Qix5QkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdnVlL2RldnRvb2xzLy4uL3NyYy9iYWNrZW5kLnRzP2M2NDYiXSwibmFtZXMiOlsiZXhwb3J0cyIsImluc3RhbmNlTWFwIiwiTWFwIiwiaXNWdWVJbnN0YW5jZSIsImdldEN1c3RvbUluc3RhbmNlRGV0YWlscyIsImdldEN1c3RvbU9iamVjdERldGFpbHMiLCJ1bmRlZmluZWQiLCJnZXRJbnN0YW5jZU1hcCIsImluc3RhbmNlIiwidmFsdWUiLCJwcm90byIsImdldEN1c3RvbVJvdXRlckRldGFpbHMiLCJyb3V0ZXIiLCJfY3VzdG9tIiwidHlwZSIsImRpc3BsYXkiLCJvcHRpb25zIiwiY3VycmVudFJvdXRlIiwiZmllbGRzIiwiYWJzdHJhY3QiLCJnZXRDdXN0b21TdG9yZURldGFpbHMiLCJzdG9yZSIsInN0YXRlIiwiZ2V0dGVycyIsImdldENhdGNoZWRHZXR0ZXJzIiwib3JpZ0dldHRlcnMiLCJrZXlzIiwiT2JqZWN0IiwiaSIsImxlbmd0aCIsImtleSIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///79310\n")},47294:(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Bridge = void 0;\n\nconst events_1 = __webpack_require__(22699);\n\nconst raf_1 = __webpack_require__(86283);\n\nconst BATCH_DURATION = 100;\n\nclass Bridge extends events_1.EventEmitter {\n  constructor(wall) {\n    super();\n    this.setMaxListeners(Infinity);\n    this.wall = wall;\n    wall.listen(messages => {\n      if (Array.isArray(messages)) {\n        messages.forEach(message => this._emit(message));\n      } else {\n        this._emit(messages);\n      }\n    });\n    this._batchingQueue = [];\n    this._sendingQueue = [];\n    this._receivingQueue = [];\n    this._sending = false;\n  }\n\n  on(event, listener) {\n    const wrappedListener = async (...args) => {\n      try {\n        await listener(...args);\n      } catch (e) {\n        console.error(`[Bridge] Error in listener for event ${event.toString()} with args:`, args);\n        console.error(e);\n      }\n    };\n\n    return super.on(event, wrappedListener);\n  }\n\n  send(event, payload) {\n    this._batchingQueue.push({\n      event,\n      payload\n    });\n\n    if (this._timer == null) {\n      this._timer = setTimeout(() => this._flush(), BATCH_DURATION);\n    }\n  }\n  /**\n   * Log a message to the devtools background page.\n   */\n\n\n  log(message) {\n    this.send('log', message);\n  }\n\n  _flush() {\n    if (this._batchingQueue.length) this._send(this._batchingQueue);\n    clearTimeout(this._timer);\n    this._timer = null;\n    this._batchingQueue = [];\n  } // @TODO types\n\n\n  _emit(message) {\n    if (typeof message === 'string') {\n      this.emit(message);\n    } else if (message._chunk) {\n      this._receivingQueue.push(message._chunk);\n\n      if (message.last) {\n        this.emit(message.event, this._receivingQueue);\n        this._receivingQueue = [];\n      }\n    } else if (message.event) {\n      this.emit(message.event, message.payload);\n    }\n  } // @TODO types\n\n\n  _send(messages) {\n    this._sendingQueue.push(messages);\n\n    this._nextSend();\n  }\n\n  _nextSend() {\n    if (!this._sendingQueue.length || this._sending) return;\n    this._sending = true;\n\n    const messages = this._sendingQueue.shift();\n\n    try {\n      this.wall.send(messages);\n    } catch (err) {\n      if (err.message === 'Message length exceeded maximum allowed length.') {\n        this._sendingQueue.splice(0, 0, messages.map(message => [message]));\n      }\n    }\n\n    this._sending = false;\n    (0, raf_1.raf)(() => this._nextSend());\n  }\n\n}\n\nexports.Bridge = Bridge;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEtBQWxCLEVBQXlCUCxPQUFPLENBQUNnQixPQUFqQztJQUNEO0VBQ0YsQ0E1RXFDLENBOEV0Qzs7O0VBQ0FPLEtBQUssQ0FBRTNCLFFBQUYsRUFBVTtJQUNiLEtBQUtPLGFBQUwsQ0FBbUJjLElBQW5CLENBQXdCckIsUUFBeEI7O0lBQ0EsS0FBS2dDLFNBQUw7RUFDRDs7RUFFREEsU0FBUztJQUNQLElBQUksQ0FBQyxLQUFLekIsYUFBTCxDQUFtQm1CLE1BQXBCLElBQThCLEtBQUtqQixRQUF2QyxFQUFpRDtJQUNqRCxLQUFLQSxRQUFMLEdBQWdCLElBQWhCOztJQUNBLE1BQU1ULFFBQVEsR0FBRyxLQUFLTyxhQUFMLENBQW1CMEIsS0FBbkIsRUFBakI7O0lBQ0EsSUFBSTtNQUNGLEtBQUtyQyxJQUFMLENBQVV1QixJQUFWLENBQWVuQixRQUFmO0lBQ0QsQ0FGRCxDQUVFLE9BQU9rQyxHQUFQLEVBQVk7TUFDWixJQUFJQSxHQUFHLENBQUM5QixPQUFKLEtBQWdCLGlEQUFwQixFQUF1RTtRQUNyRSxLQUFLRyxhQUFMLENBQW1CNEIsTUFBbkIsQ0FBMEIsQ0FBMUIsRUFBNkIsQ0FBN0IsRUFBZ0NuQyxRQUFRLENBQUNvQyxHQUFULENBQWFoQyxPQUFPLElBQUksQ0FBQ0EsT0FBRCxDQUF4QixDQUFoQztNQUNEO0lBQ0Y7O0lBQ0QsS0FBS0ssUUFBTCxHQUFnQixLQUFoQjtJQUNBLGVBQUksTUFBTSxLQUFLdUIsU0FBTCxFQUFWO0VBQ0Q7O0FBakdxQzs7QUFBeENLLGNBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZ1ZS9kZXZ0b29scy8uLi9zcmMvYnJpZGdlLnRzP2VkOWQiXSwibmFtZXMiOlsiQkFUQ0hfRFVSQVRJT04iLCJCcmlkZ2UiLCJldmVudHNfMSIsImNvbnN0cnVjdG9yIiwid2FsbCIsInNldE1heExpc3RlbmVycyIsIkluZmluaXR5IiwibGlzdGVuIiwibWVzc2FnZXMiLCJBcnJheSIsImlzQXJyYXkiLCJmb3JFYWNoIiwibWVzc2FnZSIsIl9lbWl0IiwiX2JhdGNoaW5nUXVldWUiLCJfc2VuZGluZ1F1ZXVlIiwiX3JlY2VpdmluZ1F1ZXVlIiwiX3NlbmRpbmciLCJvbiIsImV2ZW50IiwibGlzdGVuZXIiLCJ3cmFwcGVkTGlzdGVuZXIiLCJhcmdzIiwiZSIsImNvbnNvbGUiLCJlcnJvciIsInRvU3RyaW5nIiwic2VuZCIsInBheWxvYWQiLCJwdXNoIiwiX3RpbWVyIiwic2V0VGltZW91dCIsIl9mbHVzaCIsImxvZyIsImxlbmd0aCIsIl9zZW5kIiwiY2xlYXJUaW1lb3V0IiwiZW1pdCIsIl9jaHVuayIsImxhc3QiLCJfbmV4dFNlbmQiLCJzaGlmdCIsImVyciIsInNwbGljZSIsIm1hcCIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///47294\n")},79410:(__unused_webpack_module,exports)=>{eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.HookEvents = exports.BridgeSubscriptions = exports.BridgeEvents = exports.BuiltinTabs = void 0;\nvar BuiltinTabs;\n\n(function (BuiltinTabs) {\n  BuiltinTabs["COMPONENTS"] = "components";\n  BuiltinTabs["TIMELINE"] = "timeline";\n  BuiltinTabs["PLUGINS"] = "plugins";\n  BuiltinTabs["SETTINGS"] = "settings";\n})(BuiltinTabs = exports.BuiltinTabs || (exports.BuiltinTabs = {}));\n\nvar BridgeEvents;\n\n(function (BridgeEvents) {\n  // Misc\n  BridgeEvents["TO_BACK_SUBSCRIBE"] = "b:subscribe";\n  BridgeEvents["TO_BACK_UNSUBSCRIBE"] = "b:unsubscribe";\n  /** Backend is ready */\n\n  BridgeEvents["TO_FRONT_READY"] = "f:ready";\n  /** Displays the "detected Vue" console log */\n\n  BridgeEvents["TO_BACK_LOG_DETECTED_VUE"] = "b:log-detected-vue";\n  /** Force refresh */\n\n  BridgeEvents["TO_BACK_REFRESH"] = "b:refresh";\n  /** Tab was switched */\n\n  BridgeEvents["TO_BACK_TAB_SWITCH"] = "b:tab:switch";\n  BridgeEvents["TO_BACK_LOG"] = "b:log";\n  /** Reconnected after background script is terminated (idle) */\n\n  BridgeEvents["TO_FRONT_RECONNECTED"] = "f:reconnected";\n  /** Change app title (electron) */\n\n  BridgeEvents["TO_FRONT_TITLE"] = "f:title"; // Apps\n\n  /** App was registered */\n\n  BridgeEvents["TO_FRONT_APP_ADD"] = "f:app:add";\n  /** Get app list */\n\n  BridgeEvents["TO_BACK_APP_LIST"] = "b:app:list";\n  BridgeEvents["TO_FRONT_APP_LIST"] = "f:app:list";\n  BridgeEvents["TO_FRONT_APP_REMOVE"] = "f:app:remove";\n  BridgeEvents["TO_BACK_APP_SELECT"] = "b:app:select";\n  BridgeEvents["TO_FRONT_APP_SELECTED"] = "f:app:selected";\n  BridgeEvents["TO_BACK_SCAN_LEGACY_APPS"] = "b:app:scan-legacy"; // Components\n\n  BridgeEvents["TO_BACK_COMPONENT_TREE"] = "b:component:tree";\n  BridgeEvents["TO_FRONT_COMPONENT_TREE"] = "f:component:tree";\n  BridgeEvents["TO_BACK_COMPONENT_SELECTED_DATA"] = "b:component:selected-data";\n  BridgeEvents["TO_FRONT_COMPONENT_SELECTED_DATA"] = "f:component:selected-data";\n  BridgeEvents["TO_BACK_COMPONENT_EXPAND"] = "b:component:expand";\n  BridgeEvents["TO_FRONT_COMPONENT_EXPAND"] = "f:component:expand";\n  BridgeEvents["TO_BACK_COMPONENT_SCROLL_TO"] = "b:component:scroll-to";\n  BridgeEvents["TO_BACK_COMPONENT_FILTER"] = "b:component:filter";\n  BridgeEvents["TO_BACK_COMPONENT_MOUSE_OVER"] = "b:component:mouse-over";\n  BridgeEvents["TO_BACK_COMPONENT_MOUSE_OUT"] = "b:component:mouse-out";\n  BridgeEvents["TO_BACK_COMPONENT_CONTEXT_MENU_TARGET"] = "b:component:context-menu-target";\n  BridgeEvents["TO_BACK_COMPONENT_EDIT_STATE"] = "b:component:edit-state";\n  BridgeEvents["TO_BACK_COMPONENT_PICK"] = "b:component:pick";\n  BridgeEvents["TO_FRONT_COMPONENT_PICK"] = "f:component:pick";\n  BridgeEvents["TO_BACK_COMPONENT_PICK_CANCELED"] = "b:component:pick-canceled";\n  BridgeEvents["TO_FRONT_COMPONENT_PICK_CANCELED"] = "f:component:pick-canceled";\n  BridgeEvents["TO_BACK_COMPONENT_INSPECT_DOM"] = "b:component:inspect-dom";\n  BridgeEvents["TO_FRONT_COMPONENT_INSPECT_DOM"] = "f:component:inspect-dom";\n  BridgeEvents["TO_BACK_COMPONENT_RENDER_CODE"] = "b:component:render-code";\n  BridgeEvents["TO_FRONT_COMPONENT_RENDER_CODE"] = "f:component:render-code";\n  BridgeEvents["TO_FRONT_COMPONENT_UPDATED"] = "f:component:updated"; // Timeline\n\n  BridgeEvents["TO_FRONT_TIMELINE_EVENT"] = "f:timeline:event";\n  BridgeEvents["TO_BACK_TIMELINE_LAYER_LIST"] = "b:timeline:layer-list";\n  BridgeEvents["TO_FRONT_TIMELINE_LAYER_LIST"] = "f:timeline:layer-list";\n  BridgeEvents["TO_FRONT_TIMELINE_LAYER_ADD"] = "f:timeline:layer-add";\n  BridgeEvents["TO_BACK_TIMELINE_SHOW_SCREENSHOT"] = "b:timeline:show-screenshot";\n  BridgeEvents["TO_BACK_TIMELINE_CLEAR"] = "b:timeline:clear";\n  BridgeEvents["TO_BACK_TIMELINE_EVENT_DATA"] = "b:timeline:event-data";\n  BridgeEvents["TO_FRONT_TIMELINE_EVENT_DATA"] = "f:timeline:event-data";\n  BridgeEvents["TO_BACK_TIMELINE_LAYER_LOAD_EVENTS"] = "b:timeline:layer-load-events";\n  BridgeEvents["TO_FRONT_TIMELINE_LAYER_LOAD_EVENTS"] = "f:timeline:layer-load-events";\n  BridgeEvents["TO_BACK_TIMELINE_LOAD_MARKERS"] = "b:timeline:load-markers";\n  BridgeEvents["TO_FRONT_TIMELINE_LOAD_MARKERS"] = "f:timeline:load-markers";\n  BridgeEvents["TO_FRONT_TIMELINE_MARKER"] = "f:timeline:marker"; // Plugins\n\n  BridgeEvents["TO_BACK_DEVTOOLS_PLUGIN_LIST"] = "b:devtools-plugin:list";\n  BridgeEvents["TO_FRONT_DEVTOOLS_PLUGIN_LIST"] = "f:devtools-plugin:list";\n  BridgeEvents["TO_FRONT_DEVTOOLS_PLUGIN_ADD"] = "f:devtools-plugin:add";\n  BridgeEvents["TO_BACK_DEVTOOLS_PLUGIN_SETTING_UPDATED"] = "b:devtools-plugin:setting-updated"; // Custom inspectors\n\n  BridgeEvents["TO_BACK_CUSTOM_INSPECTOR_LIST"] = "b:custom-inspector:list";\n  BridgeEvents["TO_FRONT_CUSTOM_INSPECTOR_LIST"] = "f:custom-inspector:list";\n  BridgeEvents["TO_FRONT_CUSTOM_INSPECTOR_ADD"] = "f:custom-inspector:add";\n  BridgeEvents["TO_BACK_CUSTOM_INSPECTOR_TREE"] = "b:custom-inspector:tree";\n  BridgeEvents["TO_FRONT_CUSTOM_INSPECTOR_TREE"] = "f:custom-inspector:tree";\n  BridgeEvents["TO_BACK_CUSTOM_INSPECTOR_STATE"] = "b:custom-inspector:state";\n  BridgeEvents["TO_FRONT_CUSTOM_INSPECTOR_STATE"] = "f:custom-inspector:state";\n  BridgeEvents["TO_BACK_CUSTOM_INSPECTOR_EDIT_STATE"] = "b:custom-inspector:edit-state";\n  BridgeEvents["TO_BACK_CUSTOM_INSPECTOR_ACTION"] = "b:custom-inspector:action";\n  BridgeEvents["TO_BACK_CUSTOM_INSPECTOR_NODE_ACTION"] = "b:custom-inspector:node-action";\n  BridgeEvents["TO_FRONT_CUSTOM_INSPECTOR_SELECT_NODE"] = "f:custom-inspector:select-node"; // Custom state\n\n  BridgeEvents["TO_BACK_CUSTOM_STATE_ACTION"] = "b:custom-state:action";\n})(BridgeEvents = exports.BridgeEvents || (exports.BridgeEvents = {}));\n\nvar BridgeSubscriptions;\n\n(function (BridgeSubscriptions) {\n  BridgeSubscriptions["SELECTED_COMPONENT_DATA"] = "component:selected-data";\n  BridgeSubscriptions["COMPONENT_TREE"] = "component:tree";\n})(BridgeSubscriptions = exports.BridgeSubscriptions || (exports.BridgeSubscriptions = {}));\n\nvar HookEvents;\n\n(function (HookEvents) {\n  HookEvents["INIT"] = "init";\n  HookEvents["APP_INIT"] = "app:init";\n  HookEvents["APP_ADD"] = "app:add";\n  HookEvents["APP_UNMOUNT"] = "app:unmount";\n  HookEvents["COMPONENT_UPDATED"] = "component:updated";\n  HookEvents["COMPONENT_ADDED"] = "component:added";\n  HookEvents["COMPONENT_REMOVED"] = "component:removed";\n  HookEvents["COMPONENT_EMIT"] = "component:emit";\n  HookEvents["COMPONENT_HIGHLIGHT"] = "component:highlight";\n  HookEvents["COMPONENT_UNHIGHLIGHT"] = "component:unhighlight";\n  HookEvents["SETUP_DEVTOOLS_PLUGIN"] = "devtools-plugin:setup";\n  HookEvents["TIMELINE_LAYER_ADDED"] = "timeline:layer-added";\n  HookEvents["TIMELINE_EVENT_ADDED"] = "timeline:event-added";\n  HookEvents["CUSTOM_INSPECTOR_ADD"] = "custom-inspector:add";\n  HookEvents["CUSTOM_INSPECTOR_SEND_TREE"] = "custom-inspector:send-tree";\n  HookEvents["CUSTOM_INSPECTOR_SEND_STATE"] = "custom-inspector:send-state";\n  HookEvents["CUSTOM_INSPECTOR_SELECT_NODE"] = "custom-inspector:select-node";\n  HookEvents["PERFORMANCE_START"] = "perf:start";\n  HookEvents["PERFORMANCE_END"] = "perf:end";\n  HookEvents["PLUGIN_SETTINGS_SET"] = "plugin:settings:set";\n  /**\n   * @deprecated\n   */\n\n  HookEvents["FLUSH"] = "flush";\n  /**\n   * @deprecated\n   */\n\n  HookEvents["TRACK_UPDATE"] = "_track-update";\n  /**\n   * @deprecated\n   */\n\n  HookEvents["FLASH_UPDATE"] = "_flash-update";\n})(HookEvents = exports.HookEvents || (exports.HookEvents = {}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzk0MTAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBWUEsV0FBWjs7QUFBQSxXQUFZQSxXQUFaLEVBQXVCO0VBQ3JCQTtFQUNBQTtFQUNBQTtFQUNBQTtBQUNELENBTEQsRUFBWUEsV0FBVyxHQUFYQyx3QkFBQUEsbUJBQUFBLEdBQVcsRUFBWCxDQUFaOztBQU9BLElBQVlDLFlBQVo7O0FBQUEsV0FBWUEsWUFBWixFQUF3QjtFQUN0QjtFQUNBQTtFQUNBQTtFQUNBOztFQUNBQTtFQUNBOztFQUNBQTtFQUNBOztFQUNBQTtFQUNBOztFQUNBQTtFQUNBQTtFQUNBOztFQUNBQTtFQUNBOztFQUNBQSwyQ0FoQnNCLENBa0J0Qjs7RUFDQTs7RUFDQUE7RUFDQTs7RUFDQUE7RUFDQUE7RUFDQUE7RUFDQUE7RUFDQUE7RUFDQUEsK0RBM0JzQixDQTZCdEI7O0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBLG1FQWxEc0IsQ0FvRHRCOztFQUNBQTtFQUNBQTtFQUNBQTtFQUNBQTtFQUNBQTtFQUNBQTtFQUNBQTtFQUNBQTtFQUNBQTtFQUNBQTtFQUNBQTtFQUNBQTtFQUNBQSwrREFqRXNCLENBbUV0Qjs7RUFDQUE7RUFDQUE7RUFDQUE7RUFDQUEsOEZBdkVzQixDQXlFdEI7O0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBLHlGQXBGc0IsQ0FzRnRCOztFQUNBQTtBQUNELENBeEZELEVBQVlBLFlBQVksR0FBWkQseUJBQUFBLG9CQUFBQSxHQUFZLEVBQVosQ0FBWjs7QUEwRkEsSUFBWUUsbUJBQVo7O0FBQUEsV0FBWUEsbUJBQVosRUFBK0I7RUFDN0JBO0VBQ0FBO0FBQ0QsQ0FIRCxFQUFZQSxtQkFBbUIsR0FBbkJGLGdDQUFBQSwyQkFBQUEsR0FBbUIsRUFBbkIsQ0FBWjs7QUFLQSxJQUFZRyxVQUFaOztBQUFBLFdBQVlBLFVBQVosRUFBc0I7RUFDcEJBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0E7Ozs7RUFHQUE7RUFDQTs7OztFQUdBQTtFQUNBOzs7O0VBR0FBO0FBQ0QsQ0FqQ0QsRUFBWUEsVUFBVSxHQUFWSCx1QkFBQUEsa0JBQUFBLEdBQVUsRUFBVixDQUFaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZ1ZS9kZXZ0b29scy8uLi9zcmMvY29uc3RzLnRzP2Q5MTgiXSwibmFtZXMiOlsiQnVpbHRpblRhYnMiLCJleHBvcnRzIiwiQnJpZGdlRXZlbnRzIiwiQnJpZGdlU3Vic2NyaXB0aW9ucyIsIkhvb2tFdmVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///79410\n')},38158:(__unused_webpack_module,exports)=>{eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.StateEditor = void 0;\n\nclass StateEditor {\n  set(object, path, value, cb = null) {\n    const sections = Array.isArray(path) ? path : path.split('.');\n\n    while (sections.length > 1) {\n      object = object[sections.shift()];\n\n      if (this.isRef(object)) {\n        object = this.getRefValue(object);\n      }\n    }\n\n    const field = sections[0];\n\n    if (cb) {\n      cb(object, field, value);\n    } else if (this.isRef(object[field])) {\n      this.setRefValue(object[field], value);\n    } else {\n      object[field] = value;\n    }\n  }\n\n  get(object, path) {\n    const sections = Array.isArray(path) ? path : path.split('.');\n\n    for (let i = 0; i < sections.length; i++) {\n      object = object[sections[i]];\n\n      if (this.isRef(object)) {\n        object = this.getRefValue(object);\n      }\n\n      if (!object) {\n        return undefined;\n      }\n    }\n\n    return object;\n  }\n\n  has(object, path, parent = false) {\n    if (typeof object === 'undefined') {\n      return false;\n    }\n\n    const sections = Array.isArray(path) ? path.slice() : path.split('.');\n    const size = !parent ? 1 : 2;\n\n    while (object && sections.length > size) {\n      object = object[sections.shift()];\n\n      if (this.isRef(object)) {\n        object = this.getRefValue(object);\n      }\n    }\n\n    return object != null && Object.prototype.hasOwnProperty.call(object, sections[0]);\n  }\n\n  createDefaultSetCallback(state) {\n    return (obj, field, value) => {\n      if (state.remove || state.newKey) {\n        if (Array.isArray(obj)) {\n          obj.splice(field, 1);\n        } else {\n          delete obj[field];\n        }\n      }\n\n      if (!state.remove) {\n        const target = obj[state.newKey || field];\n\n        if (this.isRef(target)) {\n          this.setRefValue(target, value);\n        } else {\n          obj[state.newKey || field] = value;\n        }\n      }\n    };\n  }\n\n  isRef(ref) {\n    // To implement in subclass\n    return false;\n  }\n\n  setRefValue(ref, value) {// To implement in subclass\n  }\n\n  getRefValue(ref) {\n    // To implement in subclass\n    return ref;\n  }\n\n}\n\nexports.StateEditor = StateEditor;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBZ0NDLElBQWhDLENBQXFDeEIsTUFBckMsRUFBNkNJLFFBQVEsQ0FBQyxDQUFELENBQXJELENBQXpCO0VBQ0Q7O0VBRURxQix3QkFBd0IsQ0FBRUMsS0FBRixFQUF5QjtJQUMvQyxPQUFPLENBQUNDLEdBQUQsRUFBTWYsS0FBTixFQUFhVixLQUFiLEtBQXNCO01BQzNCLElBQUl3QixLQUFLLENBQUNFLE1BQU4sSUFBZ0JGLEtBQUssQ0FBQ0csTUFBMUIsRUFBa0M7UUFDaEMsSUFBSXhCLEtBQUssQ0FBQ0MsT0FBTixDQUFjcUIsR0FBZCxDQUFKLEVBQXdCO1VBQ3RCQSxHQUFHLENBQUNHLE1BQUosQ0FBV2xCLEtBQVgsRUFBa0IsQ0FBbEI7UUFDRCxDQUZELE1BRU87VUFDTCxPQUFPZSxHQUFHLENBQUNmLEtBQUQsQ0FBVjtRQUNEO01BQ0Y7O01BQ0QsSUFBSSxDQUFDYyxLQUFLLENBQUNFLE1BQVgsRUFBbUI7UUFDakIsTUFBTUcsTUFBTSxHQUFHSixHQUFHLENBQUNELEtBQUssQ0FBQ0csTUFBTixJQUFnQmpCLEtBQWpCLENBQWxCOztRQUNBLElBQUksS0FBS0YsS0FBTCxDQUFXcUIsTUFBWCxDQUFKLEVBQXdCO1VBQ3RCLEtBQUtsQixXQUFMLENBQWlCa0IsTUFBakIsRUFBeUI3QixLQUF6QjtRQUNELENBRkQsTUFFTztVQUNMeUIsR0FBRyxDQUFDRCxLQUFLLENBQUNHLE1BQU4sSUFBZ0JqQixLQUFqQixDQUFILEdBQTZCVixLQUE3QjtRQUNEO01BQ0Y7SUFDRixDQWhCRDtFQWlCRDs7RUFFRFEsS0FBSyxDQUFFc0IsR0FBRixFQUFVO0lBQ2I7SUFDQSxPQUFPLEtBQVA7RUFDRDs7RUFFRG5CLFdBQVcsQ0FBRW1CLEdBQUYsRUFBVzlCLEtBQVgsRUFBcUIsQ0FDOUI7RUFDRDs7RUFFRFMsV0FBVyxDQUFFcUIsR0FBRixFQUFVO0lBQ25CO0lBQ0EsT0FBT0EsR0FBUDtFQUNEOztBQWpGcUI7O0FBQXhCQyxtQkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdnVlL2RldnRvb2xzLy4uL3NyYy9lZGl0LnRzP2ZlZTciXSwibmFtZXMiOlsiU3RhdGVFZGl0b3IiLCJzZXQiLCJvYmplY3QiLCJwYXRoIiwidmFsdWUiLCJjYiIsInNlY3Rpb25zIiwiQXJyYXkiLCJpc0FycmF5Iiwic3BsaXQiLCJsZW5ndGgiLCJzaGlmdCIsImlzUmVmIiwiZ2V0UmVmVmFsdWUiLCJmaWVsZCIsInNldFJlZlZhbHVlIiwiZ2V0IiwiaSIsInVuZGVmaW5lZCIsImhhcyIsInBhcmVudCIsInNsaWNlIiwic2l6ZSIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImNyZWF0ZURlZmF1bHRTZXRDYWxsYmFjayIsInN0YXRlIiwib2JqIiwicmVtb3ZlIiwibmV3S2V5Iiwic3BsaWNlIiwidGFyZ2V0IiwicmVmIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///38158\n")},66210:(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.initEnv = exports.keys = exports.isLinux = exports.isMac = exports.isWindows = exports.isFirefox = exports.isChrome = exports.target = exports.isBrowser = void 0;\nexports.isBrowser = typeof navigator !== 'undefined';\nexports.target = exports.isBrowser ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : {};\nexports.isChrome = typeof exports.target.chrome !== 'undefined' && !!exports.target.chrome.devtools;\nexports.isFirefox = exports.isBrowser && navigator.userAgent.indexOf('Firefox') > -1;\nexports.isWindows = exports.isBrowser && navigator.platform.indexOf('Win') === 0;\nexports.isMac = exports.isBrowser && navigator.platform === 'MacIntel';\nexports.isLinux = exports.isBrowser && navigator.platform.indexOf('Linux') === 0;\nexports.keys = {\n  ctrl: exports.isMac ? '&#8984;' : 'Ctrl',\n  shift: 'Shift',\n  alt: exports.isMac ? '&#8997;' : 'Alt',\n  del: 'Del',\n  enter: 'Enter',\n  esc: 'Esc'\n};\n\nfunction initEnv(Vue) {\n  if (Vue.prototype.hasOwnProperty('$isChrome')) return;\n  Object.defineProperties(Vue.prototype, {\n    $isChrome: {\n      get: () => exports.isChrome\n    },\n    $isFirefox: {\n      get: () => exports.isFirefox\n    },\n    $isWindows: {\n      get: () => exports.isWindows\n    },\n    $isMac: {\n      get: () => exports.isMac\n    },\n    $isLinux: {\n      get: () => exports.isLinux\n    },\n    $keys: {\n      get: () => exports.keys\n    }\n  });\n  if (exports.isWindows) document.body.classList.add('platform-windows');\n  if (exports.isMac) document.body.classList.add('platform-mac');\n  if (exports.isLinux) document.body.classList.add('platform-linux');\n}\n\nexports.initEnv = initEnv;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjYyMTAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWFBLGlCQUFBQSxHQUFZLE9BQU9DLFNBQVAsS0FBcUIsV0FBakM7QUFDQUQsY0FBQUEsR0FBY0Esb0JBQ3ZCRSxNQUR1QixHQUV2QixPQUFPQyxxQkFBUCxLQUFrQixXQUFsQixHQUNFQSxxQkFERixHQUVFLEVBSk87QUFLQUgsZ0JBQUFBLEdBQVcsT0FBT0EsZUFBT0ksTUFBZCxLQUF5QixXQUF6QixJQUF3QyxDQUFDLENBQUNKLGVBQU9JLE1BQVAsQ0FBY0MsUUFBbkU7QUFDQUwsaUJBQUFBLEdBQVlBLHFCQUFhQyxTQUFTLENBQUNLLFNBQVYsQ0FBb0JDLE9BQXBCLENBQTRCLFNBQTVCLElBQXlDLENBQUMsQ0FBbkU7QUFDQVAsaUJBQUFBLEdBQVlBLHFCQUFhQyxTQUFTLENBQUNPLFFBQVYsQ0FBbUJELE9BQW5CLENBQTJCLEtBQTNCLE1BQXNDLENBQS9EO0FBQ0FQLGFBQUFBLEdBQVFBLHFCQUFhQyxTQUFTLENBQUNPLFFBQVYsS0FBdUIsVUFBNUM7QUFDQVIsZUFBQUEsR0FBVUEscUJBQWFDLFNBQVMsQ0FBQ08sUUFBVixDQUFtQkQsT0FBbkIsQ0FBMkIsT0FBM0IsTUFBd0MsQ0FBL0Q7QUFDQVAsWUFBQUEsR0FBTztFQUNsQlMsSUFBSSxFQUFFVCxnQkFBUSxTQUFSLEdBQW9CLE1BRFI7RUFFbEJVLEtBQUssRUFBRSxPQUZXO0VBR2xCQyxHQUFHLEVBQUVYLGdCQUFRLFNBQVIsR0FBb0IsS0FIUDtFQUlsQlksR0FBRyxFQUFFLEtBSmE7RUFLbEJDLEtBQUssRUFBRSxPQUxXO0VBTWxCQyxHQUFHLEVBQUU7QUFOYSxDQUFQOztBQVNiLFNBQWdCQyxPQUFoQixDQUF5QkMsR0FBekIsRUFBNEI7RUFDMUIsSUFBSUEsR0FBRyxDQUFDQyxTQUFKLENBQWNDLGNBQWQsQ0FBNkIsV0FBN0IsQ0FBSixFQUErQztFQUUvQ0MsTUFBTSxDQUFDQyxnQkFBUCxDQUF3QkosR0FBRyxDQUFDQyxTQUE1QixFQUF1QztJQUNyQ0ksU0FBUyxFQUFFO01BQUVDLEdBQUcsRUFBRSxNQUFNdEI7SUFBYixDQUQwQjtJQUVyQ3VCLFVBQVUsRUFBRTtNQUFFRCxHQUFHLEVBQUUsTUFBTXRCO0lBQWIsQ0FGeUI7SUFHckN3QixVQUFVLEVBQUU7TUFBRUYsR0FBRyxFQUFFLE1BQU10QjtJQUFiLENBSHlCO0lBSXJDeUIsTUFBTSxFQUFFO01BQUVILEdBQUcsRUFBRSxNQUFNdEI7SUFBYixDQUo2QjtJQUtyQzBCLFFBQVEsRUFBRTtNQUFFSixHQUFHLEVBQUUsTUFBTXRCO0lBQWIsQ0FMMkI7SUFNckMyQixLQUFLLEVBQUU7TUFBRUwsR0FBRyxFQUFFLE1BQU10QjtJQUFiO0VBTjhCLENBQXZDO0VBU0EsSUFBSUEsaUJBQUosRUFBZTRCLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjQyxTQUFkLENBQXdCQyxHQUF4QixDQUE0QixrQkFBNUI7RUFDZixJQUFJL0IsYUFBSixFQUFXNEIsUUFBUSxDQUFDQyxJQUFULENBQWNDLFNBQWQsQ0FBd0JDLEdBQXhCLENBQTRCLGNBQTVCO0VBQ1gsSUFBSS9CLGVBQUosRUFBYTRCLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjQyxTQUFkLENBQXdCQyxHQUF4QixDQUE0QixnQkFBNUI7QUFDZDs7QUFmRC9CLGVBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZ1ZS9kZXZ0b29scy8uLi9zcmMvZW52LnRzPzAxNDciXSwibmFtZXMiOlsiZXhwb3J0cyIsIm5hdmlnYXRvciIsIndpbmRvdyIsImdsb2JhbCIsImNocm9tZSIsImRldnRvb2xzIiwidXNlckFnZW50IiwiaW5kZXhPZiIsInBsYXRmb3JtIiwiY3RybCIsInNoaWZ0IiwiYWx0IiwiZGVsIiwiZW50ZXIiLCJlc2MiLCJpbml0RW52IiwiVnVlIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiJGlzQ2hyb21lIiwiZ2V0IiwiJGlzRmlyZWZveCIsIiRpc1dpbmRvd3MiLCIkaXNNYWMiLCIkaXNMaW51eCIsIiRrZXlzIiwiZG9jdW1lbnQiLCJib2R5IiwiY2xhc3NMaXN0IiwiYWRkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///66210\n")},27146:function(__unused_webpack_module,exports,__webpack_require__){eval('\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\n\n__exportStar(__webpack_require__(79310), exports);\n\n__exportStar(__webpack_require__(47294), exports);\n\n__exportStar(__webpack_require__(79410), exports);\n\n__exportStar(__webpack_require__(38158), exports);\n\n__exportStar(__webpack_require__(66210), exports);\n\n__exportStar(__webpack_require__(12074), exports);\n\n__exportStar(__webpack_require__(86798), exports);\n\n__exportStar(__webpack_require__(29556), exports);\n\n__exportStar(__webpack_require__(423), exports);\n\n__exportStar(__webpack_require__(58561), exports);\n\n__exportStar(__webpack_require__(34723), exports);\n\n__exportStar(__webpack_require__(76203), exports);\n\n__exportStar(__webpack_require__(86283), exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcxNDYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsYUFBQUEsbUJBQUFBLENBQUFBLEtBQUFBOztBQUNBQSxhQUFBQSxtQkFBQUEsQ0FBQUEsS0FBQUE7O0FBQ0FBLGFBQUFBLG1CQUFBQSxDQUFBQSxLQUFBQTs7QUFDQUEsYUFBQUEsbUJBQUFBLENBQUFBLEtBQUFBOztBQUNBQSxhQUFBQSxtQkFBQUEsQ0FBQUEsS0FBQUE7O0FBQ0FBLGFBQUFBLG1CQUFBQSxDQUFBQSxLQUFBQTs7QUFDQUEsYUFBQUEsbUJBQUFBLENBQUFBLEtBQUFBOztBQUNBQSxhQUFBQSxtQkFBQUEsQ0FBQUEsS0FBQUE7O0FBQ0FBLGFBQUFBLG1CQUFBQSxDQUFBQSxHQUFBQTs7QUFDQUEsYUFBQUEsbUJBQUFBLENBQUFBLEtBQUFBOztBQUNBQSxhQUFBQSxtQkFBQUEsQ0FBQUEsS0FBQUE7O0FBQ0FBLGFBQUFBLG1CQUFBQSxDQUFBQSxLQUFBQTs7QUFDQUEsYUFBQUEsbUJBQUFBLENBQUFBLEtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZ1ZS9kZXZ0b29scy8uLi9zcmMvaW5kZXgudHM/NmYzNyJdLCJuYW1lcyI6WyJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///27146\n')},12074:(__unused_webpack_module,exports,__webpack_require__)=>{eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.setPluginPermission = exports.hasPluginPermission = exports.PluginPermission = void 0;\n\nconst shared_data_1 = __webpack_require__(29556);\n\nvar PluginPermission;\n\n(function (PluginPermission) {\n  PluginPermission["ENABLED"] = "enabled";\n  PluginPermission["COMPONENTS"] = "components";\n  PluginPermission["CUSTOM_INSPECTOR"] = "custom-inspector";\n  PluginPermission["TIMELINE"] = "timeline";\n})(PluginPermission = exports.PluginPermission || (exports.PluginPermission = {}));\n\nfunction hasPluginPermission(pluginId, permission) {\n  const result = shared_data_1.SharedData.pluginPermissions[`${pluginId}:${permission}`];\n  if (result == null) return true;\n  return !!result;\n}\n\nexports.hasPluginPermission = hasPluginPermission;\n\nfunction setPluginPermission(pluginId, permission, active) {\n  shared_data_1.SharedData.pluginPermissions = { ...shared_data_1.SharedData.pluginPermissions,\n    [`${pluginId}:${permission}`]: active\n  };\n}\n\nexports.setPluginPermission = setPluginPermission;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIwNzQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQVlBLGdCQUFaOztBQUFBLFdBQVlBLGdCQUFaLEVBQTRCO0VBQzFCQTtFQUNBQTtFQUNBQTtFQUNBQTtBQUNELENBTEQsRUFBWUEsZ0JBQWdCLEdBQWhCQyw2QkFBQUEsd0JBQUFBLEdBQWdCLEVBQWhCLENBQVo7O0FBT0EsU0FBZ0JDLG1CQUFoQixDQUFxQ0MsUUFBckMsRUFBdURDLFVBQXZELEVBQW1GO0VBQ2pGLE1BQU1DLE1BQU0sR0FBR0MseUJBQVdDLGlCQUFYLENBQTZCLEdBQUdKLFFBQVEsSUFBSUMsVUFBVSxFQUF0RCxDQUFmO0VBQ0EsSUFBSUMsTUFBTSxJQUFJLElBQWQsRUFBb0IsT0FBTyxJQUFQO0VBQ3BCLE9BQU8sQ0FBQyxDQUFDQSxNQUFUO0FBQ0Q7O0FBSkRKLDJCQUFBQTs7QUFNQSxTQUFnQk8sbUJBQWhCLENBQXFDTCxRQUFyQyxFQUF1REMsVUFBdkQsRUFBcUZLLE1BQXJGLEVBQW9HO0VBQ2xHSCx5QkFBV0MsaUJBQVgsR0FBK0IsRUFDN0IsR0FBR0QseUJBQVdDLGlCQURlO0lBRTdCLENBQUMsR0FBR0osUUFBUSxJQUFJQyxVQUFVLEVBQTFCLEdBQStCSztFQUZGLENBQS9CO0FBSUQ7O0FBTERSLDJCQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B2dWUvZGV2dG9vbHMvLi4vc3JjL3BsdWdpbi1wZXJtaXNzaW9ucy50cz9hMzNhIl0sIm5hbWVzIjpbIlBsdWdpblBlcm1pc3Npb24iLCJleHBvcnRzIiwiaGFzUGx1Z2luUGVybWlzc2lvbiIsInBsdWdpbklkIiwicGVybWlzc2lvbiIsInJlc3VsdCIsInNoYXJlZF9kYXRhXzEiLCJwbHVnaW5QZXJtaXNzaW9ucyIsInNldFBsdWdpblBlcm1pc3Npb24iLCJhY3RpdmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///12074\n')},86798:(__unused_webpack_module,exports,__webpack_require__)=>{eval('\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.getPluginDefaultSettings = exports.setPluginSettings = exports.getPluginSettings = void 0;\n\nconst shared_data_1 = __webpack_require__(29556);\n\nfunction getPluginSettings(pluginId, defaultSettings) {\n  var _a;\n\n  return { ...(defaultSettings !== null && defaultSettings !== void 0 ? defaultSettings : {}),\n    ...((_a = shared_data_1.SharedData.pluginSettings[pluginId]) !== null && _a !== void 0 ? _a : {})\n  };\n}\n\nexports.getPluginSettings = getPluginSettings;\n\nfunction setPluginSettings(pluginId, settings) {\n  shared_data_1.SharedData.pluginSettings = { ...shared_data_1.SharedData.pluginSettings,\n    [pluginId]: settings\n  };\n}\n\nexports.setPluginSettings = setPluginSettings;\n\nfunction getPluginDefaultSettings(schema) {\n  const result = {};\n\n  if (schema) {\n    for (const id in schema) {\n      const item = schema[id];\n      result[id] = item.defaultValue;\n    }\n  }\n\n  return result;\n}\n\nexports.getPluginDefaultSettings = getPluginDefaultSettings;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODY3OTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBLFNBQWdCQSxpQkFBaEIsQ0FBZ0ZDLFFBQWhGLEVBQWtHQyxlQUFsRyxFQUE2SDs7O0VBQzNILE9BQU8sRUFDTCxJQUFHQSxlQUFlLFNBQWYsbUJBQWUsV0FBZixxQkFBbUIsRUFBdEIsQ0FESztJQUVMLElBQUcsK0JBQVdDLGNBQVgsQ0FBMEJGLFFBQTFCLE9BQW1DLElBQW5DLElBQW1DRyxhQUFuQyxHQUFtQ0EsRUFBbkMsR0FBdUMsRUFBMUM7RUFGSyxDQUFQO0FBSUQ7O0FBTERDLHlCQUFBQTs7QUFPQSxTQUFnQkMsaUJBQWhCLENBQWdGTCxRQUFoRixFQUFrR00sUUFBbEcsRUFBcUg7RUFDbkhDLHlCQUFXTCxjQUFYLEdBQTRCLEVBQzFCLEdBQUdLLHlCQUFXTCxjQURZO0lBRTFCLENBQUNGLFFBQUQsR0FBWU07RUFGYyxDQUE1QjtBQUlEOztBQUxERix5QkFBQUE7O0FBT0EsU0FBZ0JJLHdCQUFoQixDQUF1RkMsTUFBdkYsRUFBaUk7RUFDL0gsTUFBTUMsTUFBTSxHQUF3QixFQUFwQzs7RUFDQSxJQUFJRCxNQUFKLEVBQVk7SUFDVixLQUFLLE1BQU1FLEVBQVgsSUFBaUJGLE1BQWpCLEVBQXlCO01BQ3ZCLE1BQU1HLElBQUksR0FBR0gsTUFBTSxDQUFDRSxFQUFELENBQW5CO01BQ0FELE1BQU0sQ0FBQ0MsRUFBRCxDQUFOLEdBQWFDLElBQUksQ0FBQ0MsWUFBbEI7SUFDRDtFQUNGOztFQUNELE9BQU9ILE1BQVA7QUFDRDs7QUFURE4sZ0NBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZ1ZS9kZXZ0b29scy8uLi9zcmMvcGx1Z2luLXNldHRpbmdzLnRzPzk5NjEiXSwibmFtZXMiOlsiZ2V0UGx1Z2luU2V0dGluZ3MiLCJwbHVnaW5JZCIsImRlZmF1bHRTZXR0aW5ncyIsInBsdWdpblNldHRpbmdzIiwiX2EiLCJleHBvcnRzIiwic2V0UGx1Z2luU2V0dGluZ3MiLCJzZXR0aW5ncyIsInNoYXJlZF9kYXRhXzEiLCJnZXRQbHVnaW5EZWZhdWx0U2V0dGluZ3MiLCJzY2hlbWEiLCJyZXN1bHQiLCJpZCIsIml0ZW0iLCJkZWZhdWx0VmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///86798\n')},86283:(__unused_webpack_module,exports)=>{eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.raf = void 0;\nlet pendingCallbacks = [];\n/**\n * requestAnimationFrame that also works on non-browser environments like Node.\n */\n\nexports.raf = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : fn => {\n  if (!pendingCallbacks.length) {\n    setImmediate(() => {\n      const now = performance.now();\n      const cbs = pendingCallbacks; // in case cbs add new callbacks\n\n      pendingCallbacks = [];\n      cbs.forEach(cb => cb(now));\n    });\n  }\n\n  pendingCallbacks.push(fn);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODYyODMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsSUFBSUEsZ0JBQWdCLEdBQWtDLEVBQXREO0FBRUE7Ozs7QUFHYUMsV0FBQUEsR0FBTSxPQUFPQyxxQkFBUCxLQUFpQyxVQUFqQyxHQUNmQSxxQkFEZSxHQUVkQyxFQUFELElBQStCO0VBQzdCLElBQUksQ0FBQ0gsZ0JBQWdCLENBQUNJLE1BQXRCLEVBQThCO0lBQzVCQyxZQUFZLENBQUMsTUFBSztNQUNoQixNQUFNQyxHQUFHLEdBQUdDLFdBQVcsQ0FBQ0QsR0FBWixFQUFaO01BQ0EsTUFBTUUsR0FBRyxHQUFHUixnQkFBWixDQUZnQixDQUdoQjs7TUFDQUEsZ0JBQWdCLEdBQUcsRUFBbkI7TUFDQVEsR0FBRyxDQUFDQyxPQUFKLENBQVlDLEVBQUUsSUFBSUEsRUFBRSxDQUFDSixHQUFELENBQXBCO0lBQ0QsQ0FOVyxDQUFaO0VBT0Q7O0VBRUROLGdCQUFnQixDQUFDVyxJQUFqQixDQUFzQlIsRUFBdEI7QUFDRCxDQWRRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZ1ZS9kZXZ0b29scy8uLi9zcmMvcmFmLnRzP2E3NGYiXSwibmFtZXMiOlsicGVuZGluZ0NhbGxiYWNrcyIsImV4cG9ydHMiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbiIsImxlbmd0aCIsInNldEltbWVkaWF0ZSIsIm5vdyIsInBlcmZvcm1hbmNlIiwiY2JzIiwiZm9yRWFjaCIsImNiIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///86283\n")},29556:(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SharedData = exports.watchSharedData = exports.destroySharedData = exports.onSharedDataInit = exports.initSharedData = void 0;\n\nconst storage_1 = __webpack_require__(58561);\n\nconst env_1 = __webpack_require__(66210); // Initial state\n\n\nconst internalSharedData = {\n  openInEditorHost: '/',\n  componentNameStyle: 'class',\n  theme: 'auto',\n  displayDensity: 'low',\n  timeFormat: 'default',\n  recordVuex: true,\n  cacheVuexSnapshotsEvery: 50,\n  cacheVuexSnapshotsLimit: 10,\n  snapshotLoading: false,\n  componentEventsEnabled: true,\n  performanceMonitoringEnabled: true,\n  editableProps: false,\n  logDetected: true,\n  vuexNewBackend: false,\n  vuexAutoload: false,\n  vuexGroupGettersByModule: true,\n  showMenuScrollTip: true,\n  timelineTimeGrid: true,\n  timelineScreenshots: true,\n  menuStepScrolling: env_1.isMac,\n  pluginPermissions: {},\n  pluginSettings: {},\n  pageConfig: {},\n  legacyApps: false,\n  trackUpdates: true,\n  flashUpdates: false,\n  debugInfo: false,\n  isBrowser: env_1.isBrowser\n};\nconst persisted = ['componentNameStyle', 'theme', 'displayDensity', 'recordVuex', 'editableProps', 'logDetected', 'vuexNewBackend', 'vuexAutoload', 'vuexGroupGettersByModule', 'timeFormat', 'showMenuScrollTip', 'timelineTimeGrid', 'timelineScreenshots', 'menuStepScrolling', 'pluginPermissions', 'pluginSettings', 'performanceMonitoringEnabled', 'componentEventsEnabled', 'trackUpdates', 'flashUpdates', 'debugInfo'];\nconst storageVersion = '6.0.0-alpha.1'; // ---- INTERNALS ---- //\n\nlet bridge; // List of fields to persist to storage (disabled if 'false')\n// This should be unique to each shared data client to prevent conflicts\n\nlet persist = false;\nlet data;\nlet initRetryInterval;\nlet initRetryCount = 0;\nconst initCbs = [];\n\nfunction initSharedData(params) {\n  return new Promise(resolve => {\n    // Mandatory params\n    bridge = params.bridge;\n    persist = !!params.persist;\n\n    if (persist) {\n      if (false) {} // Load persisted fields\n\n\n      persisted.forEach(key => {\n        const value = (0, storage_1.getStorage)(`vue-devtools-${storageVersion}:shared-data:${key}`);\n\n        if (value !== null) {\n          internalSharedData[key] = value;\n        }\n      });\n      bridge.on('shared-data:load', () => {\n        // Send all fields\n        Object.keys(internalSharedData).forEach(key => {\n          sendValue(key, internalSharedData[key]);\n        });\n        bridge.send('shared-data:load-complete');\n      });\n      bridge.on('shared-data:init-complete', () => {\n        if (false) {}\n\n        clearInterval(initRetryInterval);\n        resolve();\n      });\n      bridge.send('shared-data:master-init-waiting'); // In case backend init is executed after frontend\n\n      bridge.on('shared-data:minion-init-waiting', () => {\n        bridge.send('shared-data:master-init-waiting');\n      });\n      initRetryCount = 0;\n      clearInterval(initRetryInterval);\n      initRetryInterval = setInterval(() => {\n        if (false) {}\n\n        bridge.send('shared-data:master-init-waiting');\n        initRetryCount++;\n\n        if (initRetryCount > 1) {\n          clearInterval(initRetryInterval);\n          console.error('[shared data] Master init failed');\n        }\n      }, 2000);\n    } else {\n      if (false) {}\n\n      bridge.on('shared-data:master-init-waiting', () => {\n        if (false) {} // Load all persisted shared data\n\n\n        bridge.send('shared-data:load');\n        bridge.once('shared-data:load-complete', () => {\n          if (false) {}\n\n          bridge.send('shared-data:init-complete');\n          resolve();\n        });\n      });\n      bridge.send('shared-data:minion-init-waiting');\n    }\n\n    data = { ...internalSharedData\n    };\n\n    if (params.Vue) {\n      data = params.Vue.observable(data);\n    } // Update value from other shared data clients\n\n\n    bridge.on('shared-data:set', ({\n      key,\n      value\n    }) => {\n      setValue(key, value);\n    });\n    initCbs.forEach(cb => cb());\n  });\n}\n\nexports.initSharedData = initSharedData;\n\nfunction onSharedDataInit(cb) {\n  initCbs.push(cb);\n  return () => {\n    const index = initCbs.indexOf(cb);\n    if (index !== -1) initCbs.splice(index, 1);\n  };\n}\n\nexports.onSharedDataInit = onSharedDataInit;\n\nfunction destroySharedData() {\n  bridge.removeAllListeners('shared-data:set');\n  watchers = {};\n}\n\nexports.destroySharedData = destroySharedData;\nlet watchers = {};\n\nfunction setValue(key, value) {\n  // Storage\n  if (persist && persisted.includes(key)) {\n    (0, storage_1.setStorage)(`vue-devtools-${storageVersion}:shared-data:${key}`, value);\n  }\n\n  const oldValue = data[key];\n  data[key] = value;\n  const handlers = watchers[key];\n\n  if (handlers) {\n    handlers.forEach(h => h(value, oldValue));\n  } // Validate Proxy set trap\n\n\n  return true;\n}\n\nfunction sendValue(key, value) {\n  bridge && bridge.send('shared-data:set', {\n    key,\n    value\n  });\n}\n\nfunction watchSharedData(prop, handler) {\n  const list = watchers[prop] || (watchers[prop] = []);\n  list.push(handler);\n  return () => {\n    const index = list.indexOf(handler);\n    if (index !== -1) list.splice(index, 1);\n  };\n}\n\nexports.watchSharedData = watchSharedData;\nconst proxy = {};\nObject.keys(internalSharedData).forEach(key => {\n  Object.defineProperty(proxy, key, {\n    configurable: false,\n    get: () => data[key],\n    set: value => {\n      sendValue(key, value);\n      setValue(key, value);\n    }\n  });\n});\nexports.SharedData = proxy;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///29556\n")},423:(Q,B)=>{Object.defineProperty(B,"__esModule",{value:!0})},58561:(__unused_webpack_module,exports,__webpack_require__)=>{eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.clearStorage = exports.removeStorage = exports.setStorage = exports.getStorage = exports.initStorage = void 0;\n\nconst env_1 = __webpack_require__(66210); // If we can, we use the browser extension API to store data\n// it's async though, so we synchronize changes from an intermediate\n// storageData object\n\n\nconst useStorage = typeof env_1.target.chrome !== 'undefined' && typeof env_1.target.chrome.storage !== 'undefined';\nlet storageData = null;\n\nfunction initStorage() {\n  return new Promise(resolve => {\n    if (useStorage) {\n      env_1.target.chrome.storage.local.get(null, result => {\n        storageData = result;\n        resolve();\n      });\n    } else {\n      storageData = {};\n      resolve();\n    }\n  });\n}\n\nexports.initStorage = initStorage;\n\nfunction getStorage(key, defaultValue = null) {\n  checkStorage();\n\n  if (useStorage) {\n    return getDefaultValue(storageData[key], defaultValue);\n  } else {\n    try {\n      return getDefaultValue(JSON.parse(localStorage.getItem(key)), defaultValue);\n    } catch (e) {}\n  }\n}\n\nexports.getStorage = getStorage;\n\nfunction setStorage(key, val) {\n  checkStorage();\n\n  if (useStorage) {\n    storageData[key] = val;\n    env_1.target.chrome.storage.local.set({\n      [key]: val\n    });\n  } else {\n    try {\n      localStorage.setItem(key, JSON.stringify(val));\n    } catch (e) {}\n  }\n}\n\nexports.setStorage = setStorage;\n\nfunction removeStorage(key) {\n  checkStorage();\n\n  if (useStorage) {\n    delete storageData[key];\n    env_1.target.chrome.storage.local.remove([key]);\n  } else {\n    try {\n      localStorage.removeItem(key);\n    } catch (e) {}\n  }\n}\n\nexports.removeStorage = removeStorage;\n\nfunction clearStorage() {\n  checkStorage();\n\n  if (useStorage) {\n    storageData = {};\n    env_1.target.chrome.storage.local.clear();\n  } else {\n    try {\n      localStorage.clear();\n    } catch (e) {}\n  }\n}\n\nexports.clearStorage = clearStorage;\n\nfunction checkStorage() {\n  if (!storageData) {\n    throw new Error('Storage wasn\\'t initialized with \\'init()\\'');\n  }\n}\n\nfunction getDefaultValue(value, defaultValue) {\n  if (value == null) {\n    return defaultValue;\n  }\n\n  return value;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFBSSxDQUFDWCxXQUFMLEVBQWtCO0lBQ2hCLE1BQU0sSUFBSTRCLEtBQUosQ0FBVSw2Q0FBVixDQUFOO0VBQ0Q7QUFDRjs7QUFFRCxTQUFTaEIsZUFBVCxDQUEwQmlCLEtBQTFCLEVBQWlDbkIsWUFBakMsRUFBNkM7RUFDM0MsSUFBSW1CLEtBQUssSUFBSSxJQUFiLEVBQW1CO0lBQ2pCLE9BQU9uQixZQUFQO0VBQ0Q7O0VBQ0QsT0FBT21CLEtBQVA7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL0B2dWUvZGV2dG9vbHMvLi4vc3JjL3N0b3JhZ2UudHM/NTMyZiJdLCJuYW1lcyI6WyJ1c2VTdG9yYWdlIiwiZW52XzEiLCJjaHJvbWUiLCJzdG9yYWdlIiwic3RvcmFnZURhdGEiLCJpbml0U3RvcmFnZSIsIlByb21pc2UiLCJyZXNvbHZlIiwibG9jYWwiLCJnZXQiLCJyZXN1bHQiLCJleHBvcnRzIiwiZ2V0U3RvcmFnZSIsImtleSIsImRlZmF1bHRWYWx1ZSIsImNoZWNrU3RvcmFnZSIsImdldERlZmF1bHRWYWx1ZSIsIkpTT04iLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJlIiwic2V0U3RvcmFnZSIsInZhbCIsInNldCIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJyZW1vdmVTdG9yYWdlIiwicmVtb3ZlIiwicmVtb3ZlSXRlbSIsImNsZWFyU3RvcmFnZSIsImNsZWFyIiwiRXJyb3IiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///58561\n")},34723:(__unused_webpack_module,exports)=>{eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.stringifyStrictCircularAutoChunks = exports.parseCircularAutoChunks = exports.stringifyCircularAutoChunks = void 0;\nconst MAX_SERIALIZED_SIZE = 512 * 1024; // 1MB\n\nfunction encode(data, replacer, list, seen) {\n  let stored, key, value, i, l;\n  const seenIndex = seen.get(data);\n\n  if (seenIndex != null) {\n    return seenIndex;\n  }\n\n  const index = list.length;\n  const proto = Object.prototype.toString.call(data);\n\n  if (proto === '[object Object]') {\n    stored = {};\n    seen.set(data, index);\n    list.push(stored);\n    const keys = Object.keys(data);\n\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n\n      try {\n        value = data[key];\n        if (replacer) value = replacer.call(data, key, value);\n      } catch (e) {\n        value = e;\n      }\n\n      stored[key] = encode(value, replacer, list, seen);\n    }\n  } else if (proto === '[object Array]') {\n    stored = [];\n    seen.set(data, index);\n    list.push(stored);\n\n    for (i = 0, l = data.length; i < l; i++) {\n      try {\n        value = data[i];\n        if (replacer) value = replacer.call(data, i, value);\n      } catch (e) {\n        value = e;\n      }\n\n      stored[i] = encode(value, replacer, list, seen);\n    }\n  } else {\n    list.push(data);\n  }\n\n  return index;\n}\n\nfunction decode(list, reviver) {\n  let i = list.length;\n  let j, k, data, key, value, proto;\n\n  while (i--) {\n    data = list[i];\n    proto = Object.prototype.toString.call(data);\n\n    if (proto === '[object Object]') {\n      const keys = Object.keys(data);\n\n      for (j = 0, k = keys.length; j < k; j++) {\n        key = keys[j];\n        value = list[data[key]];\n        if (reviver) value = reviver.call(data, key, value);\n        data[key] = value;\n      }\n    } else if (proto === '[object Array]') {\n      for (j = 0, k = data.length; j < k; j++) {\n        value = list[data[j]];\n        if (reviver) value = reviver.call(data, j, value);\n        data[j] = value;\n      }\n    }\n  }\n}\n\nfunction stringifyCircularAutoChunks(data, replacer = null, space = null) {\n  let result;\n\n  try {\n    result = arguments.length === 1 ? JSON.stringify(data) // @ts-ignore\n    : JSON.stringify(data, replacer, space);\n  } catch (e) {\n    result = stringifyStrictCircularAutoChunks(data, replacer, space);\n  }\n\n  if (result.length > MAX_SERIALIZED_SIZE) {\n    const chunkCount = Math.ceil(result.length / MAX_SERIALIZED_SIZE);\n    const chunks = [];\n\n    for (let i = 0; i < chunkCount; i++) {\n      chunks.push(result.slice(i * MAX_SERIALIZED_SIZE, (i + 1) * MAX_SERIALIZED_SIZE));\n    }\n\n    return chunks;\n  }\n\n  return result;\n}\n\nexports.stringifyCircularAutoChunks = stringifyCircularAutoChunks;\n\nfunction parseCircularAutoChunks(data, reviver = null) {\n  if (Array.isArray(data)) {\n    data = data.join('');\n  }\n\n  const hasCircular = /^\\s/.test(data);\n\n  if (!hasCircular) {\n    return arguments.length === 1 ? JSON.parse(data) // @ts-ignore\n    : JSON.parse(data, reviver);\n  } else {\n    const list = JSON.parse(data);\n    decode(list, reviver);\n    return list[0];\n  }\n}\n\nexports.parseCircularAutoChunks = parseCircularAutoChunks;\n\nfunction stringifyStrictCircularAutoChunks(data, replacer = null, space = null) {\n  const list = [];\n  encode(data, replacer, list, new Map());\n  return space ? ' ' + JSON.stringify(list, null, space) : ' ' + JSON.stringify(list);\n}\n\nexports.stringifyStrictCircularAutoChunks = stringifyStrictCircularAutoChunks;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFMLENBQWU3QixJQUFmLENBRlY7QUFHRDs7QUFORG9DLHlDQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B2dWUvZGV2dG9vbHMvLi4vc3JjL3RyYW5zZmVyLnRzPzg3ZGQiXSwibmFtZXMiOlsiTUFYX1NFUklBTElaRURfU0laRSIsImVuY29kZSIsImRhdGEiLCJyZXBsYWNlciIsImxpc3QiLCJzZWVuIiwic3RvcmVkIiwia2V5IiwidmFsdWUiLCJpIiwibCIsInNlZW5JbmRleCIsImdldCIsImluZGV4IiwibGVuZ3RoIiwicHJvdG8iLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJzZXQiLCJwdXNoIiwia2V5cyIsImUiLCJkZWNvZGUiLCJyZXZpdmVyIiwiaiIsImsiLCJzdHJpbmdpZnlDaXJjdWxhckF1dG9DaHVua3MiLCJzcGFjZSIsInJlc3VsdCIsImFyZ3VtZW50cyIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdHJpbmdpZnlTdHJpY3RDaXJjdWxhckF1dG9DaHVua3MiLCJjaHVua0NvdW50IiwiTWF0aCIsImNlaWwiLCJjaHVua3MiLCJzbGljZSIsImV4cG9ydHMiLCJwYXJzZUNpcmN1bGFyQXV0b0NodW5rcyIsIkFycmF5IiwiaXNBcnJheSIsImpvaW4iLCJoYXNDaXJjdWxhciIsInRlc3QiLCJwYXJzZSIsIk1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///34723\n")},76203:function(__unused_webpack_module,exports,__webpack_require__){eval("\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.isEmptyObject = exports.copyToClipboard = exports.escape = exports.openInEditor = exports.focusInput = exports.simpleGet = exports.sortByKey = exports.searchDeepInObject = exports.isPlainObject = exports.revive = exports.parse = exports.getCustomRefDetails = exports.getCustomHTMLElementDetails = exports.getCustomFunctionDetails = exports.getCustomComponentDefinitionDetails = exports.getComponentName = exports.reviveSet = exports.getCustomSetDetails = exports.reviveMap = exports.getCustomMapDetails = exports.stringify = exports.specialTokenToString = exports.MAX_ARRAY_SIZE = exports.MAX_STRING_SIZE = exports.SPECIAL_TOKENS = exports.NAN = exports.NEGATIVE_INFINITY = exports.INFINITY = exports.UNDEFINED = exports.inDoc = exports.getComponentDisplayName = exports.kebabize = exports.camelize = exports.classify = void 0;\n\nconst path_1 = __importDefault(__webpack_require__(21023));\n\nconst transfer_1 = __webpack_require__(34723);\n\nconst backend_1 = __webpack_require__(79310);\n\nconst shared_data_1 = __webpack_require__(29556);\n\nconst env_1 = __webpack_require__(66210);\n\nfunction cached(fn) {\n  const cache = Object.create(null);\n  return function cachedFn(str) {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\n\nconst classifyRE = /(?:^|[-_/])(\\w)/g;\nexports.classify = cached(str => {\n  // fix: str.replace may causes '\"replace\" is not a function' exception.\n  // This bug may causes the UI 'Component Filter' to not work properly\n  // e.g. The type of 'str' is Number.\n  // So need cover 'str' to String.\n  return str && ('' + str).replace(classifyRE, toUpper);\n});\nconst camelizeRE = /-(\\w)/g;\nexports.camelize = cached(str => {\n  return str && str.replace(camelizeRE, toUpper);\n});\nconst kebabizeRE = /([a-z0-9])([A-Z])/g;\nexports.kebabize = cached(str => {\n  return str && str.replace(kebabizeRE, (_, lowerCaseCharacter, upperCaseLetter) => {\n    return `${lowerCaseCharacter}-${upperCaseLetter}`;\n  }).toLowerCase();\n});\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\nfunction getComponentDisplayName(originalName, style = 'class') {\n  switch (style) {\n    case 'class':\n      return (0, exports.classify)(originalName);\n\n    case 'kebab':\n      return (0, exports.kebabize)(originalName);\n\n    case 'original':\n    default:\n      return originalName;\n  }\n}\n\nexports.getComponentDisplayName = getComponentDisplayName;\n\nfunction inDoc(node) {\n  if (!node) return false;\n  const doc = node.ownerDocument.documentElement;\n  const parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\nexports.inDoc = inDoc;\n/**\n * Stringify/parse data using CircularJSON.\n */\n\nexports.UNDEFINED = '__vue_devtool_undefined__';\nexports.INFINITY = '__vue_devtool_infinity__';\nexports.NEGATIVE_INFINITY = '__vue_devtool_negative_infinity__';\nexports.NAN = '__vue_devtool_nan__';\nexports.SPECIAL_TOKENS = {\n  true: true,\n  false: false,\n  undefined: exports.UNDEFINED,\n  null: null,\n  '-Infinity': exports.NEGATIVE_INFINITY,\n  Infinity: exports.INFINITY,\n  NaN: exports.NAN\n};\nexports.MAX_STRING_SIZE = 10000;\nexports.MAX_ARRAY_SIZE = 5000;\n\nfunction specialTokenToString(value) {\n  if (value === null) {\n    return 'null';\n  } else if (value === exports.UNDEFINED) {\n    return 'undefined';\n  } else if (value === exports.NAN) {\n    return 'NaN';\n  } else if (value === exports.INFINITY) {\n    return 'Infinity';\n  } else if (value === exports.NEGATIVE_INFINITY) {\n    return '-Infinity';\n  }\n\n  return false;\n}\n\nexports.specialTokenToString = specialTokenToString;\n/**\n * Needed to prevent stack overflow\n * while replacing complex objects\n * like components because we create\n * new objects with the CustomValue API\n * (.i.e `{ _custom: { ... } }`)\n */\n\nclass EncodeCache {\n  constructor() {\n    this.map = new Map();\n  }\n  /**\n   * Returns a result unique to each input data\n   * @param {*} data Input data\n   * @param {*} factory Function used to create the unique result\n   */\n\n\n  cache(data, factory) {\n    const cached = this.map.get(data);\n\n    if (cached) {\n      return cached;\n    } else {\n      const result = factory(data);\n      this.map.set(data, result);\n      return result;\n    }\n  }\n\n  clear() {\n    this.map.clear();\n  }\n\n}\n\nconst encodeCache = new EncodeCache();\n\nclass ReviveCache {\n  constructor(maxSize) {\n    this.maxSize = maxSize;\n    this.map = new Map();\n    this.index = 0;\n    this.size = 0;\n  }\n\n  cache(value) {\n    const currentIndex = this.index;\n    this.map.set(currentIndex, value);\n    this.size++;\n\n    if (this.size > this.maxSize) {\n      this.map.delete(currentIndex - this.size);\n      this.size--;\n    }\n\n    this.index++;\n    return currentIndex;\n  }\n\n  read(id) {\n    return this.map.get(id);\n  }\n\n}\n\nconst reviveCache = new ReviveCache(1000);\nconst replacers = {\n  internal: replacerForInternal,\n  user: replaceForUser\n};\n\nfunction stringify(data, target = 'internal') {\n  // Create a fresh cache for each serialization\n  encodeCache.clear();\n  return (0, transfer_1.stringifyCircularAutoChunks)(data, replacers[target]);\n}\n\nexports.stringify = stringify;\n\nfunction replacerForInternal(key) {\n  var _a; // @ts-ignore\n\n\n  const val = this[key];\n  const type = typeof val;\n\n  if (Array.isArray(val)) {\n    const l = val.length;\n\n    if (l > exports.MAX_ARRAY_SIZE) {\n      return {\n        _isArray: true,\n        length: l,\n        items: val.slice(0, exports.MAX_ARRAY_SIZE)\n      };\n    }\n\n    return val;\n  } else if (typeof val === 'string') {\n    if (val.length > exports.MAX_STRING_SIZE) {\n      return val.substring(0, exports.MAX_STRING_SIZE) + `... (${val.length} total length)`;\n    } else {\n      return val;\n    }\n  } else if (type === 'undefined') {\n    return exports.UNDEFINED;\n  } else if (val === Infinity) {\n    return exports.INFINITY;\n  } else if (val === -Infinity) {\n    return exports.NEGATIVE_INFINITY;\n  } else if (type === 'function') {\n    return getCustomFunctionDetails(val);\n  } else if (type === 'symbol') {\n    return `[native Symbol ${Symbol.prototype.toString.call(val)}]`;\n  } else if (val !== null && type === 'object') {\n    const proto = Object.prototype.toString.call(val);\n\n    if (proto === '[object Map]') {\n      return encodeCache.cache(val, () => getCustomMapDetails(val));\n    } else if (proto === '[object Set]') {\n      return encodeCache.cache(val, () => getCustomSetDetails(val));\n    } else if (proto === '[object RegExp]') {\n      // special handling of native type\n      return `[native RegExp ${RegExp.prototype.toString.call(val)}]`;\n    } else if (proto === '[object Date]') {\n      return `[native Date ${Date.prototype.toString.call(val)}]`;\n    } else if (proto === '[object Error]') {\n      return `[native Error ${val.message}<>${val.stack}]`;\n    } else if (val.state && val._vm) {\n      return encodeCache.cache(val, () => (0, backend_1.getCustomStoreDetails)(val));\n    } else if (val.constructor && val.constructor.name === 'VueRouter') {\n      return encodeCache.cache(val, () => (0, backend_1.getCustomRouterDetails)(val));\n    } else if ((0, backend_1.isVueInstance)(val)) {\n      return encodeCache.cache(val, () => (0, backend_1.getCustomInstanceDetails)(val));\n    } else if (typeof val.render === 'function') {\n      return encodeCache.cache(val, () => getCustomComponentDefinitionDetails(val));\n    } else if (val.constructor && val.constructor.name === 'VNode') {\n      return `[native VNode <${val.tag}>]`;\n    } else if (typeof HTMLElement !== 'undefined' && val instanceof HTMLElement) {\n      return encodeCache.cache(val, () => getCustomHTMLElementDetails(val));\n    } else if (((_a = val.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Store' && val._wrappedGetters) {\n      return `[object Store]`;\n    } else if (val.currentRoute) {\n      return `[object Router]`;\n    }\n\n    const customDetails = (0, backend_1.getCustomObjectDetails)(val, proto);\n    if (customDetails != null) return customDetails;\n  } else if (Number.isNaN(val)) {\n    return exports.NAN;\n  }\n\n  return sanitize(val);\n} // @TODO revive from backend to have more data to the clipboard\n\n\nfunction replaceForUser(key) {\n  // @ts-ignore\n  let val = this[key];\n  const type = typeof val;\n\n  if ((val === null || val === void 0 ? void 0 : val._custom) && 'value' in val._custom) {\n    val = val._custom.value;\n  }\n\n  if (type !== 'object') {\n    if (val === exports.UNDEFINED) {\n      return undefined;\n    } else if (val === exports.INFINITY) {\n      return Infinity;\n    } else if (val === exports.NEGATIVE_INFINITY) {\n      return -Infinity;\n    } else if (val === exports.NAN) {\n      return NaN;\n    }\n\n    return val;\n  }\n\n  return sanitize(val);\n}\n\nfunction getCustomMapDetails(val) {\n  const list = [];\n  val.forEach((value, key) => list.push({\n    key,\n    value\n  }));\n  return {\n    _custom: {\n      type: 'map',\n      display: 'Map',\n      value: list,\n      readOnly: true,\n      fields: {\n        abstract: true\n      }\n    }\n  };\n}\n\nexports.getCustomMapDetails = getCustomMapDetails;\n\nfunction reviveMap(val) {\n  const result = new Map();\n  const list = val._custom.value;\n\n  for (let i = 0; i < list.length; i++) {\n    const {\n      key,\n      value\n    } = list[i];\n    result.set(key, revive(value));\n  }\n\n  return result;\n}\n\nexports.reviveMap = reviveMap;\n\nfunction getCustomSetDetails(val) {\n  const list = Array.from(val);\n  return {\n    _custom: {\n      type: 'set',\n      display: `Set[${list.length}]`,\n      value: list,\n      readOnly: true\n    }\n  };\n}\n\nexports.getCustomSetDetails = getCustomSetDetails;\n\nfunction reviveSet(val) {\n  const result = new Set();\n  const list = val._custom.value;\n\n  for (let i = 0; i < list.length; i++) {\n    const value = list[i];\n    result.add(revive(value));\n  }\n\n  return result;\n}\n\nexports.reviveSet = reviveSet; // Use a custom basename functions instead of the shimed version\n// because it doesn't work on Windows\n\nfunction basename(filename, ext) {\n  return path_1.default.basename(filename.replace(/^[a-zA-Z]:/, '').replace(/\\\\/g, '/'), ext);\n}\n\nfunction getComponentName(options) {\n  const name = options.displayName || options.name || options._componentTag;\n\n  if (name) {\n    return name;\n  }\n\n  const file = options.__file; // injected by vue-loader\n\n  if (file) {\n    return (0, exports.classify)(basename(file, '.vue'));\n  }\n}\n\nexports.getComponentName = getComponentName;\n\nfunction getCustomComponentDefinitionDetails(def) {\n  let display = getComponentName(def);\n\n  if (display) {\n    if (def.name && def.__file) {\n      display += ` <span>(${def.__file})</span>`;\n    }\n  } else {\n    display = '<i>Unknown Component</i>';\n  }\n\n  return {\n    _custom: {\n      type: 'component-definition',\n      display,\n      tooltip: 'Component definition',\n      ...(def.__file ? {\n        file: def.__file\n      } : {})\n    }\n  };\n}\n\nexports.getCustomComponentDefinitionDetails = getCustomComponentDefinitionDetails; // eslint-disable-next-line @typescript-eslint/ban-types\n\nfunction getCustomFunctionDetails(func) {\n  let string = '';\n  let matches = null;\n\n  try {\n    string = Function.prototype.toString.call(func);\n    matches = String.prototype.match.call(string, /\\([\\s\\S]*?\\)/);\n  } catch (e) {// Func is probably a Proxy, which can break Function.prototype.toString()\n  } // Trim any excess whitespace from the argument string\n\n\n  const match = matches && matches[0];\n  const args = typeof match === 'string' ? match : '(?)';\n  const name = typeof func.name === 'string' ? func.name : '';\n  return {\n    _custom: {\n      type: 'function',\n      display: `<span style=\"opacity:.5;\">function</span> ${escape(name)}${args}`,\n      tooltip: string.trim() ? `<pre>${string}</pre>` : null,\n      _reviveId: reviveCache.cache(func)\n    }\n  };\n}\n\nexports.getCustomFunctionDetails = getCustomFunctionDetails;\n\nfunction getCustomHTMLElementDetails(value) {\n  try {\n    return {\n      _custom: {\n        type: 'HTMLElement',\n        display: `<span class=\"opacity-30\">&lt;</span><span class=\"text-blue-500\">${value.tagName.toLowerCase()}</span><span class=\"opacity-30\">&gt;</span>`,\n        value: namedNodeMapToObject(value.attributes),\n        actions: [{\n          icon: 'input',\n          tooltip: 'Log element to console',\n          action: () => {\n            // eslint-disable-next-line no-console\n            console.log(value);\n          }\n        }]\n      }\n    };\n  } catch (e) {\n    return {\n      _custom: {\n        type: 'HTMLElement',\n        display: `<span class=\"text-blue-500\">${String(value)}</span>`\n      }\n    };\n  }\n}\n\nexports.getCustomHTMLElementDetails = getCustomHTMLElementDetails;\n\nfunction namedNodeMapToObject(map) {\n  const result = {};\n  const l = map.length;\n\n  for (let i = 0; i < l; i++) {\n    const node = map.item(i);\n    result[node.name] = node.value;\n  }\n\n  return result;\n}\n\nfunction getCustomRefDetails(instance, key, ref) {\n  let value;\n\n  if (Array.isArray(ref)) {\n    value = ref.map(r => getCustomRefDetails(instance, key, r)).map(data => data.value);\n  } else {\n    let name;\n\n    if (ref._isVue) {\n      name = getComponentName(ref.$options);\n    } else {\n      name = ref.tagName.toLowerCase();\n    }\n\n    value = {\n      _custom: {\n        display: `&lt;${name}` + (ref.id ? ` <span class=\"attr-title\">id</span>=\"${ref.id}\"` : '') + (ref.className ? ` <span class=\"attr-title\">class</span>=\"${ref.className}\"` : '') + '&gt;',\n        uid: instance.__VUE_DEVTOOLS_UID__,\n        type: 'reference'\n      }\n    };\n  }\n\n  return {\n    type: '$refs',\n    key: key,\n    value,\n    editable: false\n  };\n}\n\nexports.getCustomRefDetails = getCustomRefDetails;\n\nfunction parse(data, revive = false) {\n  return revive ? (0, transfer_1.parseCircularAutoChunks)(data, reviver) : (0, transfer_1.parseCircularAutoChunks)(data);\n}\n\nexports.parse = parse;\nconst specialTypeRE = /^\\[native (\\w+) (.*?)(<>((.|\\s)*))?\\]$/;\nconst symbolRE = /^\\[native Symbol Symbol\\((.*)\\)\\]$/;\n\nfunction reviver(key, val) {\n  return revive(val);\n}\n\nfunction revive(val) {\n  if (val === exports.UNDEFINED) {\n    return undefined;\n  } else if (val === exports.INFINITY) {\n    return Infinity;\n  } else if (val === exports.NEGATIVE_INFINITY) {\n    return -Infinity;\n  } else if (val === exports.NAN) {\n    return NaN;\n  } else if (val && val._custom) {\n    const {\n      _custom: custom\n    } = val;\n\n    if (custom.type === 'component') {\n      return (0, backend_1.getInstanceMap)().get(custom.id);\n    } else if (custom.type === 'map') {\n      return reviveMap(val);\n    } else if (custom.type === 'set') {\n      return reviveSet(val);\n    } else if (custom._reviveId) {\n      return reviveCache.read(custom._reviveId);\n    } else {\n      return revive(custom.value);\n    }\n  } else if (symbolRE.test(val)) {\n    const [, string] = symbolRE.exec(val);\n    return Symbol.for(string);\n  } else if (specialTypeRE.test(val)) {\n    const [, type, string,, details] = specialTypeRE.exec(val);\n    const result = new env_1.target[type](string);\n\n    if (type === 'Error' && details) {\n      result.stack = details;\n    }\n\n    return result;\n  } else {\n    return val;\n  }\n}\n\nexports.revive = revive;\n/**\n * Sanitize data to be posted to the other side.\n * Since the message posted is sent with structured clone,\n * we need to filter out any types that might cause an error.\n *\n * @param {*} data\n * @return {*}\n */\n\nfunction sanitize(data) {\n  if (!isPrimitive(data) && !Array.isArray(data) && !isPlainObject(data)) {\n    // handle types that will probably cause issues in\n    // the structured clone\n    return Object.prototype.toString.call(data);\n  } else {\n    return data;\n  }\n}\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexports.isPlainObject = isPlainObject;\n\nfunction isPrimitive(data) {\n  if (data == null) {\n    return true;\n  }\n\n  const type = typeof data;\n  return type === 'string' || type === 'number' || type === 'boolean';\n}\n/**\n * Searches a key or value in the object, with a maximum deepness\n * @param {*} obj Search target\n * @param {string} searchTerm Search string\n * @returns {boolean} Search match\n */\n\n\nfunction searchDeepInObject(obj, searchTerm) {\n  const seen = new Map();\n  const result = internalSearchObject(obj, searchTerm.toLowerCase(), seen, 0);\n  seen.clear();\n  return result;\n}\n\nexports.searchDeepInObject = searchDeepInObject;\nconst SEARCH_MAX_DEPTH = 10;\n/**\n * Executes a search on each field of the provided object\n * @param {*} obj Search target\n * @param {string} searchTerm Search string\n * @param {Map<any,boolean>} seen Map containing the search result to prevent stack overflow by walking on the same object multiple times\n * @param {number} depth Deep search depth level, which is capped to prevent performance issues\n * @returns {boolean} Search match\n */\n\nfunction internalSearchObject(obj, searchTerm, seen, depth) {\n  if (depth > SEARCH_MAX_DEPTH) {\n    return false;\n  }\n\n  let match = false;\n  const keys = Object.keys(obj);\n  let key, value;\n\n  for (let i = 0; i < keys.length; i++) {\n    key = keys[i];\n    value = obj[key];\n    match = internalSearchCheck(searchTerm, key, value, seen, depth + 1);\n\n    if (match) {\n      break;\n    }\n  }\n\n  return match;\n}\n/**\n * Executes a search on each value of the provided array\n * @param {*} array Search target\n * @param {string} searchTerm Search string\n * @param {Map<any,boolean>} seen Map containing the search result to prevent stack overflow by walking on the same object multiple times\n * @param {number} depth Deep search depth level, which is capped to prevent performance issues\n * @returns {boolean} Search match\n */\n\n\nfunction internalSearchArray(array, searchTerm, seen, depth) {\n  if (depth > SEARCH_MAX_DEPTH) {\n    return false;\n  }\n\n  let match = false;\n  let value;\n\n  for (let i = 0; i < array.length; i++) {\n    value = array[i];\n    match = internalSearchCheck(searchTerm, null, value, seen, depth + 1);\n\n    if (match) {\n      break;\n    }\n  }\n\n  return match;\n}\n/**\n * Checks if the provided field matches the search terms\n * @param {string} searchTerm Search string\n * @param {string} key Field key (null if from array)\n * @param {*} value Field value\n * @param {Map<any,boolean>} seen Map containing the search result to prevent stack overflow by walking on the same object multiple times\n * @param {number} depth Deep search depth level, which is capped to prevent performance issues\n * @returns {boolean} Search match\n */\n\n\nfunction internalSearchCheck(searchTerm, key, value, seen, depth) {\n  let match = false;\n  let result;\n\n  if (key === '_custom') {\n    key = value.display;\n    value = value.value;\n  }\n\n  (result = specialTokenToString(value)) && (value = result);\n\n  if (key && compare(key, searchTerm)) {\n    match = true;\n    seen.set(value, true);\n  } else if (seen.has(value)) {\n    match = seen.get(value);\n  } else if (Array.isArray(value)) {\n    seen.set(value, null);\n    match = internalSearchArray(value, searchTerm, seen, depth);\n    seen.set(value, match);\n  } else if (isPlainObject(value)) {\n    seen.set(value, null);\n    match = internalSearchObject(value, searchTerm, seen, depth);\n    seen.set(value, match);\n  } else if (compare(value, searchTerm)) {\n    match = true;\n    seen.set(value, true);\n  }\n\n  return match;\n}\n/**\n * Compares two values\n * @param {*} value Mixed type value that will be cast to string\n * @param {string} searchTerm Search string\n * @returns {boolean} Search match\n */\n\n\nfunction compare(value, searchTerm) {\n  return ('' + value).toLowerCase().indexOf(searchTerm) !== -1;\n}\n\nfunction sortByKey(state) {\n  return state && state.slice().sort((a, b) => {\n    if (a.key < b.key) return -1;\n    if (a.key > b.key) return 1;\n    return 0;\n  });\n}\n\nexports.sortByKey = sortByKey;\n\nfunction simpleGet(object, path) {\n  const sections = Array.isArray(path) ? path : path.split('.');\n\n  for (let i = 0; i < sections.length; i++) {\n    object = object[sections[i]];\n\n    if (!object) {\n      return undefined;\n    }\n  }\n\n  return object;\n}\n\nexports.simpleGet = simpleGet;\n\nfunction focusInput(el) {\n  el.focus();\n  el.setSelectionRange(0, el.value.length);\n}\n\nexports.focusInput = focusInput;\n\nfunction openInEditor(file) {\n  // Console display\n  const fileName = file.replace(/\\\\/g, '\\\\\\\\');\n  const src = `fetch('${shared_data_1.SharedData.openInEditorHost}__open-in-editor?file=${encodeURI(file)}').then(response => {\n    if (response.ok) {\n      console.log('File ${fileName} opened in editor')\n    } else {\n      const msg = 'Opening component ${fileName} failed'\n      const target = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {}\n      if (target.__VUE_DEVTOOLS_TOAST__) {\n        target.__VUE_DEVTOOLS_TOAST__(msg, 'error')\n      } else {\n        console.log('%c' + msg, 'color:red')\n      }\n      console.log('Check the setup of your project, see https://devtools.vuejs.org/guide/open-in-editor.html')\n    }\n  })`;\n\n  if (env_1.isChrome) {\n    env_1.target.chrome.devtools.inspectedWindow.eval(src);\n  } else {\n    // eslint-disable-next-line no-eval\n    eval(src);\n  }\n}\n\nexports.openInEditor = openInEditor;\nconst ESC = {\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '&': '&amp;'\n};\n\nfunction escape(s) {\n  return s.replace(/[<>\"&]/g, escapeChar);\n}\n\nexports.escape = escape;\n\nfunction escapeChar(a) {\n  return ESC[a] || a;\n}\n\nfunction copyToClipboard(state) {\n  let text;\n\n  if (typeof state !== 'object') {\n    text = String(state);\n  } else {\n    text = stringify(state, 'user');\n  } // @TODO navigator.clipboard is buggy in extensions\n\n\n  if (typeof document === 'undefined') return;\n  const dummyTextArea = document.createElement('textarea');\n  dummyTextArea.textContent = text;\n  document.body.appendChild(dummyTextArea);\n  dummyTextArea.select();\n  document.execCommand('copy');\n  document.body.removeChild(dummyTextArea);\n}\n\nexports.copyToClipboard = copyToClipboard;\n\nfunction isEmptyObject(obj) {\n  return obj === exports.UNDEFINED || !obj || Object.keys(obj).length === 0;\n}\n\nexports.isEmptyObject = isEmptyObject;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///76203\n")},85628:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval("/* harmony import */ var _back_hook__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6793);\n/* harmony import */ var _vue_devtools_shared_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27146);\n/* harmony import */ var _vue_devtools_shared_utils__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_vue_devtools_shared_utils__WEBPACK_IMPORTED_MODULE_1__);\n\n\n(0,_back_hook__WEBPACK_IMPORTED_MODULE_0__/* .installHook */ .U)(_vue_devtools_shared_utils__WEBPACK_IMPORTED_MODULE_1__.target);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODU2MjguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUVBQSxnRUFBVyxDQUFDQyw4REFBRCxDQUFYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZ1ZS9kZXZ0b29scy8uL3NyYy9ob29rLmpzPzg3Y2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5zdGFsbEhvb2sgfSBmcm9tICdAYmFjay9ob29rJ1xuaW1wb3J0IHsgdGFyZ2V0IH0gZnJvbSAnQHZ1ZS1kZXZ0b29scy9zaGFyZWQtdXRpbHMnXG5cbmluc3RhbGxIb29rKHRhcmdldClcbiJdLCJuYW1lcyI6WyJpbnN0YWxsSG9vayIsInRhcmdldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///85628\n")},22699:module=>{eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22699\n")},21023:module=>{eval("// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///21023\n")}},__webpack_module_cache__={};function __webpack_require__(Q){var B=__webpack_module_cache__[Q];if(void 0!==B)return B.exports;var U=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q].call(U.exports,U,U.exports,__webpack_require__),U.exports}(()=>{__webpack_require__.n=Q=>{var B=Q&&Q.__esModule?()=>Q["default"]:()=>Q;return __webpack_require__.d(B,{a:B}),B}})(),(()=>{__webpack_require__.d=(Q,B)=>{for(var U in B)__webpack_require__.o(B,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:B[U]})}})(),(()=>{__webpack_require__.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"===typeof window)return window}}()})(),(()=>{__webpack_require__.o=(Q,B)=>Object.prototype.hasOwnProperty.call(Q,B)})();var __webpack_exports__=__webpack_require__(85628)})();