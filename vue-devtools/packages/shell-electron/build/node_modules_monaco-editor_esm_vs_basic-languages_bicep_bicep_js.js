/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_vue_devtools"] = self["webpackChunk_vue_devtools"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_bicep_bicep_js"],{

/***/ "../../node_modules/monaco-editor/esm/vs/basic-languages/bicep/bicep.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/monaco-editor/esm/vs/basic-languages/bicep/bicep.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": () => (/* binding */ conf),\n/* harmony export */   \"language\": () => (/* binding */ language)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar bounded = function (text) { return \"\\\\b\" + text + \"\\\\b\"; };\nvar identifierStart = '[_a-zA-Z]';\nvar identifierContinue = '[_a-zA-Z0-9]';\nvar identifier = bounded(\"\" + identifierStart + identifierContinue + \"*\");\nvar keywords = [\n    'targetScope',\n    'resource',\n    'module',\n    'param',\n    'var',\n    'output',\n    'for',\n    'in',\n    'if',\n    'existing'\n];\nvar namedLiterals = ['true', 'false', 'null'];\nvar nonCommentWs = \"[ \\\\t\\\\r\\\\n]\";\nvar numericLiteral = \"[0-9]+\";\nvar conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: \"'\", close: \"'\" },\n        { open: \"'''\", close: \"'''\" }\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\n        { open: \"'''\", close: \"'''\", notIn: ['string', 'comment'] }\n    ],\n    autoCloseBefore: \":.,=}])' \\n\\t\",\n    indentationRules: {\n        increaseIndentPattern: new RegExp('^((?!\\\\/\\\\/).)*(\\\\{[^}\"\\'`]*|\\\\([^)\"\\'`]*|\\\\[[^\\\\]\"\\'`]*)$'),\n        decreaseIndentPattern: new RegExp('^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$')\n    }\n};\nvar language = {\n    defaultToken: '',\n    tokenPostfix: '.bicep',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    symbols: /[=><!~?:&|+\\-*/^%]+/,\n    keywords: keywords,\n    namedLiterals: namedLiterals,\n    escapes: \"\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|'|\\\\${)\",\n    tokenizer: {\n        root: [{ include: '@expression' }, { include: '@whitespace' }],\n        stringVerbatim: [\n            { regex: \"(|'|'')[^']\", action: { token: 'string' } },\n            { regex: \"'''\", action: { token: 'string.quote', next: '@pop' } }\n        ],\n        stringLiteral: [\n            { regex: \"\\\\${\", action: { token: 'delimiter.bracket', next: '@bracketCounting' } },\n            { regex: \"[^\\\\\\\\'$]+\", action: { token: 'string' } },\n            { regex: '@escapes', action: { token: 'string.escape' } },\n            { regex: \"\\\\\\\\.\", action: { token: 'string.escape.invalid' } },\n            { regex: \"'\", action: { token: 'string', next: '@pop' } }\n        ],\n        bracketCounting: [\n            { regex: \"{\", action: { token: 'delimiter.bracket', next: '@bracketCounting' } },\n            { regex: \"}\", action: { token: 'delimiter.bracket', next: '@pop' } },\n            { include: 'expression' }\n        ],\n        comment: [\n            { regex: \"[^\\\\*]+\", action: { token: 'comment' } },\n            { regex: \"\\\\*\\\\/\", action: { token: 'comment', next: '@pop' } },\n            { regex: \"[\\\\/*]\", action: { token: 'comment' } }\n        ],\n        whitespace: [\n            { regex: nonCommentWs },\n            { regex: \"\\\\/\\\\*\", action: { token: 'comment', next: '@comment' } },\n            { regex: \"\\\\/\\\\/.*$\", action: { token: 'comment' } }\n        ],\n        expression: [\n            { regex: \"'''\", action: { token: 'string.quote', next: '@stringVerbatim' } },\n            { regex: \"'\", action: { token: 'string.quote', next: '@stringLiteral' } },\n            { regex: numericLiteral, action: { token: 'number' } },\n            {\n                regex: identifier,\n                action: {\n                    cases: {\n                        '@keywords': { token: 'keyword' },\n                        '@namedLiterals': { token: 'keyword' },\n                        '@default': { token: 'identifier' }\n                    }\n                }\n            }\n        ]\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdnVlL2RldnRvb2xzLy4uLy4uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvYmljZXAvYmljZXAuanM/ZjM1YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSwrQkFBK0IsNkJBQTZCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxTQUFTLFlBQVksR0FBRztBQUNqQyxTQUFTLHdCQUF3QjtBQUNqQyxTQUFTLHdCQUF3QjtBQUNqQyxTQUFTLHdCQUF3QjtBQUNqQyxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVMsU0FBUyxZQUFZLEdBQUc7QUFDakMsU0FBUyx3QkFBd0I7QUFDakMsU0FBUyx3QkFBd0I7QUFDakMsU0FBUyxzREFBc0Q7QUFDL0QsU0FBUztBQUNUO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsOERBQThELEdBQUc7QUFDakUsMEVBQTBFO0FBQzFFO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVMsU0FBUyxZQUFZLDZCQUE2QjtBQUMzRCxTQUFTLG1EQUFtRDtBQUM1RCxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsYUFBYSxrQkFBa0I7QUFDcEQ7QUFDQSxnQkFBZ0IseUJBQXlCLEdBQUcseUJBQXlCO0FBQ3JFO0FBQ0EsYUFBYSxnQ0FBZ0Msa0JBQWtCLEVBQUU7QUFDakUsYUFBYSx3QkFBd0Isc0NBQXNDO0FBQzNFO0FBQ0E7QUFDQSxhQUFhLGFBQWEsWUFBWSx1REFBdUQsRUFBRTtBQUMvRixhQUFhLCtCQUErQixrQkFBa0IsRUFBRTtBQUNoRSxhQUFhLDZCQUE2Qix5QkFBeUIsRUFBRTtBQUNyRSxhQUFhLDBCQUEwQixpQ0FBaUMsRUFBRTtBQUMxRSxhQUFhLHNCQUFzQixnQ0FBZ0M7QUFDbkU7QUFDQTtBQUNBLGFBQWEsVUFBVSxZQUFZLHVEQUF1RCxFQUFFO0FBQzVGLGFBQWEsVUFBVSxZQUFZLDJDQUEyQyxFQUFFO0FBQ2hGLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYSw0QkFBNEIsbUJBQW1CLEVBQUU7QUFDOUQsYUFBYSwyQkFBMkIsaUNBQWlDLEVBQUU7QUFDM0UsYUFBYSwyQkFBMkIsbUJBQW1CO0FBQzNEO0FBQ0E7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLDJCQUEyQixxQ0FBcUMsRUFBRTtBQUMvRSxhQUFhLDhCQUE4QixtQkFBbUI7QUFDOUQ7QUFDQTtBQUNBLGFBQWEsd0JBQXdCLGlEQUFpRCxFQUFFO0FBQ3hGLGFBQWEsc0JBQXNCLGdEQUFnRCxFQUFFO0FBQ3JGLGFBQWEsaUNBQWlDLGtCQUFrQixFQUFFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLG1CQUFtQjtBQUN6RCwyQ0FBMkMsbUJBQW1CO0FBQzlELHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9iaWNlcC9iaWNlcC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxudmFyIGJvdW5kZWQgPSBmdW5jdGlvbiAodGV4dCkgeyByZXR1cm4gXCJcXFxcYlwiICsgdGV4dCArIFwiXFxcXGJcIjsgfTtcbnZhciBpZGVudGlmaWVyU3RhcnQgPSAnW19hLXpBLVpdJztcbnZhciBpZGVudGlmaWVyQ29udGludWUgPSAnW19hLXpBLVowLTldJztcbnZhciBpZGVudGlmaWVyID0gYm91bmRlZChcIlwiICsgaWRlbnRpZmllclN0YXJ0ICsgaWRlbnRpZmllckNvbnRpbnVlICsgXCIqXCIpO1xudmFyIGtleXdvcmRzID0gW1xuICAgICd0YXJnZXRTY29wZScsXG4gICAgJ3Jlc291cmNlJyxcbiAgICAnbW9kdWxlJyxcbiAgICAncGFyYW0nLFxuICAgICd2YXInLFxuICAgICdvdXRwdXQnLFxuICAgICdmb3InLFxuICAgICdpbicsXG4gICAgJ2lmJyxcbiAgICAnZXhpc3RpbmcnXG5dO1xudmFyIG5hbWVkTGl0ZXJhbHMgPSBbJ3RydWUnLCAnZmFsc2UnLCAnbnVsbCddO1xudmFyIG5vbkNvbW1lbnRXcyA9IFwiWyBcXFxcdFxcXFxyXFxcXG5dXCI7XG52YXIgbnVtZXJpY0xpdGVyYWwgPSBcIlswLTldK1wiO1xuZXhwb3J0IHZhciBjb25mID0ge1xuICAgIGNvbW1lbnRzOiB7XG4gICAgICAgIGxpbmVDb21tZW50OiAnLy8nLFxuICAgICAgICBibG9ja0NvbW1lbnQ6IFsnLyonLCAnKi8nXVxuICAgIH0sXG4gICAgYnJhY2tldHM6IFtcbiAgICAgICAgWyd7JywgJ30nXSxcbiAgICAgICAgWydbJywgJ10nXSxcbiAgICAgICAgWycoJywgJyknXVxuICAgIF0sXG4gICAgc3Vycm91bmRpbmdQYWlyczogW1xuICAgICAgICB7IG9wZW46ICd7JywgY2xvc2U6ICd9JyB9LFxuICAgICAgICB7IG9wZW46ICdbJywgY2xvc2U6ICddJyB9LFxuICAgICAgICB7IG9wZW46ICcoJywgY2xvc2U6ICcpJyB9LFxuICAgICAgICB7IG9wZW46IFwiJ1wiLCBjbG9zZTogXCInXCIgfSxcbiAgICAgICAgeyBvcGVuOiBcIicnJ1wiLCBjbG9zZTogXCInJydcIiB9XG4gICAgXSxcbiAgICBhdXRvQ2xvc2luZ1BhaXJzOiBbXG4gICAgICAgIHsgb3BlbjogJ3snLCBjbG9zZTogJ30nIH0sXG4gICAgICAgIHsgb3BlbjogJ1snLCBjbG9zZTogJ10nIH0sXG4gICAgICAgIHsgb3BlbjogJygnLCBjbG9zZTogJyknIH0sXG4gICAgICAgIHsgb3BlbjogXCInXCIsIGNsb3NlOiBcIidcIiwgbm90SW46IFsnc3RyaW5nJywgJ2NvbW1lbnQnXSB9LFxuICAgICAgICB7IG9wZW46IFwiJycnXCIsIGNsb3NlOiBcIicnJ1wiLCBub3RJbjogWydzdHJpbmcnLCAnY29tbWVudCddIH1cbiAgICBdLFxuICAgIGF1dG9DbG9zZUJlZm9yZTogXCI6Liw9fV0pJyBcXG5cXHRcIixcbiAgICBpbmRlbnRhdGlvblJ1bGVzOiB7XG4gICAgICAgIGluY3JlYXNlSW5kZW50UGF0dGVybjogbmV3IFJlZ0V4cCgnXigoPyFcXFxcL1xcXFwvKS4pKihcXFxce1tefVwiXFwnYF0qfFxcXFwoW14pXCJcXCdgXSp8XFxcXFtbXlxcXFxdXCJcXCdgXSopJCcpLFxuICAgICAgICBkZWNyZWFzZUluZGVudFBhdHRlcm46IG5ldyBSZWdFeHAoJ14oKD8hLio/XFxcXC9cXFxcKikuKlxcXFwqLyk/XFxcXHMqW1xcXFx9XFxcXF1dLiokJylcbiAgICB9XG59O1xuZXhwb3J0IHZhciBsYW5ndWFnZSA9IHtcbiAgICBkZWZhdWx0VG9rZW46ICcnLFxuICAgIHRva2VuUG9zdGZpeDogJy5iaWNlcCcsXG4gICAgYnJhY2tldHM6IFtcbiAgICAgICAgeyBvcGVuOiAneycsIGNsb3NlOiAnfScsIHRva2VuOiAnZGVsaW1pdGVyLmN1cmx5JyB9LFxuICAgICAgICB7IG9wZW46ICdbJywgY2xvc2U6ICddJywgdG9rZW46ICdkZWxpbWl0ZXIuc3F1YXJlJyB9LFxuICAgICAgICB7IG9wZW46ICcoJywgY2xvc2U6ICcpJywgdG9rZW46ICdkZWxpbWl0ZXIucGFyZW50aGVzaXMnIH1cbiAgICBdLFxuICAgIHN5bWJvbHM6IC9bPT48IX4/OiZ8K1xcLSovXiVdKy8sXG4gICAga2V5d29yZHM6IGtleXdvcmRzLFxuICAgIG5hbWVkTGl0ZXJhbHM6IG5hbWVkTGl0ZXJhbHMsXG4gICAgZXNjYXBlczogXCJcXFxcXFxcXCh1e1swLTlBLUZhLWZdK318bnxyfHR8XFxcXFxcXFx8J3xcXFxcJHspXCIsXG4gICAgdG9rZW5pemVyOiB7XG4gICAgICAgIHJvb3Q6IFt7IGluY2x1ZGU6ICdAZXhwcmVzc2lvbicgfSwgeyBpbmNsdWRlOiAnQHdoaXRlc3BhY2UnIH1dLFxuICAgICAgICBzdHJpbmdWZXJiYXRpbTogW1xuICAgICAgICAgICAgeyByZWdleDogXCIofCd8JycpW14nXVwiLCBhY3Rpb246IHsgdG9rZW46ICdzdHJpbmcnIH0gfSxcbiAgICAgICAgICAgIHsgcmVnZXg6IFwiJycnXCIsIGFjdGlvbjogeyB0b2tlbjogJ3N0cmluZy5xdW90ZScsIG5leHQ6ICdAcG9wJyB9IH1cbiAgICAgICAgXSxcbiAgICAgICAgc3RyaW5nTGl0ZXJhbDogW1xuICAgICAgICAgICAgeyByZWdleDogXCJcXFxcJHtcIiwgYWN0aW9uOiB7IHRva2VuOiAnZGVsaW1pdGVyLmJyYWNrZXQnLCBuZXh0OiAnQGJyYWNrZXRDb3VudGluZycgfSB9LFxuICAgICAgICAgICAgeyByZWdleDogXCJbXlxcXFxcXFxcJyRdK1wiLCBhY3Rpb246IHsgdG9rZW46ICdzdHJpbmcnIH0gfSxcbiAgICAgICAgICAgIHsgcmVnZXg6ICdAZXNjYXBlcycsIGFjdGlvbjogeyB0b2tlbjogJ3N0cmluZy5lc2NhcGUnIH0gfSxcbiAgICAgICAgICAgIHsgcmVnZXg6IFwiXFxcXFxcXFwuXCIsIGFjdGlvbjogeyB0b2tlbjogJ3N0cmluZy5lc2NhcGUuaW52YWxpZCcgfSB9LFxuICAgICAgICAgICAgeyByZWdleDogXCInXCIsIGFjdGlvbjogeyB0b2tlbjogJ3N0cmluZycsIG5leHQ6ICdAcG9wJyB9IH1cbiAgICAgICAgXSxcbiAgICAgICAgYnJhY2tldENvdW50aW5nOiBbXG4gICAgICAgICAgICB7IHJlZ2V4OiBcIntcIiwgYWN0aW9uOiB7IHRva2VuOiAnZGVsaW1pdGVyLmJyYWNrZXQnLCBuZXh0OiAnQGJyYWNrZXRDb3VudGluZycgfSB9LFxuICAgICAgICAgICAgeyByZWdleDogXCJ9XCIsIGFjdGlvbjogeyB0b2tlbjogJ2RlbGltaXRlci5icmFja2V0JywgbmV4dDogJ0Bwb3AnIH0gfSxcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ2V4cHJlc3Npb24nIH1cbiAgICAgICAgXSxcbiAgICAgICAgY29tbWVudDogW1xuICAgICAgICAgICAgeyByZWdleDogXCJbXlxcXFwqXStcIiwgYWN0aW9uOiB7IHRva2VuOiAnY29tbWVudCcgfSB9LFxuICAgICAgICAgICAgeyByZWdleDogXCJcXFxcKlxcXFwvXCIsIGFjdGlvbjogeyB0b2tlbjogJ2NvbW1lbnQnLCBuZXh0OiAnQHBvcCcgfSB9LFxuICAgICAgICAgICAgeyByZWdleDogXCJbXFxcXC8qXVwiLCBhY3Rpb246IHsgdG9rZW46ICdjb21tZW50JyB9IH1cbiAgICAgICAgXSxcbiAgICAgICAgd2hpdGVzcGFjZTogW1xuICAgICAgICAgICAgeyByZWdleDogbm9uQ29tbWVudFdzIH0sXG4gICAgICAgICAgICB7IHJlZ2V4OiBcIlxcXFwvXFxcXCpcIiwgYWN0aW9uOiB7IHRva2VuOiAnY29tbWVudCcsIG5leHQ6ICdAY29tbWVudCcgfSB9LFxuICAgICAgICAgICAgeyByZWdleDogXCJcXFxcL1xcXFwvLiokXCIsIGFjdGlvbjogeyB0b2tlbjogJ2NvbW1lbnQnIH0gfVxuICAgICAgICBdLFxuICAgICAgICBleHByZXNzaW9uOiBbXG4gICAgICAgICAgICB7IHJlZ2V4OiBcIicnJ1wiLCBhY3Rpb246IHsgdG9rZW46ICdzdHJpbmcucXVvdGUnLCBuZXh0OiAnQHN0cmluZ1ZlcmJhdGltJyB9IH0sXG4gICAgICAgICAgICB7IHJlZ2V4OiBcIidcIiwgYWN0aW9uOiB7IHRva2VuOiAnc3RyaW5nLnF1b3RlJywgbmV4dDogJ0BzdHJpbmdMaXRlcmFsJyB9IH0sXG4gICAgICAgICAgICB7IHJlZ2V4OiBudW1lcmljTGl0ZXJhbCwgYWN0aW9uOiB7IHRva2VuOiAnbnVtYmVyJyB9IH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmVnZXg6IGlkZW50aWZpZXIsXG4gICAgICAgICAgICAgICAgYWN0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2VzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnQGtleXdvcmRzJzogeyB0b2tlbjogJ2tleXdvcmQnIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAnQG5hbWVkTGl0ZXJhbHMnOiB7IHRva2VuOiAna2V5d29yZCcgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICdAZGVmYXVsdCc6IHsgdG9rZW46ICdpZGVudGlmaWVyJyB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/monaco-editor/esm/vs/basic-languages/bicep/bicep.js\n");

/***/ })

}]);