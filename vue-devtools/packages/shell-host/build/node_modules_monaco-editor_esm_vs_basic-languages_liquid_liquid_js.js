"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_vue_devtools_shell_host"] = self["webpackChunk_vue_devtools_shell_host"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_liquid_liquid_js"],{

/***/ "../../../node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.js":
/*!***********************************************************************************!*\
  !*** ../../../node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/* harmony import */ var _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../fillers/monaco-editor-core.js */ \"../../../node_modules/monaco-editor/esm/vs/basic-languages/fillers/monaco-editor-core.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar EMPTY_ELEMENTS = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'keygen',\n    'link',\n    'menuitem',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr'\n];\nvar conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n    brackets: [\n        ['<!--', '-->'],\n        ['<', '>'],\n        ['{{', '}}'],\n        ['{%', '%}'],\n        ['{', '}'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '%', close: '%' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    surroundingPairs: [\n        { open: '<', close: '>' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    onEnterRules: [\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n            action: {\n                indentAction: _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_0__.languages.IndentAction.IndentOutdent\n            }\n        },\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            action: { indentAction: _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_0__.languages.IndentAction.Indent }\n        }\n    ]\n};\nvar language = {\n    defaultToken: '',\n    tokenPostfix: '',\n    builtinTags: [\n        'if',\n        'else',\n        'elseif',\n        'endif',\n        'render',\n        'assign',\n        'capture',\n        'endcapture',\n        'case',\n        'endcase',\n        'comment',\n        'endcomment',\n        'cycle',\n        'decrement',\n        'for',\n        'endfor',\n        'include',\n        'increment',\n        'layout',\n        'raw',\n        'endraw',\n        'render',\n        'tablerow',\n        'endtablerow',\n        'unless',\n        'endunless'\n    ],\n    builtinFilters: [\n        'abs',\n        'append',\n        'at_least',\n        'at_most',\n        'capitalize',\n        'ceil',\n        'compact',\n        'date',\n        'default',\n        'divided_by',\n        'downcase',\n        'escape',\n        'escape_once',\n        'first',\n        'floor',\n        'join',\n        'json',\n        'last',\n        'lstrip',\n        'map',\n        'minus',\n        'modulo',\n        'newline_to_br',\n        'plus',\n        'prepend',\n        'remove',\n        'remove_first',\n        'replace',\n        'replace_first',\n        'reverse',\n        'round',\n        'rstrip',\n        'size',\n        'slice',\n        'sort',\n        'sort_natural',\n        'split',\n        'strip',\n        'strip_html',\n        'strip_newlines',\n        'times',\n        'truncate',\n        'truncatewords',\n        'uniq',\n        'upcase',\n        'url_decode',\n        'url_encode',\n        'where'\n    ],\n    constants: ['true', 'false'],\n    operators: ['==', '!=', '>', '<', '>=', '<='],\n    symbol: /[=><!]+/,\n    identifier: /[a-zA-Z_][\\w]*/,\n    tokenizer: {\n        root: [\n            [/\\{\\%\\s*comment\\s*\\%\\}/, 'comment.start.liquid', '@comment'],\n            [/\\{\\{/, { token: '@rematch', switchTo: '@liquidState.root' }],\n            [/\\{\\%/, { token: '@rematch', switchTo: '@liquidState.root' }],\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/</, 'delimiter.html'],\n            [/\\{/, 'delimiter.html'],\n            [/[^<{]+/] // text\n        ],\n        comment: [\n            [/\\{\\%\\s*endcomment\\s*\\%\\}/, 'comment.end.liquid', '@pop'],\n            [/./, 'comment.content.liquid']\n        ],\n        otherTag: [\n            [\n                /\\{\\{/,\n                {\n                    token: '@rematch',\n                    switchTo: '@liquidState.otherTag'\n                }\n            ],\n            [\n                /\\{\\%/,\n                {\n                    token: '@rematch',\n                    switchTo: '@liquidState.otherTag'\n                }\n            ],\n            [/\\/?>/, 'delimiter.html', '@pop'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/] // whitespace\n        ],\n        liquidState: [\n            [/\\{\\{/, 'delimiter.output.liquid'],\n            [/\\}\\}/, { token: 'delimiter.output.liquid', switchTo: '@$S2.$S3' }],\n            [/\\{\\%/, 'delimiter.tag.liquid'],\n            [/raw\\s*\\%\\}/, 'delimiter.tag.liquid', '@liquidRaw'],\n            [/\\%\\}/, { token: 'delimiter.tag.liquid', switchTo: '@$S2.$S3' }],\n            { include: 'liquidRoot' }\n        ],\n        liquidRaw: [\n            [/^(?!\\{\\%\\s*endraw\\s*\\%\\}).+/],\n            [/\\{\\%/, 'delimiter.tag.liquid'],\n            [/@identifier/],\n            [/\\%\\}/, { token: 'delimiter.tag.liquid', next: '@root' }],\n        ],\n        liquidRoot: [\n            [/\\d+(\\.\\d+)?/, 'number.liquid'],\n            [/\"[^\"]*\"/, 'string.liquid'],\n            [/'[^']*'/, 'string.liquid'],\n            [/\\s+/],\n            [\n                /@symbol/,\n                {\n                    cases: {\n                        '@operators': 'operator.liquid',\n                        '@default': ''\n                    }\n                }\n            ],\n            [/\\./],\n            [\n                /@identifier/,\n                {\n                    cases: {\n                        '@constants': 'keyword.liquid',\n                        '@builtinFilters': 'predefined.liquid',\n                        '@builtinTags': 'predefined.liquid',\n                        '@default': 'variable.liquid'\n                    }\n                }\n            ],\n            [/[^}|%]/, 'variable.liquid']\n        ]\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9saXF1aWQvbGlxdWlkLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQzZEO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsZ0VBQWdFLElBQUksTUFBTTtBQUMxRTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE1BQU07QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsS0FBSztBQUNoQjtBQUNBO0FBQ0E7QUFDQSxVQUFVLFFBQVEsWUFBWSxHQUFHO0FBQ2pDLFVBQVUsdUJBQXVCO0FBQ2pDLFVBQVUsdUJBQXVCO0FBQ2pDLFVBQVUsdUJBQXVCO0FBQ2pDLFVBQVUsdUJBQXVCO0FBQ2pDLFVBQVU7QUFDVjtBQUNBO0FBQ0EsVUFBVSx1QkFBdUI7QUFDakMsVUFBVSx1QkFBdUI7QUFDakMsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixxRUFBUztBQUN2QztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esc0JBQXNCLGNBQWMscUVBQVM7QUFDN0M7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1CQUFtQjtBQUNuQyxnQkFBZ0IsRUFBRSxLQUFLLGtEQUFrRDtBQUN6RSxnQkFBZ0IsT0FBTyxrREFBa0Q7QUFDekU7QUFDQSxpREFBaUQsc0NBQXNDO0FBQ3ZGLGdEQUFnRCxzQ0FBc0M7QUFDdEY7QUFDQSxnQkFBZ0I7QUFDaEIsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSxnQkFBZ0Isc0JBQXNCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLEVBQUU7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLEVBQUU7QUFDbEIsZ0JBQWdCLEVBQUUsS0FBSyx3REFBd0Q7QUFDL0UsZ0JBQWdCO0FBQ2hCLHdCQUF3QjtBQUN4QixrQkFBa0IsS0FBSyxxREFBcUQ7QUFDNUUsY0FBYztBQUNkO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDLGdCQUFnQjtBQUNoQjtBQUNBLGtCQUFrQixLQUFLLDhDQUE4QztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZ1ZS1kZXZ0b29scy9zaGVsbC1ob3N0Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvbGlxdWlkL2xpcXVpZC5qcz9hZWUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgbGFuZ3VhZ2VzIH0gZnJvbSAnLi4vZmlsbGVycy9tb25hY28tZWRpdG9yLWNvcmUuanMnO1xudmFyIEVNUFRZX0VMRU1FTlRTID0gW1xuICAgICdhcmVhJyxcbiAgICAnYmFzZScsXG4gICAgJ2JyJyxcbiAgICAnY29sJyxcbiAgICAnZW1iZWQnLFxuICAgICdocicsXG4gICAgJ2ltZycsXG4gICAgJ2lucHV0JyxcbiAgICAna2V5Z2VuJyxcbiAgICAnbGluaycsXG4gICAgJ21lbnVpdGVtJyxcbiAgICAnbWV0YScsXG4gICAgJ3BhcmFtJyxcbiAgICAnc291cmNlJyxcbiAgICAndHJhY2snLFxuICAgICd3YnInXG5dO1xuZXhwb3J0IHZhciBjb25mID0ge1xuICAgIHdvcmRQYXR0ZXJuOiAvKC0/XFxkKlxcLlxcZFxcdyopfChbXlxcYFxcflxcIVxcQFxcJFxcXlxcJlxcKlxcKFxcKVxcPVxcK1xcW1xce1xcXVxcfVxcXFxcXHxcXDtcXDpcXCdcXFwiXFwsXFwuXFw8XFw+XFwvXFxzXSspL2csXG4gICAgYnJhY2tldHM6IFtcbiAgICAgICAgWyc8IS0tJywgJy0tPiddLFxuICAgICAgICBbJzwnLCAnPiddLFxuICAgICAgICBbJ3t7JywgJ319J10sXG4gICAgICAgIFsneyUnLCAnJX0nXSxcbiAgICAgICAgWyd7JywgJ30nXSxcbiAgICAgICAgWycoJywgJyknXVxuICAgIF0sXG4gICAgYXV0b0Nsb3NpbmdQYWlyczogW1xuICAgICAgICB7IG9wZW46ICd7JywgY2xvc2U6ICd9JyB9LFxuICAgICAgICB7IG9wZW46ICclJywgY2xvc2U6ICclJyB9LFxuICAgICAgICB7IG9wZW46ICdbJywgY2xvc2U6ICddJyB9LFxuICAgICAgICB7IG9wZW46ICcoJywgY2xvc2U6ICcpJyB9LFxuICAgICAgICB7IG9wZW46ICdcIicsIGNsb3NlOiAnXCInIH0sXG4gICAgICAgIHsgb3BlbjogXCInXCIsIGNsb3NlOiBcIidcIiB9XG4gICAgXSxcbiAgICBzdXJyb3VuZGluZ1BhaXJzOiBbXG4gICAgICAgIHsgb3BlbjogJzwnLCBjbG9zZTogJz4nIH0sXG4gICAgICAgIHsgb3BlbjogJ1wiJywgY2xvc2U6ICdcIicgfSxcbiAgICAgICAgeyBvcGVuOiBcIidcIiwgY2xvc2U6IFwiJ1wiIH1cbiAgICBdLFxuICAgIG9uRW50ZXJSdWxlczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBiZWZvcmVUZXh0OiBuZXcgUmVnRXhwKFwiPCg/ISg/OlwiICsgRU1QVFlfRUxFTUVOVFMuam9pbignfCcpICsgXCIpKShcXFxcd1tcXFxcd1xcXFxkXSopKFteLz5dKig/IS8pPilbXjxdKiRcIiwgJ2knKSxcbiAgICAgICAgICAgIGFmdGVyVGV4dDogL148XFwvKFxcd1tcXHdcXGRdKilcXHMqPiQvaSxcbiAgICAgICAgICAgIGFjdGlvbjoge1xuICAgICAgICAgICAgICAgIGluZGVudEFjdGlvbjogbGFuZ3VhZ2VzLkluZGVudEFjdGlvbi5JbmRlbnRPdXRkZW50XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGJlZm9yZVRleHQ6IG5ldyBSZWdFeHAoXCI8KD8hKD86XCIgKyBFTVBUWV9FTEVNRU5UUy5qb2luKCd8JykgKyBcIikpKFxcXFx3W1xcXFx3XFxcXGRdKikoW14vPl0qKD8hLyk+KVtePF0qJFwiLCAnaScpLFxuICAgICAgICAgICAgYWN0aW9uOiB7IGluZGVudEFjdGlvbjogbGFuZ3VhZ2VzLkluZGVudEFjdGlvbi5JbmRlbnQgfVxuICAgICAgICB9XG4gICAgXVxufTtcbmV4cG9ydCB2YXIgbGFuZ3VhZ2UgPSB7XG4gICAgZGVmYXVsdFRva2VuOiAnJyxcbiAgICB0b2tlblBvc3RmaXg6ICcnLFxuICAgIGJ1aWx0aW5UYWdzOiBbXG4gICAgICAgICdpZicsXG4gICAgICAgICdlbHNlJyxcbiAgICAgICAgJ2Vsc2VpZicsXG4gICAgICAgICdlbmRpZicsXG4gICAgICAgICdyZW5kZXInLFxuICAgICAgICAnYXNzaWduJyxcbiAgICAgICAgJ2NhcHR1cmUnLFxuICAgICAgICAnZW5kY2FwdHVyZScsXG4gICAgICAgICdjYXNlJyxcbiAgICAgICAgJ2VuZGNhc2UnLFxuICAgICAgICAnY29tbWVudCcsXG4gICAgICAgICdlbmRjb21tZW50JyxcbiAgICAgICAgJ2N5Y2xlJyxcbiAgICAgICAgJ2RlY3JlbWVudCcsXG4gICAgICAgICdmb3InLFxuICAgICAgICAnZW5kZm9yJyxcbiAgICAgICAgJ2luY2x1ZGUnLFxuICAgICAgICAnaW5jcmVtZW50JyxcbiAgICAgICAgJ2xheW91dCcsXG4gICAgICAgICdyYXcnLFxuICAgICAgICAnZW5kcmF3JyxcbiAgICAgICAgJ3JlbmRlcicsXG4gICAgICAgICd0YWJsZXJvdycsXG4gICAgICAgICdlbmR0YWJsZXJvdycsXG4gICAgICAgICd1bmxlc3MnLFxuICAgICAgICAnZW5kdW5sZXNzJ1xuICAgIF0sXG4gICAgYnVpbHRpbkZpbHRlcnM6IFtcbiAgICAgICAgJ2FicycsXG4gICAgICAgICdhcHBlbmQnLFxuICAgICAgICAnYXRfbGVhc3QnLFxuICAgICAgICAnYXRfbW9zdCcsXG4gICAgICAgICdjYXBpdGFsaXplJyxcbiAgICAgICAgJ2NlaWwnLFxuICAgICAgICAnY29tcGFjdCcsXG4gICAgICAgICdkYXRlJyxcbiAgICAgICAgJ2RlZmF1bHQnLFxuICAgICAgICAnZGl2aWRlZF9ieScsXG4gICAgICAgICdkb3duY2FzZScsXG4gICAgICAgICdlc2NhcGUnLFxuICAgICAgICAnZXNjYXBlX29uY2UnLFxuICAgICAgICAnZmlyc3QnLFxuICAgICAgICAnZmxvb3InLFxuICAgICAgICAnam9pbicsXG4gICAgICAgICdqc29uJyxcbiAgICAgICAgJ2xhc3QnLFxuICAgICAgICAnbHN0cmlwJyxcbiAgICAgICAgJ21hcCcsXG4gICAgICAgICdtaW51cycsXG4gICAgICAgICdtb2R1bG8nLFxuICAgICAgICAnbmV3bGluZV90b19icicsXG4gICAgICAgICdwbHVzJyxcbiAgICAgICAgJ3ByZXBlbmQnLFxuICAgICAgICAncmVtb3ZlJyxcbiAgICAgICAgJ3JlbW92ZV9maXJzdCcsXG4gICAgICAgICdyZXBsYWNlJyxcbiAgICAgICAgJ3JlcGxhY2VfZmlyc3QnLFxuICAgICAgICAncmV2ZXJzZScsXG4gICAgICAgICdyb3VuZCcsXG4gICAgICAgICdyc3RyaXAnLFxuICAgICAgICAnc2l6ZScsXG4gICAgICAgICdzbGljZScsXG4gICAgICAgICdzb3J0JyxcbiAgICAgICAgJ3NvcnRfbmF0dXJhbCcsXG4gICAgICAgICdzcGxpdCcsXG4gICAgICAgICdzdHJpcCcsXG4gICAgICAgICdzdHJpcF9odG1sJyxcbiAgICAgICAgJ3N0cmlwX25ld2xpbmVzJyxcbiAgICAgICAgJ3RpbWVzJyxcbiAgICAgICAgJ3RydW5jYXRlJyxcbiAgICAgICAgJ3RydW5jYXRld29yZHMnLFxuICAgICAgICAndW5pcScsXG4gICAgICAgICd1cGNhc2UnLFxuICAgICAgICAndXJsX2RlY29kZScsXG4gICAgICAgICd1cmxfZW5jb2RlJyxcbiAgICAgICAgJ3doZXJlJ1xuICAgIF0sXG4gICAgY29uc3RhbnRzOiBbJ3RydWUnLCAnZmFsc2UnXSxcbiAgICBvcGVyYXRvcnM6IFsnPT0nLCAnIT0nLCAnPicsICc8JywgJz49JywgJzw9J10sXG4gICAgc3ltYm9sOiAvWz0+PCFdKy8sXG4gICAgaWRlbnRpZmllcjogL1thLXpBLVpfXVtcXHddKi8sXG4gICAgdG9rZW5pemVyOiB7XG4gICAgICAgIHJvb3Q6IFtcbiAgICAgICAgICAgIFsvXFx7XFwlXFxzKmNvbW1lbnRcXHMqXFwlXFx9LywgJ2NvbW1lbnQuc3RhcnQubGlxdWlkJywgJ0Bjb21tZW50J10sXG4gICAgICAgICAgICBbL1xce1xcey8sIHsgdG9rZW46ICdAcmVtYXRjaCcsIHN3aXRjaFRvOiAnQGxpcXVpZFN0YXRlLnJvb3QnIH1dLFxuICAgICAgICAgICAgWy9cXHtcXCUvLCB7IHRva2VuOiAnQHJlbWF0Y2gnLCBzd2l0Y2hUbzogJ0BsaXF1aWRTdGF0ZS5yb290JyB9XSxcbiAgICAgICAgICAgIFsvKDwpKFxcdyspKFxcLz4pLywgWydkZWxpbWl0ZXIuaHRtbCcsICd0YWcuaHRtbCcsICdkZWxpbWl0ZXIuaHRtbCddXSxcbiAgICAgICAgICAgIFsvKDwpKFs6XFx3XSspLywgWydkZWxpbWl0ZXIuaHRtbCcsIHsgdG9rZW46ICd0YWcuaHRtbCcsIG5leHQ6ICdAb3RoZXJUYWcnIH1dXSxcbiAgICAgICAgICAgIFsvKDxcXC8pKFxcdyspLywgWydkZWxpbWl0ZXIuaHRtbCcsIHsgdG9rZW46ICd0YWcuaHRtbCcsIG5leHQ6ICdAb3RoZXJUYWcnIH1dXSxcbiAgICAgICAgICAgIFsvPC8sICdkZWxpbWl0ZXIuaHRtbCddLFxuICAgICAgICAgICAgWy9cXHsvLCAnZGVsaW1pdGVyLmh0bWwnXSxcbiAgICAgICAgICAgIFsvW148e10rL10gLy8gdGV4dFxuICAgICAgICBdLFxuICAgICAgICBjb21tZW50OiBbXG4gICAgICAgICAgICBbL1xce1xcJVxccyplbmRjb21tZW50XFxzKlxcJVxcfS8sICdjb21tZW50LmVuZC5saXF1aWQnLCAnQHBvcCddLFxuICAgICAgICAgICAgWy8uLywgJ2NvbW1lbnQuY29udGVudC5saXF1aWQnXVxuICAgICAgICBdLFxuICAgICAgICBvdGhlclRhZzogW1xuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIC9cXHtcXHsvLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdG9rZW46ICdAcmVtYXRjaCcsXG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaFRvOiAnQGxpcXVpZFN0YXRlLm90aGVyVGFnJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgL1xce1xcJS8sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0b2tlbjogJ0ByZW1hdGNoJyxcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoVG86ICdAbGlxdWlkU3RhdGUub3RoZXJUYWcnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFsvXFwvPz4vLCAnZGVsaW1pdGVyLmh0bWwnLCAnQHBvcCddLFxuICAgICAgICAgICAgWy9cIihbXlwiXSopXCIvLCAnYXR0cmlidXRlLnZhbHVlJ10sXG4gICAgICAgICAgICBbLycoW14nXSopJy8sICdhdHRyaWJ1dGUudmFsdWUnXSxcbiAgICAgICAgICAgIFsvW1xcd1xcLV0rLywgJ2F0dHJpYnV0ZS5uYW1lJ10sXG4gICAgICAgICAgICBbLz0vLCAnZGVsaW1pdGVyJ10sXG4gICAgICAgICAgICBbL1sgXFx0XFxyXFxuXSsvXSAvLyB3aGl0ZXNwYWNlXG4gICAgICAgIF0sXG4gICAgICAgIGxpcXVpZFN0YXRlOiBbXG4gICAgICAgICAgICBbL1xce1xcey8sICdkZWxpbWl0ZXIub3V0cHV0LmxpcXVpZCddLFxuICAgICAgICAgICAgWy9cXH1cXH0vLCB7IHRva2VuOiAnZGVsaW1pdGVyLm91dHB1dC5saXF1aWQnLCBzd2l0Y2hUbzogJ0AkUzIuJFMzJyB9XSxcbiAgICAgICAgICAgIFsvXFx7XFwlLywgJ2RlbGltaXRlci50YWcubGlxdWlkJ10sXG4gICAgICAgICAgICBbL3Jhd1xccypcXCVcXH0vLCAnZGVsaW1pdGVyLnRhZy5saXF1aWQnLCAnQGxpcXVpZFJhdyddLFxuICAgICAgICAgICAgWy9cXCVcXH0vLCB7IHRva2VuOiAnZGVsaW1pdGVyLnRhZy5saXF1aWQnLCBzd2l0Y2hUbzogJ0AkUzIuJFMzJyB9XSxcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ2xpcXVpZFJvb3QnIH1cbiAgICAgICAgXSxcbiAgICAgICAgbGlxdWlkUmF3OiBbXG4gICAgICAgICAgICBbL14oPyFcXHtcXCVcXHMqZW5kcmF3XFxzKlxcJVxcfSkuKy9dLFxuICAgICAgICAgICAgWy9cXHtcXCUvLCAnZGVsaW1pdGVyLnRhZy5saXF1aWQnXSxcbiAgICAgICAgICAgIFsvQGlkZW50aWZpZXIvXSxcbiAgICAgICAgICAgIFsvXFwlXFx9LywgeyB0b2tlbjogJ2RlbGltaXRlci50YWcubGlxdWlkJywgbmV4dDogJ0Byb290JyB9XSxcbiAgICAgICAgXSxcbiAgICAgICAgbGlxdWlkUm9vdDogW1xuICAgICAgICAgICAgWy9cXGQrKFxcLlxcZCspPy8sICdudW1iZXIubGlxdWlkJ10sXG4gICAgICAgICAgICBbL1wiW15cIl0qXCIvLCAnc3RyaW5nLmxpcXVpZCddLFxuICAgICAgICAgICAgWy8nW14nXSonLywgJ3N0cmluZy5saXF1aWQnXSxcbiAgICAgICAgICAgIFsvXFxzKy9dLFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIC9Ac3ltYm9sLyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2VzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnQG9wZXJhdG9ycyc6ICdvcGVyYXRvci5saXF1aWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BkZWZhdWx0JzogJydcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbL1xcLi9dLFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIC9AaWRlbnRpZmllci8sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjYXNlczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ0Bjb25zdGFudHMnOiAna2V5d29yZC5saXF1aWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BidWlsdGluRmlsdGVycyc6ICdwcmVkZWZpbmVkLmxpcXVpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAnQGJ1aWx0aW5UYWdzJzogJ3ByZWRlZmluZWQubGlxdWlkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdAZGVmYXVsdCc6ICd2YXJpYWJsZS5saXF1aWQnXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgWy9bXn18JV0vLCAndmFyaWFibGUubGlxdWlkJ11cbiAgICAgICAgXVxuICAgIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.js\n");

/***/ })

}]);