/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_vue_devtools_shell_host"] = self["webpackChunk_vue_devtools_shell_host"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_r_r_js"],{

/***/ "../../node_modules/monaco-editor/esm/vs/basic-languages/r/r.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/monaco-editor/esm/vs/basic-languages/r/r.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": () => (/* binding */ conf),\n/* harmony export */   \"language\": () => (/* binding */ language)\n/* harmony export */ });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' }\n    ]\n};\nvar language = {\n    defaultToken: '',\n    tokenPostfix: '.r',\n    roxygen: [\n        '@alias',\n        '@aliases',\n        '@assignee',\n        '@author',\n        '@backref',\n        '@callGraph',\n        '@callGraphDepth',\n        '@callGraphPrimitives',\n        '@concept',\n        '@describeIn',\n        '@description',\n        '@details',\n        '@docType',\n        '@encoding',\n        '@evalNamespace',\n        '@evalRd',\n        '@example',\n        '@examples',\n        '@export',\n        '@exportClass',\n        '@exportMethod',\n        '@exportPattern',\n        '@family',\n        '@field',\n        '@formals',\n        '@format',\n        '@import',\n        '@importClassesFrom',\n        '@importFrom',\n        '@importMethodsFrom',\n        '@include',\n        '@inherit',\n        '@inheritDotParams',\n        '@inheritParams',\n        '@inheritSection',\n        '@keywords',\n        '@md',\n        '@method',\n        '@name',\n        '@noMd',\n        '@noRd',\n        '@note',\n        '@param',\n        '@rawNamespace',\n        '@rawRd',\n        '@rdname',\n        '@references',\n        '@return',\n        '@S3method',\n        '@section',\n        '@seealso',\n        '@setClass',\n        '@slot',\n        '@source',\n        '@template',\n        '@templateVar',\n        '@title',\n        '@TODO',\n        '@usage',\n        '@useDynLib'\n    ],\n    constants: [\n        'NULL',\n        'FALSE',\n        'TRUE',\n        'NA',\n        'Inf',\n        'NaN',\n        'NA_integer_',\n        'NA_real_',\n        'NA_complex_',\n        'NA_character_',\n        'T',\n        'F',\n        'LETTERS',\n        'letters',\n        'month.abb',\n        'month.name',\n        'pi',\n        'R.version.string'\n    ],\n    keywords: [\n        'break',\n        'next',\n        'return',\n        'if',\n        'else',\n        'for',\n        'in',\n        'repeat',\n        'while',\n        'array',\n        'category',\n        'character',\n        'complex',\n        'double',\n        'function',\n        'integer',\n        'list',\n        'logical',\n        'matrix',\n        'numeric',\n        'vector',\n        'data.frame',\n        'factor',\n        'library',\n        'require',\n        'attach',\n        'detach',\n        'source'\n    ],\n    special: ['\\\\n', '\\\\r', '\\\\t', '\\\\b', '\\\\a', '\\\\f', '\\\\v', \"\\\\'\", '\\\\\"', '\\\\\\\\'],\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@numbers' },\n            { include: '@strings' },\n            [/[{}\\[\\]()]/, '@brackets'],\n            { include: '@operators' },\n            [/#'/, 'comment.doc', '@roxygen'],\n            [/(^#.*$)/, 'comment'],\n            [/\\s+/, 'white'],\n            [/[,:;]/, 'delimiter'],\n            [/@[a-zA-Z]\\w*/, 'tag'],\n            [\n                /[a-zA-Z]\\w*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@constants': 'constant',\n                        '@default': 'identifier'\n                    }\n                }\n            ]\n        ],\n        // Recognize Roxygen comments\n        roxygen: [\n            [\n                /@\\w+/,\n                {\n                    cases: {\n                        '@roxygen': 'tag',\n                        '@eos': { token: 'comment.doc', next: '@pop' },\n                        '@default': 'comment.doc'\n                    }\n                }\n            ],\n            [\n                /\\s+/,\n                {\n                    cases: {\n                        '@eos': { token: 'comment.doc', next: '@pop' },\n                        '@default': 'comment.doc'\n                    }\n                }\n            ],\n            [/.*/, { token: 'comment.doc', next: '@pop' }]\n        ],\n        // Recognize positives, negatives, decimals, imaginaries, and scientific notation\n        numbers: [\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n            [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?/, 'number']\n        ],\n        // Recognize operators\n        operators: [\n            [/<{1,2}-/, 'operator'],\n            [/->{1,2}/, 'operator'],\n            [/%[^%\\s]+%/, 'operator'],\n            [/\\*\\*/, 'operator'],\n            [/%%/, 'operator'],\n            [/&&/, 'operator'],\n            [/\\|\\|/, 'operator'],\n            [/<</, 'operator'],\n            [/>>/, 'operator'],\n            [/[-+=&|!<>^~*/:$]/, 'operator']\n        ],\n        // Recognize strings, including those broken across lines\n        strings: [\n            [/'/, 'string.escape', '@stringBody'],\n            [/\"/, 'string.escape', '@dblStringBody']\n        ],\n        stringBody: [\n            [\n                /\\\\./,\n                {\n                    cases: {\n                        '@special': 'string',\n                        '@default': 'error-token'\n                    }\n                }\n            ],\n            [/'/, 'string.escape', '@popall'],\n            [/./, 'string']\n        ],\n        dblStringBody: [\n            [\n                /\\\\./,\n                {\n                    cases: {\n                        '@special': 'string',\n                        '@default': 'error-token'\n                    }\n                }\n            ],\n            [/\"/, 'string.escape', '@popall'],\n            [/./, 'string']\n        ]\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/monaco-editor/esm/vs/basic-languages/r/r.js\n");

/***/ })

}]);