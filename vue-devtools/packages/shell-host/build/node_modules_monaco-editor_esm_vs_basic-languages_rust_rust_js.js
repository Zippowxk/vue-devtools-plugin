"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_vue_devtools_shell_host"] = self["webpackChunk_vue_devtools_shell_host"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_rust_rust_js"],{

/***/ "../../node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": () => (/* binding */ conf),\n/* harmony export */   \"language\": () => (/* binding */ language)\n/* harmony export */ });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*#pragma\\\\s+region\\\\b'),\n            end: new RegExp('^\\\\s*#pragma\\\\s+endregion\\\\b')\n        }\n    }\n};\nvar language = {\n    tokenPostfix: '.rust',\n    defaultToken: 'invalid',\n    keywords: [\n        'as',\n        'async',\n        'await',\n        'box',\n        'break',\n        'const',\n        'continue',\n        'crate',\n        'dyn',\n        'else',\n        'enum',\n        'extern',\n        'false',\n        'fn',\n        'for',\n        'if',\n        'impl',\n        'in',\n        'let',\n        'loop',\n        'match',\n        'mod',\n        'move',\n        'mut',\n        'pub',\n        'ref',\n        'return',\n        'self',\n        'static',\n        'struct',\n        'super',\n        'trait',\n        'true',\n        'try',\n        'type',\n        'unsafe',\n        'use',\n        'where',\n        'while',\n        'catch',\n        'default',\n        'union',\n        'static',\n        'abstract',\n        'alignof',\n        'become',\n        'do',\n        'final',\n        'macro',\n        'offsetof',\n        'override',\n        'priv',\n        'proc',\n        'pure',\n        'sizeof',\n        'typeof',\n        'unsized',\n        'virtual',\n        'yield'\n    ],\n    typeKeywords: [\n        'Self',\n        'm32',\n        'm64',\n        'm128',\n        'f80',\n        'f16',\n        'f128',\n        'int',\n        'uint',\n        'float',\n        'char',\n        'bool',\n        'u8',\n        'u16',\n        'u32',\n        'u64',\n        'f32',\n        'f64',\n        'i8',\n        'i16',\n        'i32',\n        'i64',\n        'str',\n        'Option',\n        'Either',\n        'c_float',\n        'c_double',\n        'c_void',\n        'FILE',\n        'fpos_t',\n        'DIR',\n        'dirent',\n        'c_char',\n        'c_schar',\n        'c_uchar',\n        'c_short',\n        'c_ushort',\n        'c_int',\n        'c_uint',\n        'c_long',\n        'c_ulong',\n        'size_t',\n        'ptrdiff_t',\n        'clock_t',\n        'time_t',\n        'c_longlong',\n        'c_ulonglong',\n        'intptr_t',\n        'uintptr_t',\n        'off_t',\n        'dev_t',\n        'ino_t',\n        'pid_t',\n        'mode_t',\n        'ssize_t'\n    ],\n    constants: ['true', 'false', 'Some', 'None', 'Left', 'Right', 'Ok', 'Err'],\n    supportConstants: [\n        'EXIT_FAILURE',\n        'EXIT_SUCCESS',\n        'RAND_MAX',\n        'EOF',\n        'SEEK_SET',\n        'SEEK_CUR',\n        'SEEK_END',\n        '_IOFBF',\n        '_IONBF',\n        '_IOLBF',\n        'BUFSIZ',\n        'FOPEN_MAX',\n        'FILENAME_MAX',\n        'L_tmpnam',\n        'TMP_MAX',\n        'O_RDONLY',\n        'O_WRONLY',\n        'O_RDWR',\n        'O_APPEND',\n        'O_CREAT',\n        'O_EXCL',\n        'O_TRUNC',\n        'S_IFIFO',\n        'S_IFCHR',\n        'S_IFBLK',\n        'S_IFDIR',\n        'S_IFREG',\n        'S_IFMT',\n        'S_IEXEC',\n        'S_IWRITE',\n        'S_IREAD',\n        'S_IRWXU',\n        'S_IXUSR',\n        'S_IWUSR',\n        'S_IRUSR',\n        'F_OK',\n        'R_OK',\n        'W_OK',\n        'X_OK',\n        'STDIN_FILENO',\n        'STDOUT_FILENO',\n        'STDERR_FILENO'\n    ],\n    supportMacros: [\n        'format!',\n        'print!',\n        'println!',\n        'panic!',\n        'format_args!',\n        'unreachable!',\n        'write!',\n        'writeln!'\n    ],\n    operators: [\n        '!',\n        '!=',\n        '%',\n        '%=',\n        '&',\n        '&=',\n        '&&',\n        '*',\n        '*=',\n        '+',\n        '+=',\n        '-',\n        '-=',\n        '->',\n        '.',\n        '..',\n        '...',\n        '/',\n        '/=',\n        ':',\n        ';',\n        '<<',\n        '<<=',\n        '<',\n        '<=',\n        '=',\n        '==',\n        '=>',\n        '>',\n        '>=',\n        '>>',\n        '>>=',\n        '@',\n        '^',\n        '^=',\n        '|',\n        '|=',\n        '||',\n        '_',\n        '?',\n        '#'\n    ],\n    escapes: /\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})/,\n    delimiters: /[,]/,\n    symbols: /[\\#\\!\\%\\&\\*\\+\\-\\.\\/\\:\\;\\<\\=\\>\\@\\^\\|_\\?]+/,\n    intSuffixes: /[iu](8|16|32|64|128|size)/,\n    floatSuffixes: /f(32|64)/,\n    tokenizer: {\n        root: [\n            [\n                /[a-zA-Z][a-zA-Z0-9_]*!?|_[a-zA-Z0-9_]+/,\n                {\n                    cases: {\n                        '@typeKeywords': 'keyword.type',\n                        '@keywords': 'keyword',\n                        '@supportConstants': 'keyword',\n                        '@supportMacros': 'keyword',\n                        '@constants': 'keyword',\n                        '@default': 'identifier'\n                    }\n                }\n            ],\n            // Designator\n            [/\\$/, 'identifier'],\n            // Lifetime annotations\n            [/'[a-zA-Z_][a-zA-Z0-9_]*(?=[^\\'])/, 'identifier'],\n            // Byte literal\n            [/'\\S'/, 'string.byteliteral'],\n            // Strings\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }],\n            { include: '@numbers' },\n            // Whitespace + comments\n            { include: '@whitespace' },\n            [\n                /@delimiters/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'delimiter'\n                    }\n                }\n            ],\n            [/[{}()\\[\\]<>]/, '@brackets'],\n            [/@symbols/, { cases: { '@operators': 'operator', '@default': '' } }]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment']\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            ['\\\\*/', 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        numbers: [\n            //Octal\n            [/(0o[0-7_]+)(@intSuffixes)?/, { token: 'number' }],\n            //Binary\n            [/(0b[0-1_]+)(@intSuffixes)?/, { token: 'number' }],\n            //Exponent\n            [/[\\d][\\d_]*(\\.[\\d][\\d_]*)?[eE][+-][\\d_]+(@floatSuffixes)?/, { token: 'number' }],\n            //Float\n            [/\\b(\\d\\.?[\\d_]*)(@floatSuffixes)?\\b/, { token: 'number' }],\n            //Hexadecimal\n            [/(0x[\\da-fA-F]+)_?(@intSuffixes)?/, { token: 'number' }],\n            //Integer\n            [/[\\d][\\d_]*(@intSuffixes?)?/, { token: 'number' }]\n        ]\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9ydXN0L3J1c3QuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx1QkFBdUI7QUFDakMsVUFBVSxRQUFRLFlBQVksR0FBRztBQUNqQyxVQUFVLHVCQUF1QjtBQUNqQyxVQUFVLHFEQUFxRDtBQUMvRCxVQUFVO0FBQ1Y7QUFDQTtBQUNBLFVBQVUsUUFBUSxZQUFZLEdBQUc7QUFDakMsVUFBVSx1QkFBdUI7QUFDakMsVUFBVSx1QkFBdUI7QUFDakMsVUFBVSx1QkFBdUI7QUFDakMsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxFQUFFLElBQUksR0FBRyxJQUFJLEVBQUU7QUFDakQ7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDBEQUEwRDtBQUM5RSxjQUFjLHFCQUFxQjtBQUNuQztBQUNBLGNBQWMsd0JBQXdCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiwyQkFBMkIsU0FBUyw0Q0FBNEM7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isd0RBQXdEO0FBQzVFO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxpQkFBaUI7QUFDOUQ7QUFDQSw2Q0FBNkMsaUJBQWlCO0FBQzlEO0FBQ0EsMkVBQTJFLGlCQUFpQjtBQUM1RjtBQUNBLHFEQUFxRCxpQkFBaUI7QUFDdEU7QUFDQSxtREFBbUQsaUJBQWlCO0FBQ3BFO0FBQ0EsNkNBQTZDLGlCQUFpQjtBQUM5RDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdnVlLWRldnRvb2xzL3NoZWxsLWhvc3QvLi4vLi4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9ydXN0L3J1c3QuanM/OGUzYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmV4cG9ydCB2YXIgY29uZiA9IHtcbiAgICBjb21tZW50czoge1xuICAgICAgICBsaW5lQ29tbWVudDogJy8vJyxcbiAgICAgICAgYmxvY2tDb21tZW50OiBbJy8qJywgJyovJ11cbiAgICB9LFxuICAgIGJyYWNrZXRzOiBbXG4gICAgICAgIFsneycsICd9J10sXG4gICAgICAgIFsnWycsICddJ10sXG4gICAgICAgIFsnKCcsICcpJ11cbiAgICBdLFxuICAgIGF1dG9DbG9zaW5nUGFpcnM6IFtcbiAgICAgICAgeyBvcGVuOiAnWycsIGNsb3NlOiAnXScgfSxcbiAgICAgICAgeyBvcGVuOiAneycsIGNsb3NlOiAnfScgfSxcbiAgICAgICAgeyBvcGVuOiAnKCcsIGNsb3NlOiAnKScgfSxcbiAgICAgICAgeyBvcGVuOiBcIidcIiwgY2xvc2U6IFwiJ1wiLCBub3RJbjogWydzdHJpbmcnLCAnY29tbWVudCddIH0sXG4gICAgICAgIHsgb3BlbjogJ1wiJywgY2xvc2U6ICdcIicsIG5vdEluOiBbJ3N0cmluZyddIH1cbiAgICBdLFxuICAgIHN1cnJvdW5kaW5nUGFpcnM6IFtcbiAgICAgICAgeyBvcGVuOiAneycsIGNsb3NlOiAnfScgfSxcbiAgICAgICAgeyBvcGVuOiAnWycsIGNsb3NlOiAnXScgfSxcbiAgICAgICAgeyBvcGVuOiAnKCcsIGNsb3NlOiAnKScgfSxcbiAgICAgICAgeyBvcGVuOiAnXCInLCBjbG9zZTogJ1wiJyB9LFxuICAgICAgICB7IG9wZW46IFwiJ1wiLCBjbG9zZTogXCInXCIgfVxuICAgIF0sXG4gICAgZm9sZGluZzoge1xuICAgICAgICBtYXJrZXJzOiB7XG4gICAgICAgICAgICBzdGFydDogbmV3IFJlZ0V4cCgnXlxcXFxzKiNwcmFnbWFcXFxccytyZWdpb25cXFxcYicpLFxuICAgICAgICAgICAgZW5kOiBuZXcgUmVnRXhwKCdeXFxcXHMqI3ByYWdtYVxcXFxzK2VuZHJlZ2lvblxcXFxiJylcbiAgICAgICAgfVxuICAgIH1cbn07XG5leHBvcnQgdmFyIGxhbmd1YWdlID0ge1xuICAgIHRva2VuUG9zdGZpeDogJy5ydXN0JyxcbiAgICBkZWZhdWx0VG9rZW46ICdpbnZhbGlkJyxcbiAgICBrZXl3b3JkczogW1xuICAgICAgICAnYXMnLFxuICAgICAgICAnYXN5bmMnLFxuICAgICAgICAnYXdhaXQnLFxuICAgICAgICAnYm94JyxcbiAgICAgICAgJ2JyZWFrJyxcbiAgICAgICAgJ2NvbnN0JyxcbiAgICAgICAgJ2NvbnRpbnVlJyxcbiAgICAgICAgJ2NyYXRlJyxcbiAgICAgICAgJ2R5bicsXG4gICAgICAgICdlbHNlJyxcbiAgICAgICAgJ2VudW0nLFxuICAgICAgICAnZXh0ZXJuJyxcbiAgICAgICAgJ2ZhbHNlJyxcbiAgICAgICAgJ2ZuJyxcbiAgICAgICAgJ2ZvcicsXG4gICAgICAgICdpZicsXG4gICAgICAgICdpbXBsJyxcbiAgICAgICAgJ2luJyxcbiAgICAgICAgJ2xldCcsXG4gICAgICAgICdsb29wJyxcbiAgICAgICAgJ21hdGNoJyxcbiAgICAgICAgJ21vZCcsXG4gICAgICAgICdtb3ZlJyxcbiAgICAgICAgJ211dCcsXG4gICAgICAgICdwdWInLFxuICAgICAgICAncmVmJyxcbiAgICAgICAgJ3JldHVybicsXG4gICAgICAgICdzZWxmJyxcbiAgICAgICAgJ3N0YXRpYycsXG4gICAgICAgICdzdHJ1Y3QnLFxuICAgICAgICAnc3VwZXInLFxuICAgICAgICAndHJhaXQnLFxuICAgICAgICAndHJ1ZScsXG4gICAgICAgICd0cnknLFxuICAgICAgICAndHlwZScsXG4gICAgICAgICd1bnNhZmUnLFxuICAgICAgICAndXNlJyxcbiAgICAgICAgJ3doZXJlJyxcbiAgICAgICAgJ3doaWxlJyxcbiAgICAgICAgJ2NhdGNoJyxcbiAgICAgICAgJ2RlZmF1bHQnLFxuICAgICAgICAndW5pb24nLFxuICAgICAgICAnc3RhdGljJyxcbiAgICAgICAgJ2Fic3RyYWN0JyxcbiAgICAgICAgJ2FsaWdub2YnLFxuICAgICAgICAnYmVjb21lJyxcbiAgICAgICAgJ2RvJyxcbiAgICAgICAgJ2ZpbmFsJyxcbiAgICAgICAgJ21hY3JvJyxcbiAgICAgICAgJ29mZnNldG9mJyxcbiAgICAgICAgJ292ZXJyaWRlJyxcbiAgICAgICAgJ3ByaXYnLFxuICAgICAgICAncHJvYycsXG4gICAgICAgICdwdXJlJyxcbiAgICAgICAgJ3NpemVvZicsXG4gICAgICAgICd0eXBlb2YnLFxuICAgICAgICAndW5zaXplZCcsXG4gICAgICAgICd2aXJ0dWFsJyxcbiAgICAgICAgJ3lpZWxkJ1xuICAgIF0sXG4gICAgdHlwZUtleXdvcmRzOiBbXG4gICAgICAgICdTZWxmJyxcbiAgICAgICAgJ20zMicsXG4gICAgICAgICdtNjQnLFxuICAgICAgICAnbTEyOCcsXG4gICAgICAgICdmODAnLFxuICAgICAgICAnZjE2JyxcbiAgICAgICAgJ2YxMjgnLFxuICAgICAgICAnaW50JyxcbiAgICAgICAgJ3VpbnQnLFxuICAgICAgICAnZmxvYXQnLFxuICAgICAgICAnY2hhcicsXG4gICAgICAgICdib29sJyxcbiAgICAgICAgJ3U4JyxcbiAgICAgICAgJ3UxNicsXG4gICAgICAgICd1MzInLFxuICAgICAgICAndTY0JyxcbiAgICAgICAgJ2YzMicsXG4gICAgICAgICdmNjQnLFxuICAgICAgICAnaTgnLFxuICAgICAgICAnaTE2JyxcbiAgICAgICAgJ2kzMicsXG4gICAgICAgICdpNjQnLFxuICAgICAgICAnc3RyJyxcbiAgICAgICAgJ09wdGlvbicsXG4gICAgICAgICdFaXRoZXInLFxuICAgICAgICAnY19mbG9hdCcsXG4gICAgICAgICdjX2RvdWJsZScsXG4gICAgICAgICdjX3ZvaWQnLFxuICAgICAgICAnRklMRScsXG4gICAgICAgICdmcG9zX3QnLFxuICAgICAgICAnRElSJyxcbiAgICAgICAgJ2RpcmVudCcsXG4gICAgICAgICdjX2NoYXInLFxuICAgICAgICAnY19zY2hhcicsXG4gICAgICAgICdjX3VjaGFyJyxcbiAgICAgICAgJ2Nfc2hvcnQnLFxuICAgICAgICAnY191c2hvcnQnLFxuICAgICAgICAnY19pbnQnLFxuICAgICAgICAnY191aW50JyxcbiAgICAgICAgJ2NfbG9uZycsXG4gICAgICAgICdjX3Vsb25nJyxcbiAgICAgICAgJ3NpemVfdCcsXG4gICAgICAgICdwdHJkaWZmX3QnLFxuICAgICAgICAnY2xvY2tfdCcsXG4gICAgICAgICd0aW1lX3QnLFxuICAgICAgICAnY19sb25nbG9uZycsXG4gICAgICAgICdjX3Vsb25nbG9uZycsXG4gICAgICAgICdpbnRwdHJfdCcsXG4gICAgICAgICd1aW50cHRyX3QnLFxuICAgICAgICAnb2ZmX3QnLFxuICAgICAgICAnZGV2X3QnLFxuICAgICAgICAnaW5vX3QnLFxuICAgICAgICAncGlkX3QnLFxuICAgICAgICAnbW9kZV90JyxcbiAgICAgICAgJ3NzaXplX3QnXG4gICAgXSxcbiAgICBjb25zdGFudHM6IFsndHJ1ZScsICdmYWxzZScsICdTb21lJywgJ05vbmUnLCAnTGVmdCcsICdSaWdodCcsICdPaycsICdFcnInXSxcbiAgICBzdXBwb3J0Q29uc3RhbnRzOiBbXG4gICAgICAgICdFWElUX0ZBSUxVUkUnLFxuICAgICAgICAnRVhJVF9TVUNDRVNTJyxcbiAgICAgICAgJ1JBTkRfTUFYJyxcbiAgICAgICAgJ0VPRicsXG4gICAgICAgICdTRUVLX1NFVCcsXG4gICAgICAgICdTRUVLX0NVUicsXG4gICAgICAgICdTRUVLX0VORCcsXG4gICAgICAgICdfSU9GQkYnLFxuICAgICAgICAnX0lPTkJGJyxcbiAgICAgICAgJ19JT0xCRicsXG4gICAgICAgICdCVUZTSVonLFxuICAgICAgICAnRk9QRU5fTUFYJyxcbiAgICAgICAgJ0ZJTEVOQU1FX01BWCcsXG4gICAgICAgICdMX3RtcG5hbScsXG4gICAgICAgICdUTVBfTUFYJyxcbiAgICAgICAgJ09fUkRPTkxZJyxcbiAgICAgICAgJ09fV1JPTkxZJyxcbiAgICAgICAgJ09fUkRXUicsXG4gICAgICAgICdPX0FQUEVORCcsXG4gICAgICAgICdPX0NSRUFUJyxcbiAgICAgICAgJ09fRVhDTCcsXG4gICAgICAgICdPX1RSVU5DJyxcbiAgICAgICAgJ1NfSUZJRk8nLFxuICAgICAgICAnU19JRkNIUicsXG4gICAgICAgICdTX0lGQkxLJyxcbiAgICAgICAgJ1NfSUZESVInLFxuICAgICAgICAnU19JRlJFRycsXG4gICAgICAgICdTX0lGTVQnLFxuICAgICAgICAnU19JRVhFQycsXG4gICAgICAgICdTX0lXUklURScsXG4gICAgICAgICdTX0lSRUFEJyxcbiAgICAgICAgJ1NfSVJXWFUnLFxuICAgICAgICAnU19JWFVTUicsXG4gICAgICAgICdTX0lXVVNSJyxcbiAgICAgICAgJ1NfSVJVU1InLFxuICAgICAgICAnRl9PSycsXG4gICAgICAgICdSX09LJyxcbiAgICAgICAgJ1dfT0snLFxuICAgICAgICAnWF9PSycsXG4gICAgICAgICdTVERJTl9GSUxFTk8nLFxuICAgICAgICAnU1RET1VUX0ZJTEVOTycsXG4gICAgICAgICdTVERFUlJfRklMRU5PJ1xuICAgIF0sXG4gICAgc3VwcG9ydE1hY3JvczogW1xuICAgICAgICAnZm9ybWF0IScsXG4gICAgICAgICdwcmludCEnLFxuICAgICAgICAncHJpbnRsbiEnLFxuICAgICAgICAncGFuaWMhJyxcbiAgICAgICAgJ2Zvcm1hdF9hcmdzIScsXG4gICAgICAgICd1bnJlYWNoYWJsZSEnLFxuICAgICAgICAnd3JpdGUhJyxcbiAgICAgICAgJ3dyaXRlbG4hJ1xuICAgIF0sXG4gICAgb3BlcmF0b3JzOiBbXG4gICAgICAgICchJyxcbiAgICAgICAgJyE9JyxcbiAgICAgICAgJyUnLFxuICAgICAgICAnJT0nLFxuICAgICAgICAnJicsXG4gICAgICAgICcmPScsXG4gICAgICAgICcmJicsXG4gICAgICAgICcqJyxcbiAgICAgICAgJyo9JyxcbiAgICAgICAgJysnLFxuICAgICAgICAnKz0nLFxuICAgICAgICAnLScsXG4gICAgICAgICctPScsXG4gICAgICAgICctPicsXG4gICAgICAgICcuJyxcbiAgICAgICAgJy4uJyxcbiAgICAgICAgJy4uLicsXG4gICAgICAgICcvJyxcbiAgICAgICAgJy89JyxcbiAgICAgICAgJzonLFxuICAgICAgICAnOycsXG4gICAgICAgICc8PCcsXG4gICAgICAgICc8PD0nLFxuICAgICAgICAnPCcsXG4gICAgICAgICc8PScsXG4gICAgICAgICc9JyxcbiAgICAgICAgJz09JyxcbiAgICAgICAgJz0+JyxcbiAgICAgICAgJz4nLFxuICAgICAgICAnPj0nLFxuICAgICAgICAnPj4nLFxuICAgICAgICAnPj49JyxcbiAgICAgICAgJ0AnLFxuICAgICAgICAnXicsXG4gICAgICAgICdePScsXG4gICAgICAgICd8JyxcbiAgICAgICAgJ3w9JyxcbiAgICAgICAgJ3x8JyxcbiAgICAgICAgJ18nLFxuICAgICAgICAnPycsXG4gICAgICAgICcjJ1xuICAgIF0sXG4gICAgZXNjYXBlczogL1xcXFwoW25ydDBcXFwiJydcXFxcXXx4XFxoezJ9fHVcXHtcXGh7MSw2fVxcfSkvLFxuICAgIGRlbGltaXRlcnM6IC9bLF0vLFxuICAgIHN5bWJvbHM6IC9bXFwjXFwhXFwlXFwmXFwqXFwrXFwtXFwuXFwvXFw6XFw7XFw8XFw9XFw+XFxAXFxeXFx8X1xcP10rLyxcbiAgICBpbnRTdWZmaXhlczogL1tpdV0oOHwxNnwzMnw2NHwxMjh8c2l6ZSkvLFxuICAgIGZsb2F0U3VmZml4ZXM6IC9mKDMyfDY0KS8sXG4gICAgdG9rZW5pemVyOiB7XG4gICAgICAgIHJvb3Q6IFtcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAvW2EtekEtWl1bYS16QS1aMC05X10qIT98X1thLXpBLVowLTlfXSsvLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICdAdHlwZUtleXdvcmRzJzogJ2tleXdvcmQudHlwZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAnQGtleXdvcmRzJzogJ2tleXdvcmQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BzdXBwb3J0Q29uc3RhbnRzJzogJ2tleXdvcmQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BzdXBwb3J0TWFjcm9zJzogJ2tleXdvcmQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0Bjb25zdGFudHMnOiAna2V5d29yZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAnQGRlZmF1bHQnOiAnaWRlbnRpZmllcidcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAvLyBEZXNpZ25hdG9yXG4gICAgICAgICAgICBbL1xcJC8sICdpZGVudGlmaWVyJ10sXG4gICAgICAgICAgICAvLyBMaWZldGltZSBhbm5vdGF0aW9uc1xuICAgICAgICAgICAgWy8nW2EtekEtWl9dW2EtekEtWjAtOV9dKig/PVteXFwnXSkvLCAnaWRlbnRpZmllciddLFxuICAgICAgICAgICAgLy8gQnl0ZSBsaXRlcmFsXG4gICAgICAgICAgICBbLydcXFMnLywgJ3N0cmluZy5ieXRlbGl0ZXJhbCddLFxuICAgICAgICAgICAgLy8gU3RyaW5nc1xuICAgICAgICAgICAgWy9cIi8sIHsgdG9rZW46ICdzdHJpbmcucXVvdGUnLCBicmFja2V0OiAnQG9wZW4nLCBuZXh0OiAnQHN0cmluZycgfV0sXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAbnVtYmVycycgfSxcbiAgICAgICAgICAgIC8vIFdoaXRlc3BhY2UgKyBjb21tZW50c1xuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQHdoaXRlc3BhY2UnIH0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgL0BkZWxpbWl0ZXJzLyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2VzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnQGtleXdvcmRzJzogJ2tleXdvcmQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BkZWZhdWx0JzogJ2RlbGltaXRlcidcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbL1t7fSgpXFxbXFxdPD5dLywgJ0BicmFja2V0cyddLFxuICAgICAgICAgICAgWy9Ac3ltYm9scy8sIHsgY2FzZXM6IHsgJ0BvcGVyYXRvcnMnOiAnb3BlcmF0b3InLCAnQGRlZmF1bHQnOiAnJyB9IH1dXG4gICAgICAgIF0sXG4gICAgICAgIHdoaXRlc3BhY2U6IFtcbiAgICAgICAgICAgIFsvWyBcXHRcXHJcXG5dKy8sICd3aGl0ZSddLFxuICAgICAgICAgICAgWy9cXC9cXCovLCAnY29tbWVudCcsICdAY29tbWVudCddLFxuICAgICAgICAgICAgWy9cXC9cXC8uKiQvLCAnY29tbWVudCddXG4gICAgICAgIF0sXG4gICAgICAgIGNvbW1lbnQ6IFtcbiAgICAgICAgICAgIFsvW15cXC8qXSsvLCAnY29tbWVudCddLFxuICAgICAgICAgICAgWy9cXC9cXCovLCAnY29tbWVudCcsICdAcHVzaCddLFxuICAgICAgICAgICAgWydcXFxcKi8nLCAnY29tbWVudCcsICdAcG9wJ10sXG4gICAgICAgICAgICBbL1tcXC8qXS8sICdjb21tZW50J11cbiAgICAgICAgXSxcbiAgICAgICAgc3RyaW5nOiBbXG4gICAgICAgICAgICBbL1teXFxcXFwiXSsvLCAnc3RyaW5nJ10sXG4gICAgICAgICAgICBbL0Blc2NhcGVzLywgJ3N0cmluZy5lc2NhcGUnXSxcbiAgICAgICAgICAgIFsvXFxcXC4vLCAnc3RyaW5nLmVzY2FwZS5pbnZhbGlkJ10sXG4gICAgICAgICAgICBbL1wiLywgeyB0b2tlbjogJ3N0cmluZy5xdW90ZScsIGJyYWNrZXQ6ICdAY2xvc2UnLCBuZXh0OiAnQHBvcCcgfV1cbiAgICAgICAgXSxcbiAgICAgICAgbnVtYmVyczogW1xuICAgICAgICAgICAgLy9PY3RhbFxuICAgICAgICAgICAgWy8oMG9bMC03X10rKShAaW50U3VmZml4ZXMpPy8sIHsgdG9rZW46ICdudW1iZXInIH1dLFxuICAgICAgICAgICAgLy9CaW5hcnlcbiAgICAgICAgICAgIFsvKDBiWzAtMV9dKykoQGludFN1ZmZpeGVzKT8vLCB7IHRva2VuOiAnbnVtYmVyJyB9XSxcbiAgICAgICAgICAgIC8vRXhwb25lbnRcbiAgICAgICAgICAgIFsvW1xcZF1bXFxkX10qKFxcLltcXGRdW1xcZF9dKik/W2VFXVsrLV1bXFxkX10rKEBmbG9hdFN1ZmZpeGVzKT8vLCB7IHRva2VuOiAnbnVtYmVyJyB9XSxcbiAgICAgICAgICAgIC8vRmxvYXRcbiAgICAgICAgICAgIFsvXFxiKFxcZFxcLj9bXFxkX10qKShAZmxvYXRTdWZmaXhlcyk/XFxiLywgeyB0b2tlbjogJ251bWJlcicgfV0sXG4gICAgICAgICAgICAvL0hleGFkZWNpbWFsXG4gICAgICAgICAgICBbLygweFtcXGRhLWZBLUZdKylfPyhAaW50U3VmZml4ZXMpPy8sIHsgdG9rZW46ICdudW1iZXInIH1dLFxuICAgICAgICAgICAgLy9JbnRlZ2VyXG4gICAgICAgICAgICBbL1tcXGRdW1xcZF9dKihAaW50U3VmZml4ZXM/KT8vLCB7IHRva2VuOiAnbnVtYmVyJyB9XVxuICAgICAgICBdXG4gICAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js\n");

/***/ })

}]);